{"ast":null,"code":"var _jsxFileName = \"/home/kty/workspace/seb41_pre_001/client/src/components/CommentEditModule.js\";\nimport Editor from './Editors';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\n\n/* \n  \"comments\": [\n    {\n      \"id\": 1,\n      \"createdAt\": \"2022-12-28T17:35:22.259912\",\n      \"likes\": [],\n      \"content\": \" 댓글 내용입니다 \",\n      \"likeCount\": 0\n    },\n*/\n\n/**\n * Created by @ldk199662\n * Modified by @KimTank\n * @returns <Comment>\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentEditModule(_ref) {\n  let {\n    cont\n  } = _ref;\n  const onClickSubmit = async () => {\n    if (cont.length < 10) {\n      alert('내용을 최소 10글자 이상 적어주세요');\n      return false;\n    }\n    axios.post(`${process.env.REACT_APP_EP_COMMENT_CREATE}/${postId}${process.env.REACT_APP_EP_COMMENT}`, {\n      content: cont\n    }, pushDefaultWithToken()).then(() => {\n      axios.get(`${process.env.REACT_APP_EP_POSTS_DETAIL}/${postId}`, {\n        withCredentials: true\n      }).then(response => {\n        const {\n          data\n        } = response;\n        setPost(data);\n        setCont('');\n      }).catch(error => alert(error));\n    }).catch(error => {\n      console.log(error);\n      let errorText;\n      const {\n        message\n      } = error;\n      const code = Number(message.slice(-3));\n      switch (code) {\n        case 401:\n        case 404:\n        case 500:\n        default:\n          errorText = message;\n      }\n      return alert(errorText);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CommentBody, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        value: cont,\n        setValue: handleCont\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: /*#__PURE__*/_jsxDEV(PostButton, {\n        className: \"submit-button\",\n        type: \"button\",\n        onClick: onClickSubmit,\n        children: \"Edit Your Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c = CommentEditModule;\nexport default CommentEditModule;\nconst CommentBody = styled.div`\n  background-color: #ffffff;\n  margin-left: 20px;\n`;\n_c2 = CommentBody;\nconst Buttons = styled.div`\n  display: flex;\n`;\n_c3 = Buttons;\nconst PostButton = styled.button`\n  background-color: hsl(206deg 100% 52%);\n  border-radius: 3px;\n  border: none;\n  color: #ffffff;\n  padding: 13px;\n  margin-top: 30px;\n  margin-bottom: 15px;\n`;\n_c4 = PostButton;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CommentEditModule\");\n$RefreshReg$(_c2, \"CommentBody\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"PostButton\");","map":{"version":3,"names":["Editor","styled","useState","axios","pushDefaultWithToken","CommentEditModule","cont","onClickSubmit","length","alert","post","process","env","REACT_APP_EP_COMMENT_CREATE","postId","REACT_APP_EP_COMMENT","content","then","get","REACT_APP_EP_POSTS_DETAIL","withCredentials","response","data","setPost","setCont","catch","error","console","log","errorText","message","code","Number","slice","handleCont","CommentBody","div","Buttons","PostButton","button"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/components/CommentEditModule.js"],"sourcesContent":["import Editor from './Editors';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\n\n/* \n  \"comments\": [\n    {\n      \"id\": 1,\n      \"createdAt\": \"2022-12-28T17:35:22.259912\",\n      \"likes\": [],\n      \"content\": \" 댓글 내용입니다 \",\n      \"likeCount\": 0\n    },\n*/\n\n/**\n * Created by @ldk199662\n * Modified by @KimTank\n * @returns <Comment>\n */\nfunction CommentEditModule({ cont }) {\n\n  const onClickSubmit = async () => {\n    if (cont.length < 10) {\n      alert('내용을 최소 10글자 이상 적어주세요');\n      return false;\n    }\n\n    axios\n      .post(\n        `${process.env.REACT_APP_EP_COMMENT_CREATE}/${postId}${process.env.REACT_APP_EP_COMMENT}`,\n        {\n          content: cont,\n        },\n        pushDefaultWithToken()\n      )\n      .then(() => {\n        axios\n          .get(`${process.env.REACT_APP_EP_POSTS_DETAIL}/${postId}`, {\n            withCredentials: true,\n          })\n          .then((response) => {\n            const { data } = response;\n            setPost(data);\n            setCont('');\n          })\n          .catch((error) => alert(error));\n      })\n      .catch((error) => {\n        console.log(error);\n        let errorText;\n        const { message } = error;\n        const code = Number(message.slice(-3));\n        switch (code) {\n          case 401:\n          case 404:\n          case 500:\n          default:\n            errorText = message;\n        }\n        return alert(errorText);\n      });\n  };\n\n  return (\n    <CommentBody>\n      <div>\n        <Editor value={cont} setValue={handleCont} />\n      </div>\n      <Buttons>\n        <PostButton\n          className=\"submit-button\"\n          type=\"button\"\n          onClick={onClickSubmit}\n        >\n          Edit Your Answer\n        </PostButton>\n      </Buttons>\n    </CommentBody>\n  );\n}\n\nexport default CommentEditModule;\n\nconst CommentBody = styled.div`\n  background-color: #ffffff;\n  margin-left: 20px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n`;\n\nconst PostButton = styled.button`\n  background-color: hsl(206deg 100% 52%);\n  border-radius: 3px;\n  border: none;\n  color: #ffffff;\n  padding: 13px;\n  margin-top: 30px;\n  margin-bottom: 15px;\n`;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,qBAAqB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAKA,SAASC,iBAAiB,OAAW;EAAA,IAAV;IAAEC;EAAK,CAAC;EAEjC,MAAMC,aAAa,GAAG,YAAY;IAChC,IAAID,IAAI,CAACE,MAAM,GAAG,EAAE,EAAE;MACpBC,KAAK,CAAC,sBAAsB,CAAC;MAC7B,OAAO,KAAK;IACd;IAEAN,KAAK,CACFO,IAAI,CACF,GAAEC,OAAO,CAACC,GAAG,CAACC,2BAA4B,IAAGC,MAAO,GAAEH,OAAO,CAACC,GAAG,CAACG,oBAAqB,EAAC,EACzF;MACEC,OAAO,EAAEV;IACX,CAAC,EACDF,oBAAoB,EAAE,CACvB,CACAa,IAAI,CAAC,MAAM;MACVd,KAAK,CACFe,GAAG,CAAE,GAAEP,OAAO,CAACC,GAAG,CAACO,yBAA0B,IAAGL,MAAO,EAAC,EAAE;QACzDM,eAAe,EAAE;MACnB,CAAC,CAAC,CACDH,IAAI,CAAEI,QAAQ,IAAK;QAClB,MAAM;UAAEC;QAAK,CAAC,GAAGD,QAAQ;QACzBE,OAAO,CAACD,IAAI,CAAC;QACbE,OAAO,CAAC,EAAE,CAAC;MACb,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKjB,KAAK,CAACiB,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAIG,SAAS;MACb,MAAM;QAAEC;MAAQ,CAAC,GAAGJ,KAAK;MACzB,MAAMK,IAAI,GAAGC,MAAM,CAACF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,QAAQF,IAAI;QACV,KAAK,GAAG;QACR,KAAK,GAAG;QACR,KAAK,GAAG;QACR;UACEF,SAAS,GAAGC,OAAO;MAAC;MAExB,OAAOrB,KAAK,CAACoB,SAAS,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAED,oBACE,QAAC,WAAW;IAAA,wBACV;MAAA,uBACE,QAAC,MAAM;QAAC,KAAK,EAAEvB,IAAK;QAAC,QAAQ,EAAE4B;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACzC,eACN,QAAC,OAAO;MAAA,uBACN,QAAC,UAAU;QACT,SAAS,EAAC,eAAe;QACzB,IAAI,EAAC,QAAQ;QACb,OAAO,EAAE3B,aAAc;QAAA,UACxB;MAED;QAAA;QAAA;QAAA;MAAA;IAAa;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAElB;AAAC,KA5DQF,iBAAiB;AA8D1B,eAAeA,iBAAiB;AAEhC,MAAM8B,WAAW,GAAGlC,MAAM,CAACmC,GAAI;AAC/B;AACA;AACA,CAAC;AAAC,MAHID,WAAW;AAKjB,MAAME,OAAO,GAAGpC,MAAM,CAACmC,GAAI;AAC3B;AACA,CAAC;AAAC,MAFIC,OAAO;AAIb,MAAMC,UAAU,GAAGrC,MAAM,CAACsC,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MARID,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}