{"ast":null,"code":"/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport { CssSelectorParser } from 'css-selector-parser';\nimport fauxEsmNthCheck from 'nth-check';\nimport { zwitch } from 'zwitch';\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nvar nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck;\nvar nth = new Set(['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type']);\nvar parser = new CssSelectorParser();\n\n// @ts-expect-error: hush.\nvar compile = zwitch('type', {\n  handlers: {\n    selectors: selectors,\n    ruleSet: ruleSet,\n    rule: rule\n  }\n});\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*');\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has');\nparser.registerNestingOperators('>', '+', '~');\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`');\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector));\n}\n\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\nfunction selectors(query) {\n  var index = -1;\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index]);\n  }\n  return query;\n}\n\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\nfunction ruleSet(query) {\n  return rule(query.rule);\n}\n\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\nfunction rule(query) {\n  var pseudos = query.pseudos || [];\n  var index = -1;\n  while (++index < pseudos.length) {\n    var pseudo = pseudos[index];\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value);\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function';\n    }\n  }\n  compile(query.rule);\n  return query;\n}","map":{"version":3,"names":["CssSelectorParser","fauxEsmNthCheck","zwitch","nthCheck","default","nth","Set","parser","compile","handlers","selectors","ruleSet","rule","registerAttrEqualityMods","registerSelectorPseudos","registerNestingOperators","parse","selector","TypeError","query","index","length","pseudos","pseudo","has","name","value","valueType"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/hast-util-select/lib/parse.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\nfunction selectors(query) {\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    const pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,iBAAiB,QAAO,qBAAqB;AACrD,OAAOC,eAAe,MAAM,WAAW;AACvC,SAAQC,MAAM,QAAO,QAAQ;;AAE7B;AACA;AACA,IAAMC,QAAQ,GAAGF,eAAe,CAACG,OAAO,IAAIH,eAAe;AAE3D,IAAMI,GAAG,GAAG,IAAIC,GAAG,CAAC,CAClB,WAAW,EACX,gBAAgB,EAChB,aAAa,EACb,kBAAkB,CACnB,CAAC;AAEF,IAAMC,MAAM,GAAG,IAAIP,iBAAiB,EAAE;;AAEtC;AACA,IAAMQ,OAAO,GAAGN,MAAM,CAAC,MAAM,EAAE;EAACO,QAAQ,EAAE;IAACC,SAAS,EAATA,SAAS;IAAEC,OAAO,EAAPA,OAAO;IAAEC,IAAI,EAAJA;EAAI;AAAC,CAAC,CAAC;AAEtEL,MAAM,CAACM,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACxDN,MAAM,CAACO,uBAAuB,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;AAC9DP,MAAM,CAACQ,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;AAE9C;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAK,CAACC,QAAQ,EAAE;EAC9B,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,MAAM,IAAIC,SAAS,CAAC,sCAAsC,GAAGD,QAAQ,GAAG,GAAG,CAAC;EAC9E;;EAEA;EACA,OAAOT,OAAO,CAACD,MAAM,CAACS,KAAK,CAACC,QAAQ,CAAC,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA,SAASP,SAAS,CAACS,KAAK,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,OAAO,EAAEA,KAAK,GAAGD,KAAK,CAACT,SAAS,CAACW,MAAM,EAAE;IACvCb,OAAO,CAACW,KAAK,CAACT,SAAS,CAACU,KAAK,CAAC,CAAC;EACjC;EAEA,OAAOD,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA,SAASR,OAAO,CAACQ,KAAK,EAAE;EACtB,OAAOP,IAAI,CAACO,KAAK,CAACP,IAAI,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAASA,IAAI,CAACO,KAAK,EAAE;EACnB,IAAMG,OAAO,GAAGH,KAAK,CAACG,OAAO,IAAI,EAAE;EACnC,IAAIF,KAAK,GAAG,CAAC,CAAC;EAEd,OAAO,EAAEA,KAAK,GAAGE,OAAO,CAACD,MAAM,EAAE;IAC/B,IAAME,MAAM,GAAGD,OAAO,CAACF,KAAK,CAAC;IAE7B,IAAIf,GAAG,CAACmB,GAAG,CAACD,MAAM,CAACE,IAAI,CAAC,EAAE;MACxB;MACAF,MAAM,CAACG,KAAK,GAAGvB,QAAQ,CAACoB,MAAM,CAACG,KAAK,CAAC;MACrC;MACAH,MAAM,CAACI,SAAS,GAAG,UAAU;IAC/B;EACF;EAEAnB,OAAO,CAACW,KAAK,CAACP,IAAI,CAAC;EAEnB,OAAOO,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}