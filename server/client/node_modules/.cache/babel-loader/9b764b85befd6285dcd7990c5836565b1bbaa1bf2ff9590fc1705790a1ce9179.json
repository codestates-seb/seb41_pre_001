{"ast":null,"code":"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {Array<string>} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || [];\n  let index = -1;\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["className","query","element","value","properties","index","classNames","length","includes"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/hast-util-select/lib/class-name.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {Array<string>} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAS,CAACC,KAAK,EAAEC,OAAO,EAAE;EACxC;EACA;EACA,MAAMC,KAAK,GAAGD,OAAO,CAACE,UAAU,CAACJ,SAAS,IAAI,EAAE;EAChD,IAAIK,KAAK,GAAG,CAAC,CAAC;EAEd,IAAIJ,KAAK,CAACK,UAAU,EAAE;IACpB,OAAO,EAAED,KAAK,GAAGJ,KAAK,CAACK,UAAU,CAACC,MAAM,EAAE;MACxC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACP,KAAK,CAACK,UAAU,CAACD,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;IAC5D;EACF;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}