{"ast":null,"code":"/*\r\n * config.js: Default settings for all levels that winston knows about\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n *\r\n */\n\nvar colors = require('colors/safe');\n\n// Fix colors not appearing in non-tty environments\ncolors.enabled = true;\nvar config = exports,\n  allColors = exports.allColors = {};\nconfig.addColors = function (colors) {\n  mixin(allColors, colors);\n};\nconfig.colorize = function (level, message) {\n  if (typeof message === 'undefined') message = level;\n  var colorized = message;\n  if (allColors[level] instanceof Array) {\n    for (var i = 0, l = allColors[level].length; i < l; ++i) {\n      colorized = colors[allColors[level][i]](colorized);\n    }\n  } else if (allColors[level].match(/\\s/)) {\n    var colorArr = allColors[level].split(/\\s+/);\n    for (var i = 0; i < colorArr.length; ++i) {\n      colorized = colors[colorArr[i]](colorized);\n    }\n    allColors[level] = colorArr;\n  } else {\n    colorized = colors[allColors[level]](colorized);\n  }\n  return colorized;\n};\n\n//\n// Export config sets\n//\nconfig.cli = require('./config/cli-config');\nconfig.npm = require('./config/npm-config');\nconfig.syslog = require('./config/syslog-config');\n\n//\n// Add colors for pre-defined config sets\n//\nconfig.addColors(config.cli.colors);\nconfig.addColors(config.npm.colors);\nconfig.addColors(config.syslog.colors);\nfunction mixin(target) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  args.forEach(function (a) {\n    var keys = Object.keys(a);\n    for (var i = 0; i < keys.length; i++) {\n      target[keys[i]] = a[keys[i]];\n    }\n  });\n  return target;\n}\n;","map":{"version":3,"names":["colors","require","enabled","config","exports","allColors","addColors","mixin","colorize","level","message","colorized","Array","i","l","length","match","colorArr","split","cli","npm","syslog","target","args","prototype","slice","call","arguments","forEach","a","keys","Object"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/winston/lib/winston/config.js"],"sourcesContent":["/*\r\n * config.js: Default settings for all levels that winston knows about\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n *\r\n */\r\n\r\nvar colors = require('colors/safe');\r\n\r\n// Fix colors not appearing in non-tty environments\r\ncolors.enabled = true;\r\n\r\nvar config = exports,\r\n    allColors = exports.allColors = {};\r\n\r\nconfig.addColors = function (colors) {\r\n  mixin(allColors, colors);\r\n};\r\n\r\nconfig.colorize = function (level, message) {\r\n  if (typeof message === 'undefined') message = level;\r\n\r\n  var colorized = message;\r\n  if (allColors[level] instanceof Array) {\r\n    for (var i = 0, l = allColors[level].length; i < l; ++i) {\r\n      colorized = colors[allColors[level][i]](colorized);\r\n    }\r\n  }\r\n  else if (allColors[level].match(/\\s/)) {\r\n    var colorArr = allColors[level].split(/\\s+/);\r\n    for (var i = 0; i < colorArr.length; ++i) {\r\n      colorized = colors[colorArr[i]](colorized);\r\n    }\r\n    allColors[level] = colorArr;\r\n  }\r\n  else {\r\n    colorized = colors[allColors[level]](colorized);\r\n  }\r\n\r\n  return colorized;\r\n};\r\n\r\n//\r\n// Export config sets\r\n//\r\nconfig.cli    = require('./config/cli-config');\r\nconfig.npm    = require('./config/npm-config');\r\nconfig.syslog = require('./config/syslog-config');\r\n\r\n//\r\n// Add colors for pre-defined config sets\r\n//\r\nconfig.addColors(config.cli.colors);\r\nconfig.addColors(config.npm.colors);\r\nconfig.addColors(config.syslog.colors);\r\n\r\nfunction mixin (target) {\r\n  var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  args.forEach(function (a) {\r\n    var keys = Object.keys(a);\r\n    for (var i = 0; i < keys.length; i++) {\r\n      target[keys[i]] = a[keys[i]];\r\n    }\r\n  });\r\n  return target;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnC;AACAD,MAAM,CAACE,OAAO,GAAG,IAAI;AAErB,IAAIC,MAAM,GAAGC,OAAO;EAChBC,SAAS,GAAGD,OAAO,CAACC,SAAS,GAAG,CAAC,CAAC;AAEtCF,MAAM,CAACG,SAAS,GAAG,UAAUN,MAAM,EAAE;EACnCO,KAAK,CAACF,SAAS,EAAEL,MAAM,CAAC;AAC1B,CAAC;AAEDG,MAAM,CAACK,QAAQ,GAAG,UAAUC,KAAK,EAAEC,OAAO,EAAE;EAC1C,IAAI,OAAOA,OAAO,KAAK,WAAW,EAAEA,OAAO,GAAGD,KAAK;EAEnD,IAAIE,SAAS,GAAGD,OAAO;EACvB,IAAIL,SAAS,CAACI,KAAK,CAAC,YAAYG,KAAK,EAAE;IACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGT,SAAS,CAACI,KAAK,CAAC,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;MACvDF,SAAS,GAAGX,MAAM,CAACK,SAAS,CAACI,KAAK,CAAC,CAACI,CAAC,CAAC,CAAC,CAACF,SAAS,CAAC;IACpD;EACF,CAAC,MACI,IAAIN,SAAS,CAACI,KAAK,CAAC,CAACO,KAAK,CAAC,IAAI,CAAC,EAAE;IACrC,IAAIC,QAAQ,GAAGZ,SAAS,CAACI,KAAK,CAAC,CAACS,KAAK,CAAC,KAAK,CAAC;IAC5C,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,QAAQ,CAACF,MAAM,EAAE,EAAEF,CAAC,EAAE;MACxCF,SAAS,GAAGX,MAAM,CAACiB,QAAQ,CAACJ,CAAC,CAAC,CAAC,CAACF,SAAS,CAAC;IAC5C;IACAN,SAAS,CAACI,KAAK,CAAC,GAAGQ,QAAQ;EAC7B,CAAC,MACI;IACHN,SAAS,GAAGX,MAAM,CAACK,SAAS,CAACI,KAAK,CAAC,CAAC,CAACE,SAAS,CAAC;EACjD;EAEA,OAAOA,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACAR,MAAM,CAACgB,GAAG,GAAMlB,OAAO,CAAC,qBAAqB,CAAC;AAC9CE,MAAM,CAACiB,GAAG,GAAMnB,OAAO,CAAC,qBAAqB,CAAC;AAC9CE,MAAM,CAACkB,MAAM,GAAGpB,OAAO,CAAC,wBAAwB,CAAC;;AAEjD;AACA;AACA;AACAE,MAAM,CAACG,SAAS,CAACH,MAAM,CAACgB,GAAG,CAACnB,MAAM,CAAC;AACnCG,MAAM,CAACG,SAAS,CAACH,MAAM,CAACiB,GAAG,CAACpB,MAAM,CAAC;AACnCG,MAAM,CAACG,SAAS,CAACH,MAAM,CAACkB,MAAM,CAACrB,MAAM,CAAC;AAEtC,SAASO,KAAK,CAAEe,MAAM,EAAE;EACtB,IAAIC,IAAI,GAAGX,KAAK,CAACY,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;EAEnDJ,IAAI,CAACK,OAAO,CAAC,UAAUC,CAAC,EAAE;IACxB,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,CAAC,CAAC;IACzB,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiB,IAAI,CAACf,MAAM,EAAEF,CAAC,EAAE,EAAE;MACpCS,MAAM,CAACQ,IAAI,CAACjB,CAAC,CAAC,CAAC,GAAGgB,CAAC,CAACC,IAAI,CAACjB,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC,CAAC;EACF,OAAOS,MAAM;AACf;AAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}