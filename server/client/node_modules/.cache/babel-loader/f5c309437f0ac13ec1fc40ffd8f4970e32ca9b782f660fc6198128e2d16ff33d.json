{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar ErrorReportingMixinBase = require('./mixin-base');\nvar ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nvar Mixin = require('../../utils/mixin');\nvar ErrorReportingTokenizerMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {\n  _inherits(ErrorReportingTokenizerMixin, _ErrorReportingMixinB);\n  var _super = _createSuper(ErrorReportingTokenizerMixin);\n  function ErrorReportingTokenizerMixin(tokenizer, opts) {\n    var _this;\n    _classCallCheck(this, ErrorReportingTokenizerMixin);\n    _this = _super.call(this, tokenizer, opts);\n    var preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n    _this.posTracker = preprocessorMixin.posTracker;\n    return _this;\n  }\n  return _createClass(ErrorReportingTokenizerMixin);\n}(ErrorReportingMixinBase);\nmodule.exports = ErrorReportingTokenizerMixin;","map":{"version":3,"names":["ErrorReportingMixinBase","require","ErrorReportingPreprocessorMixin","Mixin","ErrorReportingTokenizerMixin","tokenizer","opts","preprocessorMixin","install","preprocessor","posTracker","module","exports"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"],"sourcesContent":["'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,uBAAuB,GAAGC,OAAO,CAAC,cAAc,CAAC;AACvD,IAAMC,+BAA+B,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AACvE,IAAME,KAAK,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAAC,IAErCG,4BAA4B;EAAA;EAAA;EAC9B,sCAAYC,SAAS,EAAEC,IAAI,EAAE;IAAA;IAAA;IACzB,0BAAMD,SAAS,EAAEC,IAAI;IAErB,IAAMC,iBAAiB,GAAGJ,KAAK,CAACK,OAAO,CAACH,SAAS,CAACI,YAAY,EAAEP,+BAA+B,EAAEI,IAAI,CAAC;IAEtG,MAAKI,UAAU,GAAGH,iBAAiB,CAACG,UAAU;IAAC;EACnD;EAAC;AAAA,EAPsCV,uBAAuB;AAUlEW,MAAM,CAACC,OAAO,GAAGR,4BAA4B"},"metadata":{},"sourceType":"script","externalDependencies":[]}