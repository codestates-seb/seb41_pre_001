{"ast":null,"code":"var _jsxFileName = \"/home/kty/workspace/seb41_pre_001/client/src/components/ModalPostDelete.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { IS_ALIVE, logout } from '../util/tokenHelper';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\nimport CommonButton, { BUTTON_TYPE_USER, BUTTON_TYPE_USER_DELETE } from './CommonButton';\nimport LabelInput from './LabelInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { deleteModalIsOpen, setIsDeleteModalOpen }\n * @returns <Modal>\n */\nfunction ModalPostDelete(_ref) {\n  _s();\n  let {\n    deleteModalIsOpen,\n    setIsDeleteModalOpen,\n    post\n  } = _ref;\n  const navigate = useNavigate();\n  const handleDelete = () => {\n    axios.delete(`${process.env.REACT_APP_EP_POSTS_DELETE}/${post.id}`, pushDefaultWithToken()).then(() => {\n      navigate('/');\n      closeModal();\n    }).catch(error => {\n      let errorText;\n      const {\n        message\n      } = error;\n      const code = Number(message.slice(-3));\n      switch (code) {\n        case 401:\n        case 404:\n        case 500:\n        default:\n          errorText = message;\n      }\n      return alert(errorText);\n    });\n  };\n  const closeModal = () => {\n    setIsDeleteModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: deleteModalIsOpen,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Delete post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER_DELETE,\n      onClick: handleDelete,\n      cont: 'Delete'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER,\n      onClick: closeModal,\n      cont: 'Close'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalPostDelete, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ModalPostDelete;\nexport default ModalPostDelete;\nvar _c;\n$RefreshReg$(_c, \"ModalPostDelete\");","map":{"version":3,"names":["axios","useNavigate","useState","Modal","IS_ALIVE","logout","pushDefaultWithToken","CommonButton","BUTTON_TYPE_USER","BUTTON_TYPE_USER_DELETE","LabelInput","customStyles","content","top","left","right","bottom","marginRight","transform","ModalPostDelete","deleteModalIsOpen","setIsDeleteModalOpen","post","navigate","handleDelete","delete","process","env","REACT_APP_EP_POSTS_DELETE","id","then","closeModal","catch","error","errorText","message","code","Number","slice","alert"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/components/ModalPostDelete.js"],"sourcesContent":["import axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { IS_ALIVE, logout } from '../util/tokenHelper';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\nimport CommonButton, {\n  BUTTON_TYPE_USER,\n  BUTTON_TYPE_USER_DELETE,\n} from './CommonButton';\nimport LabelInput from './LabelInput';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { deleteModalIsOpen, setIsDeleteModalOpen }\n * @returns <Modal>\n */\nfunction ModalPostDelete({ deleteModalIsOpen, setIsDeleteModalOpen, post }) {\n  const navigate = useNavigate();\n\n  const handleDelete = () => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_EP_POSTS_DELETE}/${post.id}`,\n        pushDefaultWithToken()\n      )\n      .then(() => {\n        navigate('/');\n        closeModal();\n      })\n      .catch((error) => {\n        let errorText;\n        const { message } = error;\n        const code = Number(message.slice(-3));\n        switch (code) {\n          case 401:\n          case 404:\n          case 500:\n          default:\n            errorText = message;\n        }\n        return alert(errorText);\n      });\n  };\n\n  const closeModal = () => {\n    setIsDeleteModalOpen(false);\n  };\n  return (\n    <Modal\n      isOpen={deleteModalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Delete post\"\n    >\n      <h2>Delete Post</h2>\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER_DELETE}\n        onClick={handleDelete}\n        cont={'Delete'}\n      />\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER}\n        onClick={closeModal}\n        cont={'Close'}\n      />\n    </Modal>\n  );\n}\n\nexport default ModalPostDelete;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,EAAEC,MAAM,QAAQ,qBAAqB;AACtD,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,OAAOC,YAAY,IACjBC,gBAAgB,EAChBC,uBAAuB,QAClB,gBAAgB;AACvB,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;IACPC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,MAAM;IACnBC,SAAS,EAAE;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAe,OAAoD;EAAA;EAAA,IAAnD;IAAEC,iBAAiB;IAAEC,oBAAoB;IAAEC;EAAK,CAAC;EACxE,MAAMC,QAAQ,GAAGtB,WAAW,EAAE;EAE9B,MAAMuB,YAAY,GAAG,MAAM;IACzBxB,KAAK,CACFyB,MAAM,CACJ,GAAEC,OAAO,CAACC,GAAG,CAACC,yBAA0B,IAAGN,IAAI,CAACO,EAAG,EAAC,EACrDvB,oBAAoB,EAAE,CACvB,CACAwB,IAAI,CAAC,MAAM;MACVP,QAAQ,CAAC,GAAG,CAAC;MACbQ,UAAU,EAAE;IACd,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIC,SAAS;MACb,MAAM;QAAEC;MAAQ,CAAC,GAAGF,KAAK;MACzB,MAAMG,IAAI,GAAGC,MAAM,CAACF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,QAAQF,IAAI;QACV,KAAK,GAAG;QACR,KAAK,GAAG;QACR,KAAK,GAAG;QACR;UACEF,SAAS,GAAGC,OAAO;MAAC;MAExB,OAAOI,KAAK,CAACL,SAAS,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAED,MAAMH,UAAU,GAAG,MAAM;IACvBV,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EACD,oBACE,QAAC,KAAK;IACJ,MAAM,EAAED,iBAAkB;IAC1B,cAAc,EAAEW,UAAW;IAC3B,KAAK,EAAEpB,YAAa;IACpB,YAAY,EAAC,aAAa;IAAA,wBAE1B;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB,QAAC,YAAY;MACX,UAAU,EAAEF,uBAAwB;MACpC,OAAO,EAAEe,YAAa;MACtB,IAAI,EAAE;IAAS;MAAA;MAAA;MAAA;IAAA,QACf,eACF,QAAC,YAAY;MACX,UAAU,EAAEhB,gBAAiB;MAC7B,OAAO,EAAEuB,UAAW;MACpB,IAAI,EAAE;IAAQ;MAAA;MAAA;MAAA;IAAA,QACd;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEZ;AAAC,GAnDQZ,eAAe;EAAA,QACLlB,WAAW;AAAA;AAAA,KADrBkB,eAAe;AAqDxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}