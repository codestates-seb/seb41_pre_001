{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","map":{"version":3,"names":["markdownLineEndingOrSpace","unicodePunctuation","unicodeWhitespace","classifyCharacter","code"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/micromark-util-classify-character/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SACEA,yBAAyB,EACzBC,kBAAkB,EAClBC,iBAAiB,QACZ,0BAA0B;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiB,CAACC,IAAI,EAAE;EACtC,IACEA,IAAI,KAAK,IAAI,IACbJ,yBAAyB,CAACI,IAAI,CAAC,IAC/BF,iBAAiB,CAACE,IAAI,CAAC,EACvB;IACA,OAAO,CAAC;EACV;EAEA,IAAIH,kBAAkB,CAACG,IAAI,CAAC,EAAE;IAC5B,OAAO,CAAC;EACV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}