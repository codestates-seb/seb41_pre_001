{"ast":null,"code":"import _objectSpread from \"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\nvar rehypeAttrs = function rehypeAttrs() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$properties = options.properties,\n    properties = _options$properties === void 0 ? 'data' : _options$properties,\n    _options$codeBlockPar = options.codeBlockParames,\n    codeBlockParames = _options$codeBlockPar === void 0 ? true : _options$codeBlockPar;\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        var firstChild = node.children[0];\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          var child = prevChild(parent.children, index);\n          if (child) {\n            var attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = _objectSpread(_objectSpread({}, node.properties), {\n                'data-type': 'rehyp'\n              });\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties);\n            }\n          }\n        }\n      }\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        var _child = nextChild(parent.children, index, '', codeBlockParames);\n        if (_child) {\n          var _attr = getCommentObject(_child);\n          if (Object.keys(_attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, _attr, properties);\n          }\n        }\n      }\n    });\n  };\n};\nexport default rehypeAttrs;","map":{"version":3,"mappings":";AAEA,SAASA,KAAK,QAAQ,kBAAkB;AACxC,SAASC,gBAAgB,EAAEC,SAAS,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,YAAU;AA+CnF,IAAMC,WAAW,GAAwC,SAAnDA,WAAW,GAAyD;EAAA,IAAhBC,OAAO,uEAAG,EAAE;EACpE,0BAAyDA,OAAO,CAAxDC,UAAU;IAAVA,UAAU,oCAAG,MAAM;IAAA,wBAA8BD,OAAO,CAAnCE,gBAAgB;IAAhBA,gBAAgB,sCAAG,IAAI;EACpD,OAAO,UAACC,IAAI,EAAI;IACdT,KAAK,CAACS,IAAI,EAAE,SAAS,EAAE,UAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAI;MAC7C,IAAIJ,gBAAgB,IAAIE,IAAI,CAACG,OAAO,KAAK,KAAK,IAAIH,IAAI,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAACM,QAAQ,CAAC,IAAIJ,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,QAAQ,CAAC,IAAIJ,MAAM,CAACI,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QAChK,IAAMC,UAAU,GAAGR,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAY;QAC9C,IAAIE,UAAU,IAAIA,UAAU,CAACL,OAAO,KAAK,MAAM,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAAE;UAC5E,IAAMQ,KAAK,GAAGhB,SAAS,CAACS,MAAM,CAACI,QAAqB,EAAEL,KAAK,CAAC;UAC5D,IAAIQ,KAAK,EAAE;YACT,IAAMC,IAAI,GAAGhB,gBAAgB,CAACe,KAAK,CAAC;YACpC,IAAIE,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACH,MAAM,GAAG,CAAC,EAAE;cAChCP,IAAI,CAACH,UAAU,mCAAQG,IAAI,CAACH,UAAU,GAAK;gBAAE,WAAW,EAAE;cAAO,CAAE,CAAE;cACrEW,UAAU,CAACX,UAAU,GAAGN,gBAAgB,CAACiB,UAAU,CAACX,UAAU,EAAEa,IAAI,EAAEb,UAAU,CAAe;;;;;MAMvG,IAAI,kFAAkF,CAACgB,IAAI,CAACb,IAAI,CAACG,OAAO,CAAC,IAAID,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,QAAQ,CAAC,IAAI,OAAOL,KAAK,KAAK,QAAQ,EAAE;QAClL,IAAMQ,MAAK,GAAGjB,SAAS,CAACU,MAAM,CAACI,QAAQ,EAAEL,KAAK,EAAE,EAAE,EAAEH,gBAAgB,CAAC;QACrE,IAAIW,MAAK,EAAE;UACT,IAAMC,KAAI,GAAGhB,gBAAgB,CAACe,MAAgB,CAAC;UAC/C,IAAIE,MAAM,CAACC,IAAI,CAACF,KAAI,CAAC,CAACH,MAAM,GAAG,CAAC,EAAE;YAChCP,IAAI,CAACH,UAAU,GAAGN,gBAAgB,CAACS,IAAI,CAACH,UAAU,EAAEa,KAAI,EAAEb,UAAU,CAAe;;;;IAI3F,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAGD,eAAeF,WAAW","names":["visit","propertiesHandle","nextChild","prevChild","getCommentObject","rehypeAttrs","options","properties","codeBlockParames","tree","node","index","parent","tagName","Array","isArray","children","length","firstChild","child","attr","Object","keys","test"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/rehype-attr/src/index.ts"],"sourcesContent":["import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}