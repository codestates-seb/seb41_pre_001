{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n\n/** @type {Construct} */\nexport var labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n/** @type {Construct} */\n\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\n\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n};\n/** @type {Construct} */\n\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n};\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1;\n  /** @type {Token} */\n\n  var token;\n  while (++index < events.length) {\n    token = events[index][1];\n    if (token.type === 'labelImage' || token.type === 'labelLink' || token.type === 'labelEnd') {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2);\n      token.type = 'data';\n      index++;\n    }\n  }\n  return events;\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length;\n  var offset = 0;\n  /** @type {Token} */\n\n  var token;\n  /** @type {number|undefined} */\n\n  var open;\n  /** @type {number|undefined} */\n\n  var close;\n  /** @type {Event[]} */\n\n  var media; // Find an opening.\n\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === 'link' || token.type === 'labelLink' && token._inactive) {\n        break;\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === 'labelImage' || token.type === 'labelLink') && !token._balanced) {\n        open = index;\n        if (token.type !== 'labelLink') {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index;\n    }\n  }\n  var group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  var label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  var text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]]; // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)); // Text open.\n\n  media = push(media, [['enter', text, context]]); // Between.\n\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context)); // Text close, marker close, label close.\n\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]); // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)); // Media close.\n\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this;\n  var index = self.events.length;\n  /** @type {Token} */\n\n  var labelStart;\n  /** @type {boolean} */\n\n  var defined; // Find an opening.\n\n  while (index--) {\n    if ((self.events[index][1].type === 'labelImage' || self.events[index][1].type === 'labelLink') && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code);\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code);\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter('labelEnd');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelEnd');\n    return afterLabelEnd;\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, ok, defined ? ok : balanced)(code);\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(fullReferenceConstruct, ok, defined ? effects.attempt(collapsedReferenceConstruct, ok, balanced) : balanced)(code);\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code);\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource');\n    effects.enter('resourceMarker');\n    effects.consume(code);\n    effects.exit('resourceMarker');\n    return factoryWhitespace(effects, open);\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code);\n    }\n    return factoryDestination(effects, destinationAfter, nok, 'resourceDestination', 'resourceDestinationLiteral', 'resourceDestinationLiteralMarker', 'resourceDestinationRaw', 'resourceDestinationString', 32)(code);\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, between)(code) : end(code);\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, factoryWhitespace(effects, end), nok, 'resourceTitle', 'resourceTitleMarker', 'resourceTitleString')(code);\n    }\n    return end(code);\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker');\n      effects.consume(code);\n      effects.exit('resourceMarker');\n      effects.exit('resource');\n      return ok;\n    }\n    return nok(code);\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(self, effects, afterLabel, nok, 'reference', 'referenceMarker', 'referenceString')(code);\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference');\n    effects.enter('referenceMarker');\n    effects.consume(code);\n    effects.exit('referenceMarker');\n    return open;\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker');\n      effects.consume(code);\n      effects.exit('referenceMarker');\n      effects.exit('reference');\n      return ok;\n    }\n    return nok(code);\n  }\n}","map":{"version":3,"names":["factoryDestination","factoryLabel","factoryTitle","factoryWhitespace","markdownLineEndingOrSpace","push","splice","normalizeIdentifier","resolveAll","labelEnd","name","tokenize","tokenizeLabelEnd","resolveTo","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","fullReferenceConstruct","tokenizeFullReference","collapsedReferenceConstruct","tokenizeCollapsedReference","events","index","token","length","type","context","offset","open","close","media","_inactive","_balanced","group","start","Object","assign","end","label","text","slice","parser","constructs","insideSpan","null","effects","ok","nok","self","labelStart","defined","code","balanced","includes","sliceSerialize","now","enter","consume","exit","afterLabelEnd","attempt","destinationAfter","between","call","afterLabel"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/micromark-core-commonmark/lib/label-end.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}