{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n\n/** @type {Construct} */\nexport var blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix');\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","map":{"version":3,"names":["factorySpace","markdownLineEnding","blankLine","tokenize","tokenizeBlankLine","partial","effects","ok","nok","afterWhitespace","code"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/micromark-core-commonmark/lib/blank-line.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAAQA,YAAY,QAAO,yBAAyB;AACpD,SAAQC,kBAAkB,QAAO,0BAA0B;;AAE3D;AACA,OAAO,IAAMC,SAAS,GAAG;EACvBC,QAAQ,EAAEC,iBAAiB;EAC3BC,OAAO,EAAE;AACX,CAAC;AACD;;AAEA,SAASD,iBAAiB,CAACE,OAAO,EAAEC,EAAE,EAAEC,GAAG,EAAE;EAC3C,OAAOR,YAAY,CAACM,OAAO,EAAEG,eAAe,EAAE,YAAY,CAAC;EAC3D;;EAEA,SAASA,eAAe,CAACC,IAAI,EAAE;IAC7B,OAAOA,IAAI,KAAK,IAAI,IAAIT,kBAAkB,CAACS,IAAI,CAAC,GAAGH,EAAE,CAACG,IAAI,CAAC,GAAGF,GAAG,CAACE,IAAI,CAAC;EACzE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}