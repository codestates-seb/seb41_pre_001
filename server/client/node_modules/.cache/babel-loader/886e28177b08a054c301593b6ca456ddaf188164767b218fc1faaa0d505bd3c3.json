{"ast":null,"code":"'use strict';\n\n//Const\nvar _classCallCheck = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nvar FormattingElementList = /*#__PURE__*/function () {\n  function FormattingElementList(treeAdapter) {\n    _classCallCheck(this, FormattingElementList);\n    this.length = 0;\n    this.entries = [];\n    this.treeAdapter = treeAdapter;\n    this.bookmark = null;\n  }\n\n  //Noah Ark's condition\n  //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n  //lightweight heuristics without thorough attributes check.\n  _createClass(FormattingElementList, [{\n    key: \"_getNoahArkConditionCandidates\",\n    value: function _getNoahArkConditionCandidates(newElement) {\n      var candidates = [];\n      if (this.length >= NOAH_ARK_CAPACITY) {\n        var neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\n        var neTagName = this.treeAdapter.getTagName(newElement);\n        var neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (var i = this.length - 1; i >= 0; i--) {\n          var entry = this.entries[i];\n          if (entry.type === FormattingElementList.MARKER_ENTRY) {\n            break;\n          }\n          var element = entry.element;\n          var elementAttrs = this.treeAdapter.getAttrList(element);\n          var isCandidate = this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI && elementAttrs.length === neAttrsLength;\n          if (isCandidate) {\n            candidates.push({\n              idx: i,\n              attrs: elementAttrs\n            });\n          }\n        }\n      }\n      return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n    }\n  }, {\n    key: \"_ensureNoahArkCondition\",\n    value: function _ensureNoahArkCondition(newElement) {\n      var candidates = this._getNoahArkConditionCandidates(newElement);\n      var cLength = candidates.length;\n      if (cLength) {\n        var neAttrs = this.treeAdapter.getAttrList(newElement);\n        var neAttrsLength = neAttrs.length;\n        var neAttrsMap = Object.create(null);\n\n        //NOTE: build attrs map for the new element so we can perform fast lookups\n        for (var i = 0; i < neAttrsLength; i++) {\n          var neAttr = neAttrs[i];\n          neAttrsMap[neAttr.name] = neAttr.value;\n        }\n        for (var _i = 0; _i < neAttrsLength; _i++) {\n          for (var j = 0; j < cLength; j++) {\n            var cAttr = candidates[j].attrs[_i];\n            if (neAttrsMap[cAttr.name] !== cAttr.value) {\n              candidates.splice(j, 1);\n              cLength--;\n            }\n            if (candidates.length < NOAH_ARK_CAPACITY) {\n              return;\n            }\n          }\n        }\n\n        //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n        for (var _i2 = cLength - 1; _i2 >= NOAH_ARK_CAPACITY - 1; _i2--) {\n          this.entries.splice(candidates[_i2].idx, 1);\n          this.length--;\n        }\n      }\n    }\n\n    //Mutations\n  }, {\n    key: \"insertMarker\",\n    value: function insertMarker() {\n      this.entries.push({\n        type: FormattingElementList.MARKER_ENTRY\n      });\n      this.length++;\n    }\n  }, {\n    key: \"pushElement\",\n    value: function pushElement(element, token) {\n      this._ensureNoahArkCondition(element);\n      this.entries.push({\n        type: FormattingElementList.ELEMENT_ENTRY,\n        element: element,\n        token: token\n      });\n      this.length++;\n    }\n  }, {\n    key: \"insertElementAfterBookmark\",\n    value: function insertElementAfterBookmark(element, token) {\n      var bookmarkIdx = this.length - 1;\n      for (; bookmarkIdx >= 0; bookmarkIdx--) {\n        if (this.entries[bookmarkIdx] === this.bookmark) {\n          break;\n        }\n      }\n      this.entries.splice(bookmarkIdx + 1, 0, {\n        type: FormattingElementList.ELEMENT_ENTRY,\n        element: element,\n        token: token\n      });\n      this.length++;\n    }\n  }, {\n    key: \"removeEntry\",\n    value: function removeEntry(entry) {\n      for (var i = this.length - 1; i >= 0; i--) {\n        if (this.entries[i] === entry) {\n          this.entries.splice(i, 1);\n          this.length--;\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"clearToLastMarker\",\n    value: function clearToLastMarker() {\n      while (this.length) {\n        var entry = this.entries.pop();\n        this.length--;\n        if (entry.type === FormattingElementList.MARKER_ENTRY) {\n          break;\n        }\n      }\n    }\n\n    //Search\n  }, {\n    key: \"getElementEntryInScopeWithTagName\",\n    value: function getElementEntryInScopeWithTagName(tagName) {\n      for (var i = this.length - 1; i >= 0; i--) {\n        var entry = this.entries[i];\n        if (entry.type === FormattingElementList.MARKER_ENTRY) {\n          return null;\n        }\n        if (this.treeAdapter.getTagName(entry.element) === tagName) {\n          return entry;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getElementEntry\",\n    value: function getElementEntry(element) {\n      for (var i = this.length - 1; i >= 0; i--) {\n        var entry = this.entries[i];\n        if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\n          return entry;\n        }\n      }\n      return null;\n    }\n  }]);\n  return FormattingElementList;\n}(); //Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\nmodule.exports = FormattingElementList;","map":{"version":3,"names":["NOAH_ARK_CAPACITY","FormattingElementList","treeAdapter","length","entries","bookmark","newElement","candidates","neAttrsLength","getAttrList","neTagName","getTagName","neNamespaceURI","getNamespaceURI","i","entry","type","MARKER_ENTRY","element","elementAttrs","isCandidate","push","idx","attrs","_getNoahArkConditionCandidates","cLength","neAttrs","neAttrsMap","Object","create","neAttr","name","value","j","cAttr","splice","token","_ensureNoahArkCondition","ELEMENT_ENTRY","bookmarkIdx","pop","tagName","module","exports"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/parse5/lib/parser/formatting-element-list.js"],"sourcesContent":["'use strict';\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter) {\n        this.length = 0;\n        this.entries = [];\n        this.treeAdapter = treeAdapter;\n        this.bookmark = null;\n    }\n\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement) {\n        const candidates = [];\n\n        if (this.length >= NOAH_ARK_CAPACITY) {\n            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\n            const neTagName = this.treeAdapter.getTagName(newElement);\n            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n            for (let i = this.length - 1; i >= 0; i--) {\n                const entry = this.entries[i];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                    break;\n                }\n\n                const element = entry.element;\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n\n                const isCandidate =\n                    this.treeAdapter.getTagName(element) === neTagName &&\n                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\n                    elementAttrs.length === neAttrsLength;\n\n                if (isCandidate) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n\n        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n    }\n\n    _ensureNoahArkCondition(newElement) {\n        const candidates = this._getNoahArkConditionCandidates(newElement);\n        let cLength = candidates.length;\n\n        if (cLength) {\n            const neAttrs = this.treeAdapter.getAttrList(newElement);\n            const neAttrsLength = neAttrs.length;\n            const neAttrsMap = Object.create(null);\n\n            //NOTE: build attrs map for the new element so we can perform fast lookups\n            for (let i = 0; i < neAttrsLength; i++) {\n                const neAttr = neAttrs[i];\n\n                neAttrsMap[neAttr.name] = neAttr.value;\n            }\n\n            for (let i = 0; i < neAttrsLength; i++) {\n                for (let j = 0; j < cLength; j++) {\n                    const cAttr = candidates[j].attrs[i];\n\n                    if (neAttrsMap[cAttr.name] !== cAttr.value) {\n                        candidates.splice(j, 1);\n                        cLength--;\n                    }\n\n                    if (candidates.length < NOAH_ARK_CAPACITY) {\n                        return;\n                    }\n                }\n            }\n\n            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n                this.entries.splice(candidates[i].idx, 1);\n                this.length--;\n            }\n        }\n    }\n\n    //Mutations\n    insertMarker() {\n        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });\n        this.length++;\n    }\n\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n\n        this.entries.push({\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    insertElementAfterBookmark(element, token) {\n        let bookmarkIdx = this.length - 1;\n\n        for (; bookmarkIdx >= 0; bookmarkIdx--) {\n            if (this.entries[bookmarkIdx] === this.bookmark) {\n                break;\n            }\n        }\n\n        this.entries.splice(bookmarkIdx + 1, 0, {\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    removeEntry(entry) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (this.entries[i] === entry) {\n                this.entries.splice(i, 1);\n                this.length--;\n                break;\n            }\n        }\n    }\n\n    clearToLastMarker() {\n        while (this.length) {\n            const entry = this.entries.pop();\n\n            this.length--;\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                break;\n            }\n        }\n    }\n\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                return null;\n            }\n\n            if (this.treeAdapter.getTagName(entry.element) === tagName) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n\n    getElementEntry(element) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n}\n\n//Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\n\nmodule.exports = FormattingElementList;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}