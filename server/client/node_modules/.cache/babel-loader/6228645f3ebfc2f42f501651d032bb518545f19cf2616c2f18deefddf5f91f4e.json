{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nprocessing.displayName = 'processing';\nprocessing.aliases = [];\n\n/** @type {import('../core.js').Syntax} */\nexport default function processing(Prism) {\n  Prism.register(refractorClike);\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  });\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  });\n}","map":{"version":3,"names":["refractorClike","processing","displayName","aliases","Prism","register","languages","extend","keyword","function","operator","insertBefore","constant","type","pattern","alias"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/processing.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nprocessing.displayName = 'processing'\nprocessing.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function processing(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAc,MAAM,YAAY;AACvCC,UAAU,CAACC,WAAW,GAAG,YAAY;AACrCD,UAAU,CAACE,OAAO,GAAG,EAAE;;AAEvB;AACA,eAAe,SAASF,UAAU,CAACG,KAAK,EAAE;EACxCA,KAAK,CAACC,QAAQ,CAACL,cAAc,CAAC;EAC9BI,KAAK,CAACE,SAAS,CAACL,UAAU,GAAGG,KAAK,CAACE,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE;IAC3DC,OAAO,EACL,oKAAoK;IACtK;IACAC,QAAQ,EAAE,gBAAgB;IAC1BC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFN,KAAK,CAACE,SAAS,CAACK,YAAY,CAAC,YAAY,EAAE,QAAQ,EAAE;IACnD;IACAC,QAAQ,EAAE,6BAA6B;IACvCC,IAAI,EAAE;MACJC,OAAO,EAAE,2DAA2D;MACpEC,KAAK,EAAE;IACT;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}