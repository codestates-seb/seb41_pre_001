{"ast":null,"code":"import _defineProperty from \"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var single = options.singleTilde;\n  var tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: _defineProperty({}, 126, tokenizer),\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    var index = -1; // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        var open = index; // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n            var strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n            var text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }; // Opening.\n\n            var nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]]; // Between.\n\n            splice(nextEvents, nextEvents.length, 0, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context)); // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data';\n      }\n    }\n    return events;\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    var previous = this.previous;\n    var events = this.events;\n    var size = 0;\n    return start;\n    /** @type {State} */\n\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== 'characterEscape') {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n    /** @type {State} */\n\n    function more(code) {\n      var before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      var token = effects.exit('strikethroughSequenceTemporary');\n      var after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","map":{"version":3,"names":["splice","classifyCharacter","resolveAll","gfmStrikethrough","options","single","singleTilde","tokenizer","tokenize","tokenizeStrikethrough","resolveAllStrikethrough","undefined","text","insideSpan","null","attentionMarkers","events","context","index","length","type","_close","open","_open","end","offset","start","strikethrough","Object","assign","nextEvents","parser","constructs","slice","effects","ok","nok","previous","size","code","enter","more","before","consume","token","exit","after","Boolean"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}