{"ast":null,"code":"/*\r\n * winston.js: Top-level include defining Winston.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n *\r\n */\n\nvar winston = exports;\n\n//\n// use require method for webpack bundle\n//\nwinston.version = require('../package.json').version;\n\n//\n// Include transports defined by default by winston\n//\nwinston.transports = require('./winston/transports');\n\n//\n// Expose utility methods\n//\nvar common = require('./winston/common');\nwinston.hash = common.hash;\nwinston.clone = common.clone;\nwinston.longestElement = common.longestElement;\nwinston.exception = require('./winston/exception');\nwinston.config = require('./winston/config');\nwinston.addColors = winston.config.addColors;\n\n//\n// Expose core Logging-related prototypes.\n//\nwinston.Container = require('./winston/container').Container;\nwinston.Logger = require('./winston/logger').Logger;\nwinston.Transport = require('./winston/transports/transport').Transport;\n\n//\n// We create and expose a default `Container` to `winston.loggers` so that the\n// programmer may manage multiple `winston.Logger` instances without any additional overhead.\n//\n// ### some-file1.js\n//\n//     var logger = require('winston').loggers.get('something');\n//\n// ### some-file2.js\n//\n//     var logger = require('winston').loggers.get('something');\n//\nwinston.loggers = new winston.Container();\n\n//\n// We create and expose a 'defaultLogger' so that the programmer may do the\n// following without the need to create an instance of winston.Logger directly:\n//\n//     var winston = require('winston');\n//     winston.log('info', 'some message');\n//     winston.error('some error');\n//\nvar defaultLogger = new winston.Logger({\n  transports: [new winston.transports.Console()]\n});\n\n//\n// Pass through the target methods onto `winston`.\n//\nvar methods = ['log', 'query', 'stream', 'add', 'remove', 'clear', 'profile', 'startTimer', 'extend', 'cli', 'handleExceptions', 'unhandleExceptions', 'configure'];\nwinston.padLevels = false;\ncommon.setLevels(winston, null, defaultLogger.levels);\nmethods.forEach(function (method) {\n  winston[method] = function () {\n    return defaultLogger[method].apply(defaultLogger, arguments);\n  };\n});\n\n//\n// ### function cli ()\n// Configures the default winston logger to have the\n// settings for command-line interfaces: no timestamp,\n// colors enabled, padded output, and additional levels.\n//\nwinston.cli = function () {\n  winston.padLevels = true;\n  common.setLevels(winston, defaultLogger.levels, winston.config.cli.levels);\n  defaultLogger.setLevels(winston.config.cli.levels);\n  winston.config.addColors(winston.config.cli.colors);\n  if (defaultLogger.transports.console) {\n    defaultLogger.transports.console.colorize = true;\n    defaultLogger.transports.console.timestamp = false;\n  }\n  return winston;\n};\n\n//\n// ### function setLevels (target)\n// #### @target {Object} Target levels to use\n// Sets the `target` levels specified on the default winston logger.\n//\nwinston.setLevels = function (target) {\n  common.setLevels(winston, defaultLogger.levels, target);\n  defaultLogger.setLevels(target);\n};\n\n//\n// Define getter / setter for the default logger level\n// which need to be exposed by winston.\n//\nObject.defineProperty(winston, 'level', {\n  get: function () {\n    return defaultLogger.level;\n  },\n  set: function (val) {\n    defaultLogger.level = val;\n    Object.keys(defaultLogger.transports).forEach(function (key) {\n      defaultLogger.transports[key].level = val;\n    });\n  }\n});\n\n//\n// Define getters / setters for appropriate properties of the\n// default logger which need to be exposed by winston.\n//\n['emitErrs', 'exitOnError', 'padLevels', 'levelLength', 'stripColors'].forEach(function (prop) {\n  Object.defineProperty(winston, prop, {\n    get: function () {\n      return defaultLogger[prop];\n    },\n    set: function (val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n\n//\n// @default {Object}\n// The default transports and exceptionHandlers for\n// the default winston logger.\n//\nObject.defineProperty(winston, 'default', {\n  get: function () {\n    return {\n      transports: defaultLogger.transports,\n      exceptionHandlers: defaultLogger.exceptionHandlers\n    };\n  }\n});","map":{"version":3,"names":["winston","exports","version","require","transports","common","hash","clone","longestElement","exception","config","addColors","Container","Logger","Transport","loggers","defaultLogger","Console","methods","padLevels","setLevels","levels","forEach","method","apply","arguments","cli","colors","console","colorize","timestamp","target","Object","defineProperty","get","level","set","val","keys","key","prop","exceptionHandlers"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/winston/lib/winston.js"],"sourcesContent":["/*\r\n * winston.js: Top-level include defining Winston.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n *\r\n */\r\n\r\nvar winston = exports;\r\n\r\n//\r\n// use require method for webpack bundle\r\n//\r\nwinston.version = require('../package.json').version\r\n\r\n//\r\n// Include transports defined by default by winston\r\n//\r\nwinston.transports = require('./winston/transports');\r\n\r\n//\r\n// Expose utility methods\r\n//\r\nvar common             = require('./winston/common');\r\nwinston.hash           = common.hash;\r\nwinston.clone          = common.clone;\r\nwinston.longestElement = common.longestElement;\r\nwinston.exception      = require('./winston/exception');\r\nwinston.config         = require('./winston/config');\r\nwinston.addColors      = winston.config.addColors;\r\n\r\n//\r\n// Expose core Logging-related prototypes.\r\n//\r\nwinston.Container      = require('./winston/container').Container;\r\nwinston.Logger         = require('./winston/logger').Logger;\r\nwinston.Transport      = require('./winston/transports/transport').Transport;\r\n\r\n//\r\n// We create and expose a default `Container` to `winston.loggers` so that the\r\n// programmer may manage multiple `winston.Logger` instances without any additional overhead.\r\n//\r\n// ### some-file1.js\r\n//\r\n//     var logger = require('winston').loggers.get('something');\r\n//\r\n// ### some-file2.js\r\n//\r\n//     var logger = require('winston').loggers.get('something');\r\n//\r\nwinston.loggers = new winston.Container();\r\n\r\n//\r\n// We create and expose a 'defaultLogger' so that the programmer may do the\r\n// following without the need to create an instance of winston.Logger directly:\r\n//\r\n//     var winston = require('winston');\r\n//     winston.log('info', 'some message');\r\n//     winston.error('some error');\r\n//\r\nvar defaultLogger = new winston.Logger({\r\n  transports: [new winston.transports.Console()]\r\n});\r\n\r\n//\r\n// Pass through the target methods onto `winston`.\r\n//\r\nvar methods = [\r\n  'log',\r\n  'query',\r\n  'stream',\r\n  'add',\r\n  'remove',\r\n  'clear',\r\n  'profile',\r\n  'startTimer',\r\n  'extend',\r\n  'cli',\r\n  'handleExceptions',\r\n  'unhandleExceptions',\r\n  'configure'\r\n];\r\nwinston.padLevels = false;\r\ncommon.setLevels(winston, null, defaultLogger.levels);\r\nmethods.forEach(function (method) {\r\n  winston[method] = function () {\r\n    return defaultLogger[method].apply(defaultLogger, arguments);\r\n  };\r\n});\r\n\r\n//\r\n// ### function cli ()\r\n// Configures the default winston logger to have the\r\n// settings for command-line interfaces: no timestamp,\r\n// colors enabled, padded output, and additional levels.\r\n//\r\nwinston.cli = function () {\r\n  winston.padLevels = true;\r\n  common.setLevels(winston, defaultLogger.levels, winston.config.cli.levels);\r\n  defaultLogger.setLevels(winston.config.cli.levels);\r\n  winston.config.addColors(winston.config.cli.colors);\r\n\r\n  if (defaultLogger.transports.console) {\r\n    defaultLogger.transports.console.colorize = true;\r\n    defaultLogger.transports.console.timestamp = false;\r\n  }\r\n\r\n  return winston;\r\n};\r\n\r\n//\r\n// ### function setLevels (target)\r\n// #### @target {Object} Target levels to use\r\n// Sets the `target` levels specified on the default winston logger.\r\n//\r\nwinston.setLevels = function (target) {\r\n  common.setLevels(winston, defaultLogger.levels, target);\r\n  defaultLogger.setLevels(target);\r\n};\r\n\r\n//\r\n// Define getter / setter for the default logger level\r\n// which need to be exposed by winston.\r\n//\r\nObject.defineProperty(winston, 'level', {\r\n  get: function () {\r\n    return defaultLogger.level;\r\n  },\r\n  set: function (val) {\r\n    defaultLogger.level = val;\r\n\r\n    Object.keys(defaultLogger.transports).forEach(function(key) {\r\n      defaultLogger.transports[key].level = val;\r\n    });\r\n  }\r\n});\r\n\r\n//\r\n// Define getters / setters for appropriate properties of the\r\n// default logger which need to be exposed by winston.\r\n//\r\n['emitErrs', 'exitOnError', 'padLevels', 'levelLength', 'stripColors'].forEach(function (prop) {\r\n  Object.defineProperty(winston, prop, {\r\n    get: function () {\r\n      return defaultLogger[prop];\r\n    },\r\n    set: function (val) {\r\n      defaultLogger[prop] = val;\r\n    }\r\n  });\r\n});\r\n\r\n//\r\n// @default {Object}\r\n// The default transports and exceptionHandlers for\r\n// the default winston logger.\r\n//\r\nObject.defineProperty(winston, 'default', {\r\n  get: function () {\r\n    return {\r\n      transports: defaultLogger.transports,\r\n      exceptionHandlers: defaultLogger.exceptionHandlers\r\n    };\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}