{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nbirb.displayName = 'birb';\nbirb.aliases = [];\n\n/** @type {import('../core.js').Syntax} */\nexport default function birb(Prism) {\n  Prism.register(refractorClike);\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [/\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/,\n    // matches variable and function return types (parameters as well).\n    /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/],\n    keyword: /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  });\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  });\n}","map":{"version":3,"names":["refractorClike","birb","displayName","aliases","Prism","register","languages","extend","string","pattern","greedy","keyword","operator","variable","insertBefore","metadata","alias"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/birb.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nbirb.displayName = 'birb'\nbirb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function birb(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAc,MAAM,YAAY;AACvCC,IAAI,CAACC,WAAW,GAAG,MAAM;AACzBD,IAAI,CAACE,OAAO,GAAG,EAAE;;AAEjB;AACA,eAAe,SAASF,IAAI,CAACG,KAAK,EAAE;EAClCA,KAAK,CAACC,QAAQ,CAACL,cAAc,CAAC;EAC9BI,KAAK,CAACE,SAAS,CAACL,IAAI,GAAGG,KAAK,CAACE,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE;IACrDC,MAAM,EAAE;MACNC,OAAO,EAAE,+BAA+B;MACxCC,MAAM,EAAE;IACV,CAAC;IACD,YAAY,EAAE,CACZ,iCAAiC;IAAE;IACnC,+DAA+D,CAChE;IACDC,OAAO,EACL,kJAAkJ;IACpJC,QAAQ,EAAE,8DAA8D;IACxEC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFT,KAAK,CAACE,SAAS,CAACQ,YAAY,CAAC,MAAM,EAAE,UAAU,EAAE;IAC/CC,QAAQ,EAAE;MACRN,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,IAAI;MACZM,KAAK,EAAE;IACT;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}