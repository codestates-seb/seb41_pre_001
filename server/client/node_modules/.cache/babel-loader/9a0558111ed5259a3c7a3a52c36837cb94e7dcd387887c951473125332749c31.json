{"ast":null,"code":"var _jsxFileName = \"/home/kty/workspace/seb41_pre_001/client/src/components/ModalEdit.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ColumnDiv } from '../styles/StyledStore';\nimport { regDisplayName } from '../util/regExp';\nimport CommonButton, { BUTTON_TYPE_USER, BUTTON_TYPE_USER_EDIT } from './CommonButton';\nimport LabelInput from './LabelInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { editModalIsOpen, setIsEditModalOpen }\n * @returns <Modal>\n */\nfunction ModalEdit(_ref) {\n  _s();\n  let {\n    editModalIsOpen,\n    setIsEditModalOpen,\n    user,\n    setUser\n  } = _ref;\n  const [userName, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  //  let subtitle;\n  // function afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   subtitle.style.color = '#f00';\n  // }\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n  const handlePasswordConfirm = e => {\n    setPasswordConfirm(e.target.value);\n  };\n  const handleEdit = () => {\n    if (userName.length === 0 || password.length === 0 || passwordConfirm === 0) {\n      alert('empty is not allowed');\n      return false;\n    }\n    if (userName.length === 0) {\n      alert('DisplayName is empty');\n      return false;\n    }\n    if (userName.length < 3 || userName.length > 20) {\n      alert('DisplayName is over 4 letters, under 20 letters');\n      return false;\n    }\n    if (!regDisplayName.test(userName)) {\n      alert('DisplayName is allowed by English or number');\n      return false;\n    }\n    if (password !== passwordConfirm) {\n      alert('password is not matched');\n      return false;\n    }\n    //TODO 비밀번호 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    //TODO 비밀번호 확인 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    axios.patch(`${process.env.REACT_APP_EP_SIGNOUT}/${user.id}`, pushDefaultWithToken()).then(() => {\n      logout();\n      if (!IS_ALIVE()) {\n        alert('Succeed to delete your account, seeya');\n        navigate('signin');\n        closeModal();\n      } else {\n        alert('Have a problem to remove your token, please shutdown your brower');\n        closeModal();\n      }\n    }).catch(error => {\n      console.log(error);\n      let errorText;\n      const {\n        message\n      } = error;\n      const code = Number(message.slice(-3));\n      switch (code) {\n        case 401:\n          errorText = 'Wrong Email or Password, check your Email or Password';\n          break;\n        case 404:\n        case 500:\n          errorText = 'Sorry, We have problem for service. contact to us';\n          break;\n        default:\n          errorText = message;\n      }\n      return alert(errorText);\n    });\n    closeModal();\n  };\n  const closeModal = () => {\n    setIsEditModalOpen(false);\n    setPassword('');\n    setPasswordConfirm('');\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: editModalIsOpen\n    /*  onAfterOpen={afterOpenModal} */,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Edit account modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Account edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColumnDiv, {\n      children: [/*#__PURE__*/_jsxDEV(LabelInput, {\n        label: 'Display Name',\n        value: userName,\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelInput, {\n        label: 'Password',\n        value: password,\n        type: 'password',\n        onChange: handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelInput, {\n        label: 'Password Confirm',\n        value: passwordConfirm,\n        type: 'password',\n        onChange: handlePasswordConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER_EDIT,\n      cont: 'Edit',\n      onClick: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER,\n      cont: 'Close',\n      onClick: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalEdit, \"iU5D+5LZ8FL3rtHiv0THvnIeXms=\");\n_c = ModalEdit;\nexport default ModalEdit;\nvar _c;\n$RefreshReg$(_c, \"ModalEdit\");","map":{"version":3,"names":["axios","useState","Modal","ColumnDiv","regDisplayName","CommonButton","BUTTON_TYPE_USER","BUTTON_TYPE_USER_EDIT","LabelInput","customStyles","content","top","left","right","bottom","marginRight","transform","ModalEdit","editModalIsOpen","setIsEditModalOpen","user","setUser","userName","setName","password","setPassword","passwordConfirm","setPasswordConfirm","handleName","e","target","value","handlePassword","handlePasswordConfirm","handleEdit","length","alert","test","patch","process","env","REACT_APP_EP_SIGNOUT","id","pushDefaultWithToken","then","logout","IS_ALIVE","navigate","closeModal","catch","error","console","log","errorText","message","code","Number","slice"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/components/ModalEdit.js"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ColumnDiv } from '../styles/StyledStore';\nimport { regDisplayName } from '../util/regExp';\nimport CommonButton, {\n  BUTTON_TYPE_USER,\n  BUTTON_TYPE_USER_EDIT,\n} from './CommonButton';\nimport LabelInput from './LabelInput';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { editModalIsOpen, setIsEditModalOpen }\n * @returns <Modal>\n */\nfunction ModalEdit({ editModalIsOpen, setIsEditModalOpen, user, setUser }) {\n  const [userName, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  //  let subtitle;\n  // function afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   subtitle.style.color = '#f00';\n  // }\n\n  const handleName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handlePasswordConfirm = (e) => {\n    setPasswordConfirm(e.target.value);\n  };\n\n  const handleEdit = () => {\n    if (\n      userName.length === 0 ||\n      password.length === 0 ||\n      passwordConfirm === 0\n    ) {\n      alert('empty is not allowed');\n      return false;\n    }\n    if (userName.length === 0) {\n      alert('DisplayName is empty');\n      return false;\n    }\n    if (userName.length < 3 || userName.length > 20) {\n      alert('DisplayName is over 4 letters, under 20 letters');\n      return false;\n    }\n    if (!regDisplayName.test(userName)) {\n      alert('DisplayName is allowed by English or number');\n      return false;\n    }\n    if (password !== passwordConfirm) {\n      alert('password is not matched');\n      return false;\n    }\n    //TODO 비밀번호 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    //TODO 비밀번호 확인 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    axios\n      .patch(\n        `${process.env.REACT_APP_EP_SIGNOUT}/${user.id}`,\n        pushDefaultWithToken()\n      )\n      .then(() => {\n        logout();\n        if (!IS_ALIVE()) {\n          alert('Succeed to delete your account, seeya');\n          navigate('signin');\n          closeModal();\n        } else {\n          alert(\n            'Have a problem to remove your token, please shutdown your brower'\n          );\n          closeModal();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        let errorText;\n        const { message } = error;\n        const code = Number(message.slice(-3));\n        switch (code) {\n          case 401:\n            errorText = 'Wrong Email or Password, check your Email or Password';\n            break;\n          case 404:\n          case 500:\n            errorText = 'Sorry, We have problem for service. contact to us';\n            break;\n          default:\n            errorText = message;\n        }\n        return alert(errorText);\n      });\n    closeModal();\n  };\n\n  const closeModal = () => {\n    setIsEditModalOpen(false);\n    setPassword('');\n    setPasswordConfirm('');\n  };\n  return (\n    <Modal\n      isOpen={editModalIsOpen}\n      /*  onAfterOpen={afterOpenModal} */\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Edit account modal\"\n    >\n      <h2 /*  ref={(_subtitle) => (subtitle = _subtitle)} */>Edit Account</h2>\n      <div>Account edit</div>\n      <ColumnDiv>\n        <LabelInput\n          label={'Display Name'}\n          value={userName}\n          onChange={handleName}\n        />\n        <LabelInput\n          label={'Password'}\n          value={password}\n          type={'password'}\n          onChange={handlePassword}\n        />\n        <LabelInput\n          label={'Password Confirm'}\n          value={passwordConfirm}\n          type={'password'}\n          onChange={handlePasswordConfirm}\n        />\n      </ColumnDiv>\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER_EDIT}\n        cont={'Edit'}\n        onClick={handleEdit}\n      />\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER}\n        cont={'Close'}\n        onClick={closeModal}\n      />\n    </Modal>\n  );\n}\n\nexport default ModalEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}