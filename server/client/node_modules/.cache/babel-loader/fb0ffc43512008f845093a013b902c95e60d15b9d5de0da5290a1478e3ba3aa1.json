{"ast":null,"code":"// @ts-nocheck\ngettext.displayName = 'gettext';\ngettext.aliases = ['po'];\n\n/** @type {import('../core.js').Syntax} */\nexport default function gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [{\n      pattern: /# .*/,\n      greedy: true,\n      alias: 'translator-comment'\n    }, {\n      pattern: /#\\..*/,\n      greedy: true,\n      alias: 'extracted-comment'\n    }, {\n      pattern: /#:.*/,\n      greedy: true,\n      alias: 'reference-comment'\n    }, {\n      pattern: /#,.*/,\n      greedy: true,\n      alias: 'flag-comment'\n    }, {\n      pattern: /#\\|.*/,\n      greedy: true,\n      alias: 'previously-untranslated-comment'\n    }, {\n      pattern: /#.*/,\n      greedy: true\n    }],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  };\n  Prism.languages.po = Prism.languages.gettext;\n}","map":{"version":3,"names":["gettext","displayName","aliases","Prism","languages","comment","pattern","greedy","alias","string","lookbehind","keyword","number","punctuation","po"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/gettext.js"],"sourcesContent":["// @ts-nocheck\ngettext.displayName = 'gettext'\ngettext.aliases = ['po']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [\n      {\n        pattern: /# .*/,\n        greedy: true,\n        alias: 'translator-comment'\n      },\n      {\n        pattern: /#\\..*/,\n        greedy: true,\n        alias: 'extracted-comment'\n      },\n      {\n        pattern: /#:.*/,\n        greedy: true,\n        alias: 'reference-comment'\n      },\n      {\n        pattern: /#,.*/,\n        greedy: true,\n        alias: 'flag-comment'\n      },\n      {\n        pattern: /#\\|.*/,\n        greedy: true,\n        alias: 'previously-untranslated-comment'\n      },\n      {\n        pattern: /#.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  }\n  Prism.languages.po = Prism.languages.gettext\n}\n"],"mappings":"AAAA;AACAA,OAAO,CAACC,WAAW,GAAG,SAAS;AAC/BD,OAAO,CAACE,OAAO,GAAG,CAAC,IAAI,CAAC;;AAExB;AACA,eAAe,SAASF,OAAO,CAACG,KAAK,EAAE;EACrCA,KAAK,CAACC,SAAS,CAACJ,OAAO,GAAG;IACxBK,OAAO,EAAE,CACP;MACEC,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;IACV,CAAC,CACF;IACDE,MAAM,EAAE;MACNH,OAAO,EAAE,4BAA4B;MACrCI,UAAU,EAAE,IAAI;MAChBH,MAAM,EAAE;IACV,CAAC;IACDI,OAAO,EAAE,kCAAkC;IAC3CC,MAAM,EAAE,SAAS;IACjBC,WAAW,EAAE;EACf,CAAC;EACDV,KAAK,CAACC,SAAS,CAACU,EAAE,GAAGX,KAAK,CAACC,SAAS,CAACJ,OAAO;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}