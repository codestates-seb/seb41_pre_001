{"ast":null,"code":"import * as React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var image = {\n  name: 'image',\n  keyCommand: 'image',\n  shortcuts: 'ctrlcmd+k',\n  value: '![image]()',\n  buttonProps: {\n    'aria-label': 'Add image (ctrl + k)',\n    title: 'Add image (ctrl + k)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"13\",\n    height: \"13\",\n    viewBox: \"0 0 20 20\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z\"\n    })\n  }),\n  execute: function execute(state, api) {\n    // Select everything\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the image\n    var imageTemplate = state1.selectedText || 'https://example.com/your-image.png';\n    api.replaceSelection(\"![](\" + imageTemplate + \")\");\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n      start: 4 + state1.selection.start,\n      end: 4 + state1.selection.start + imageTemplate.length\n    });\n  }\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAU,QAAQ,wBAAwB;AAAC;AAEpD,OAAO,IAAMC,KAAe,GAAG;EAC7BC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,OAAO;EACnBC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE;IAAE,YAAY,EAAE,sBAAsB;IAAEC,KAAK,EAAE;EAAuB,CAAC;EACpFC,IAAI,eACFC;IAAKC,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAACC,OAAO,EAAC,WAAW;IAAAC,uBAC7CJ;MACEK,IAAI,EAAC,cAAc;MACnBC,CAAC,EAAC;IAAkK;EACpK,EAEL;EACDC,OAAO,EAAE,iBAACC,KAAgB,EAAEC,GAAoB,EAAK;IACnD;IACA,IAAMC,iBAAiB,GAAGnB,UAAU,CAAC;MAAEoB,IAAI,EAAEH,KAAK,CAACG,IAAI;MAAEC,SAAS,EAAEJ,KAAK,CAACI;IAAU,CAAC,CAAC;IACtF,IAAMC,MAAM,GAAGJ,GAAG,CAACK,iBAAiB,CAACJ,iBAAiB,CAAC;IACvD;IACA,IAAMK,aAAa,GAAGF,MAAM,CAACG,YAAY,IAAI,oCAAoC;IACjFP,GAAG,CAACQ,gBAAgB,UAAQF,aAAa,OAAI;IAC7C;IACAN,GAAG,CAACK,iBAAiB,CAAC;MACpBI,KAAK,EAAE,CAAC,GAAGL,MAAM,CAACD,SAAS,CAACM,KAAK;MACjCC,GAAG,EAAE,CAAC,GAAGN,MAAM,CAACD,SAAS,CAACM,KAAK,GAAGH,aAAa,CAACK;IAClD,CAAC,CAAC;EACJ;AACF,CAAC","names":["React","selectWord","image","name","keyCommand","shortcuts","value","buttonProps","title","icon","_jsx","width","height","viewBox","children","fill","d","execute","state","api","newSelectionRange","text","selection","state1","setSelectionRange","imageTemplate","selectedText","replaceSelection","start","end","length"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/@uiw/react-md-editor/src/commands/image.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ICommand, TextState, TextAreaTextApi } from './';\nimport { selectWord } from '../utils/markdownUtils';\n\nexport const image: ICommand = {\n  name: 'image',\n  keyCommand: 'image',\n  shortcuts: 'ctrlcmd+k',\n  value: '![image]()',\n  buttonProps: { 'aria-label': 'Add image (ctrl + k)', title: 'Add image (ctrl + k)' },\n  icon: (\n    <svg width=\"13\" height=\"13\" viewBox=\"0 0 20 20\">\n      <path\n        fill=\"currentColor\"\n        d=\"M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z\"\n      />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextAreaTextApi) => {\n    // Select everything\n    const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n    const state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the image\n    const imageTemplate = state1.selectedText || 'https://example.com/your-image.png';\n    api.replaceSelection(`![](${imageTemplate})`);\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n      start: 4 + state1.selection.start,\n      end: 4 + state1.selection.start + imageTemplate.length,\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}