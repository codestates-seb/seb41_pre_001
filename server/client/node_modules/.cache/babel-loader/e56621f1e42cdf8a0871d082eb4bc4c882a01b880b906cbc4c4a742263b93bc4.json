{"ast":null,"code":"var _jsxFileName = \"/home/kty/workspace/seb41_pre_001/client/src/components/ModalEdit.js\",\n  _s = $RefreshSig$();\nimport { faker } from '@faker-js/faker';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ColumnDiv } from '../styles/StyledStore';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\nimport { regDisplayName } from '../util/regExp';\nimport { setUser } from '../util/tokenHelper';\nimport { getUSER_EDIT, getUSER_USER } from '../util/urlStore';\nimport CommonButton, { BUTTON_TYPE_USER, BUTTON_TYPE_USER_EDIT } from './CommonButton';\nimport LabelInput from './LabelInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { editModalIsOpen, setIsEditModalOpen }\n * @returns <Modal>\n */\nfunction ModalEdit(_ref) {\n  _s();\n  let {\n    editModalIsOpen,\n    setIsEditModalOpen,\n    user\n  } = _ref;\n  const [userName, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  //  let subtitle;\n  // function afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   subtitle.style.color = '#f00';\n  // }\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n  const handlePasswordConfirm = e => {\n    setPasswordConfirm(e.target.value);\n  };\n  const handleEdit = () => {\n    if (userName.length === 0 || password.length === 0 || passwordConfirm === 0) {\n      alert('empty is not allowed');\n      return false;\n    }\n    if (userName.length === 0) {\n      alert('DisplayName is empty');\n      return false;\n    }\n    if (userName.length < 3 || userName.length > 20) {\n      alert('DisplayName is over 4 letters, under 20 letters');\n      return false;\n    }\n    if (!regDisplayName.test(userName)) {\n      alert('DisplayName is allowed by English or number');\n      return false;\n    }\n    if (password !== passwordConfirm) {\n      alert('password is not matched');\n      return false;\n    }\n    //TODO 비밀번호 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    //TODO 비밀번호 확인 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    axios.patch(getUSER_EDIT({\n      userId: user.id\n    }), {\n      userName: userName,\n      userPassword: passwordConfirm,\n      userImageUrl: faker.image.avatar()\n    }, pushDefaultWithToken()).then(() => {\n      axios.get(getUSER_USER(), pushDefaultWithToken()).then(response => {\n        console.log(response.data);\n        setUser(response.data);\n        closeModal();\n      }).catch(error => {\n        console.log(error);\n        let errorText;\n        const {\n          message\n        } = error;\n        const code = Number(message.slice(-3));\n        switch (code) {\n          case 401:\n          case 404:\n          case 500:\n          default:\n            errorText = message;\n        }\n        return alert(errorText);\n      });\n    }).catch(error => {\n      return alert(error);\n    });\n    closeModal();\n  };\n  const closeModal = () => {\n    setIsEditModalOpen(false);\n    setPassword('');\n    setPasswordConfirm('');\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: editModalIsOpen\n    /*  onAfterOpen={afterOpenModal} */,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Edit account modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Account edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColumnDiv, {\n      children: [/*#__PURE__*/_jsxDEV(LabelInput, {\n        label: 'Display Name',\n        value: userName,\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelInput, {\n        label: 'Password',\n        value: password,\n        type: 'password',\n        onChange: handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelInput, {\n        label: 'Password Confirm',\n        value: passwordConfirm,\n        type: 'password',\n        onChange: handlePasswordConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER_EDIT,\n      cont: 'Edit',\n      onClick: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER,\n      cont: 'Close',\n      onClick: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalEdit, \"iU5D+5LZ8FL3rtHiv0THvnIeXms=\");\n_c = ModalEdit;\nexport default ModalEdit;\nvar _c;\n$RefreshReg$(_c, \"ModalEdit\");","map":{"version":3,"names":["faker","axios","useState","Modal","ColumnDiv","pushDefaultWithToken","regDisplayName","setUser","getUSER_EDIT","getUSER_USER","CommonButton","BUTTON_TYPE_USER","BUTTON_TYPE_USER_EDIT","LabelInput","customStyles","content","top","left","right","bottom","marginRight","transform","ModalEdit","editModalIsOpen","setIsEditModalOpen","user","userName","setName","password","setPassword","passwordConfirm","setPasswordConfirm","handleName","e","target","value","handlePassword","handlePasswordConfirm","handleEdit","length","alert","test","patch","userId","id","userPassword","userImageUrl","image","avatar","then","get","response","console","log","data","closeModal","catch","error","errorText","message","code","Number","slice"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/components/ModalEdit.js"],"sourcesContent":["import { faker } from '@faker-js/faker';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ColumnDiv } from '../styles/StyledStore';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\nimport { regDisplayName } from '../util/regExp';\nimport { setUser } from '../util/tokenHelper';\nimport { getUSER_EDIT, getUSER_USER } from '../util/urlStore';\nimport CommonButton, {\n  BUTTON_TYPE_USER,\n  BUTTON_TYPE_USER_EDIT,\n} from './CommonButton';\nimport LabelInput from './LabelInput';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { editModalIsOpen, setIsEditModalOpen }\n * @returns <Modal>\n */\nfunction ModalEdit({ editModalIsOpen, setIsEditModalOpen, user }) {\n  const [userName, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  //  let subtitle;\n  // function afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   subtitle.style.color = '#f00';\n  // }\n\n  const handleName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handlePasswordConfirm = (e) => {\n    setPasswordConfirm(e.target.value);\n  };\n\n  const handleEdit = () => {\n    if (\n      userName.length === 0 ||\n      password.length === 0 ||\n      passwordConfirm === 0\n    ) {\n      alert('empty is not allowed');\n      return false;\n    }\n    if (userName.length === 0) {\n      alert('DisplayName is empty');\n      return false;\n    }\n    if (userName.length < 3 || userName.length > 20) {\n      alert('DisplayName is over 4 letters, under 20 letters');\n      return false;\n    }\n    if (!regDisplayName.test(userName)) {\n      alert('DisplayName is allowed by English or number');\n      return false;\n    }\n    if (password !== passwordConfirm) {\n      alert('password is not matched');\n      return false;\n    }\n    //TODO 비밀번호 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    //TODO 비밀번호 확인 검증\n    // if (!regPassword.test(userPassword)) {\n    //   alert('Over 8 letters, contain over 1 English, contain over 1 number');\n    //   return false;\n    // }\n    axios\n      .patch(\n        getUSER_EDIT({ userId: user.id }),\n        {\n          userName: userName,\n          userPassword: passwordConfirm,\n          userImageUrl: faker.image.avatar(),\n        },\n        pushDefaultWithToken()\n      )\n      .then(() => {\n        axios\n          .get(getUSER_USER(), pushDefaultWithToken())\n          .then((response) => {\n            console.log(response.data);\n            setUser(response.data);\n            closeModal();\n          })\n          .catch((error) => {\n            console.log(error);\n            let errorText;\n            const { message } = error;\n            const code = Number(message.slice(-3));\n            switch (code) {\n              case 401:\n              case 404:\n              case 500:\n              default:\n                errorText = message;\n            }\n            return alert(errorText);\n          });\n      })\n      .catch((error) => {\n        return alert(error);\n      });\n    closeModal();\n  };\n\n  const closeModal = () => {\n    setIsEditModalOpen(false);\n    setPassword('');\n    setPasswordConfirm('');\n  };\n  return (\n    <Modal\n      isOpen={editModalIsOpen}\n      /*  onAfterOpen={afterOpenModal} */\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Edit account modal\"\n    >\n      <h2 /*  ref={(_subtitle) => (subtitle = _subtitle)} */>Edit Account</h2>\n      <div>Account edit</div>\n      <ColumnDiv>\n        <LabelInput\n          label={'Display Name'}\n          value={userName}\n          onChange={handleName}\n        />\n        <LabelInput\n          label={'Password'}\n          value={password}\n          type={'password'}\n          onChange={handlePassword}\n        />\n        <LabelInput\n          label={'Password Confirm'}\n          value={passwordConfirm}\n          type={'password'}\n          onChange={handlePasswordConfirm}\n        />\n      </ColumnDiv>\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER_EDIT}\n        cont={'Edit'}\n        onClick={handleEdit}\n      />\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER}\n        cont={'Close'}\n        onClick={closeModal}\n      />\n    </Modal>\n  );\n}\n\nexport default ModalEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}