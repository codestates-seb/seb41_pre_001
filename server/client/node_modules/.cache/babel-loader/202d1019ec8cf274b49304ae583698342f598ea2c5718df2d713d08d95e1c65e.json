{"ast":null,"code":"import _slicedToArray from\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import Modal from'react-modal';import{ColumnDiv}from'../styles/StyledStore';import CommonButton,{BUTTON_TYPE_USER,BUTTON_TYPE_USER_EDIT}from'./CommonButton';import LabelInput from'./LabelInput';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var customStyles={content:{top:'50%',left:'50%',right:'auto',bottom:'auto',marginRight:'-50%',transform:'translate(-50%, -50%)'}};/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { editModalIsOpen, setIsEditModalOpen }\n * @returns <Modal>\n */function ModalEdit(_ref){var editModalIsOpen=_ref.editModalIsOpen,setIsEditModalOpen=_ref.setIsEditModalOpen;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),passwordConfirm=_useState6[0],setPasswordConfirm=_useState6[1];//  let subtitle;\n// function afterOpenModal() {\n//   // references are now sync'd and can be accessed.\n//   subtitle.style.color = '#f00';\n// }\nvar handleName=function handleName(e){setName(e.target.value);};var handleEmail=function handleEmail(e){setPassword(e.target.value);};var handleEmailConfirm=function handleEmailConfirm(e){setPasswordConfirm(e.target.value);};var handleEdit=function handleEdit(){if(name.length===0||password.length===0||passwordConfirm===0){alert('empty is not allowed');return false;}if(password!==passwordConfirm){alert('password is not matched');return false;}closeModal();};var closeModal=function closeModal(){setIsEditModalOpen(false);setPassword('');setPasswordConfirm('');};return/*#__PURE__*/_jsxs(Modal,{isOpen:editModalIsOpen/*  onAfterOpen={afterOpenModal} */,onRequestClose:closeModal,style:customStyles,contentLabel:\"Edit account modal\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Account\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Account edit\"}),/*#__PURE__*/_jsxs(ColumnDiv,{children:[/*#__PURE__*/_jsx(LabelInput,{label:'Display Name',value:name,onChange:handleName}),/*#__PURE__*/_jsx(LabelInput,{label:'Password',value:password,type:'password',onChange:handleEmail}),/*#__PURE__*/_jsx(LabelInput,{label:'Password Confirm',value:passwordConfirm,type:'password',onChange:handleEmailConfirm})]}),/*#__PURE__*/_jsx(CommonButton,{buttonType:BUTTON_TYPE_USER_EDIT,cont:'Edit',onClick:handleEdit}),/*#__PURE__*/_jsx(CommonButton,{buttonType:BUTTON_TYPE_USER,cont:'Close',onClick:closeModal})]});}export default ModalEdit;","map":{"version":3,"names":["useState","Modal","ColumnDiv","CommonButton","BUTTON_TYPE_USER","BUTTON_TYPE_USER_EDIT","LabelInput","customStyles","content","top","left","right","bottom","marginRight","transform","ModalEdit","editModalIsOpen","setIsEditModalOpen","name","setName","password","setPassword","passwordConfirm","setPasswordConfirm","handleName","e","target","value","handleEmail","handleEmailConfirm","handleEdit","length","alert","closeModal"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/components/ModalEdit.js"],"sourcesContent":["import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ColumnDiv } from '../styles/StyledStore';\nimport CommonButton, {\n  BUTTON_TYPE_USER,\n  BUTTON_TYPE_USER_EDIT,\n} from './CommonButton';\nimport LabelInput from './LabelInput';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { editModalIsOpen, setIsEditModalOpen }\n * @returns <Modal>\n */\nfunction ModalEdit({ editModalIsOpen, setIsEditModalOpen }) {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  //  let subtitle;\n  // function afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   subtitle.style.color = '#f00';\n  // }\n\n  const handleName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleEmail = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleEmailConfirm = (e) => {\n    setPasswordConfirm(e.target.value);\n  };\n\n  const handleEdit = () => {\n    if (name.length === 0 || password.length === 0 || passwordConfirm === 0) {\n      alert('empty is not allowed');\n      return false;\n    }\n    if (password !== passwordConfirm) {\n      alert('password is not matched');\n      return false;\n    }\n    closeModal();\n  };\n\n  const closeModal = () => {\n    setIsEditModalOpen(false);\n    setPassword('');\n    setPasswordConfirm('');\n  };\n  return (\n    <Modal\n      isOpen={editModalIsOpen}\n      /*  onAfterOpen={afterOpenModal} */\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Edit account modal\"\n    >\n      <h2 /*  ref={(_subtitle) => (subtitle = _subtitle)} */>Edit Account</h2>\n      <div>Account edit</div>\n      <ColumnDiv>\n        <LabelInput label={'Display Name'} value={name} onChange={handleName} />\n        <LabelInput\n          label={'Password'}\n          value={password}\n          type={'password'}\n          onChange={handleEmail}\n        />\n        <LabelInput\n          label={'Password Confirm'}\n          value={passwordConfirm}\n          type={'password'}\n          onChange={handleEmailConfirm}\n        />\n      </ColumnDiv>\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER_EDIT}\n        cont={'Edit'}\n        onClick={handleEdit}\n      />\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER}\n        cont={'Close'}\n        onClick={closeModal}\n      />\n    </Modal>\n  );\n}\n\nexport default ModalEdit;\n"],"mappings":"8HAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,MAAK,KAAM,aAAa,CAC/B,OAASC,SAAS,KAAQ,uBAAuB,CACjD,MAAOC,aAAY,EACjBC,gBAAgB,CAChBC,qBAAqB,KAChB,gBAAgB,CACvB,MAAOC,WAAU,KAAM,cAAc,CAAC,wFAEtC,GAAMC,aAAY,CAAG,CACnBC,OAAO,CAAE,CACPC,GAAG,CAAE,KAAK,CACVC,IAAI,CAAE,KAAK,CACXC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,WAAW,CAAE,MAAM,CACnBC,SAAS,CAAE,uBACb,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,UAAS,MAA0C,IAAvCC,gBAAe,MAAfA,eAAe,CAAEC,kBAAkB,MAAlBA,kBAAkB,CACtD,cAAwBjB,QAAQ,CAAC,EAAE,CAAC,wCAA7BkB,IAAI,eAAEC,OAAO,eACpB,eAAgCnB,QAAQ,CAAC,EAAE,CAAC,yCAArCoB,QAAQ,eAAEC,WAAW,eAC5B,eAA8CrB,QAAQ,CAAC,EAAE,CAAC,yCAAnDsB,eAAe,eAAEC,kBAAkB,eAE1C;AACA;AACA;AACA;AACA;AAEA,GAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,CAAC,CAAK,CACxBN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACzB,CAAC,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIH,CAAC,CAAK,CACzBJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7B,CAAC,CAED,GAAME,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIJ,CAAC,CAAK,CAChCF,kBAAkB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACpC,CAAC,CAED,GAAMG,WAAU,CAAG,QAAbA,WAAU,EAAS,CACvB,GAAIZ,IAAI,CAACa,MAAM,GAAK,CAAC,EAAIX,QAAQ,CAACW,MAAM,GAAK,CAAC,EAAIT,eAAe,GAAK,CAAC,CAAE,CACvEU,KAAK,CAAC,sBAAsB,CAAC,CAC7B,MAAO,MAAK,CACd,CACA,GAAIZ,QAAQ,GAAKE,eAAe,CAAE,CAChCU,KAAK,CAAC,yBAAyB,CAAC,CAChC,MAAO,MAAK,CACd,CACAC,UAAU,EAAE,CACd,CAAC,CAED,GAAMA,WAAU,CAAG,QAAbA,WAAU,EAAS,CACvBhB,kBAAkB,CAAC,KAAK,CAAC,CACzBI,WAAW,CAAC,EAAE,CAAC,CACfE,kBAAkB,CAAC,EAAE,CAAC,CACxB,CAAC,CACD,mBACE,MAAC,KAAK,EACJ,MAAM,CAAEP,eACR,oCACA,cAAc,CAAEiB,UAAW,CAC3B,KAAK,CAAE1B,YAAa,CACpB,YAAY,CAAC,oBAAoB,wBAEjC,oBAAuD,cAAY,EAAK,cACxE,qBAAK,cAAY,EAAM,cACvB,MAAC,SAAS,yBACR,KAAC,UAAU,EAAC,KAAK,CAAE,cAAe,CAAC,KAAK,CAAEW,IAAK,CAAC,QAAQ,CAAEM,UAAW,EAAG,cACxE,KAAC,UAAU,EACT,KAAK,CAAE,UAAW,CAClB,KAAK,CAAEJ,QAAS,CAChB,IAAI,CAAE,UAAW,CACjB,QAAQ,CAAEQ,WAAY,EACtB,cACF,KAAC,UAAU,EACT,KAAK,CAAE,kBAAmB,CAC1B,KAAK,CAAEN,eAAgB,CACvB,IAAI,CAAE,UAAW,CACjB,QAAQ,CAAEO,kBAAmB,EAC7B,GACQ,cACZ,KAAC,YAAY,EACX,UAAU,CAAExB,qBAAsB,CAClC,IAAI,CAAE,MAAO,CACb,OAAO,CAAEyB,UAAW,EACpB,cACF,KAAC,YAAY,EACX,UAAU,CAAE1B,gBAAiB,CAC7B,IAAI,CAAE,OAAQ,CACd,OAAO,CAAE6B,UAAW,EACpB,GACI,CAEZ,CAEA,cAAelB,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}