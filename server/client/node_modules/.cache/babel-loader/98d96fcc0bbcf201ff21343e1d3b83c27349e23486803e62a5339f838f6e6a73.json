{"ast":null,"code":"var _jsxFileName = \"/home/kty/workspace/seb41_pre_001/client/src/components/Capcha.js\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport RandomIcon from './RandomIcon';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CapchaContainer = styled.div`\n  height: 156px;\n  background-color: #f1f2f3;\n  margin: 8px;\n  border: 1px #d6d9dc solid;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n_c = CapchaContainer;\nconst CapchaCont = styled(CapchaContainer)`\n  width: 170px;\n  height: 120px;\n  background-color: #f9f9f9;\n`;\n_c2 = CapchaCont;\nconst CenterDiv = styled.div`\n  padding: 4px 0px;\n  align-items: center;\n`;\n\n/**\n * Created by @KimTank\n * TODO Capcha - google\n * @returns <CapchaContainer>\n */\n_c3 = CenterDiv;\nfunction Capcha(_ref) {\n  let {\n    onClick\n  } = _ref;\n  // capcha 일정시간 이후 자동체크풀림 진척도 너무걸려 무시\n  //const [isChecked, setIsChecked] = useState(false);\n  //   TODO 자동풀림\n  //   const [initCount, setInitCount] = useState(0);\n  //   const [count, setCount] = useState(10);\n\n  //   useEffect(() => {\n  //     setInterval(() => {\n  //       setCount(count - 1);\n  //     }, 1_000);\n  //   }, [count]);\n\n  // const handleChecked = () => {\n  //   setIsChecked(true);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(CapchaContainer, {\n    children: /*#__PURE__*/_jsxDEV(CapchaCont, {\n      children: [/*#__PURE__*/_jsxDEV(CenterDiv, {\n        style: {\n          flex: '1'\n        },\n        children: isChecked === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: '12px'\n            },\n            children: \"You're a Human\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"capcha\",\n            type: 'checkbox',\n            style: {\n              paddingTop: '12px'\n            },\n            onClick: onClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"capcha\",\n            children: `  I'm not a robot`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CenterDiv, {\n        style: {\n          fontSize: '10px',\n          flex: '1'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RandomIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), \" reCAPTCHA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Privacy - Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Capcha;\nexport default Capcha;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CapchaContainer\");\n$RefreshReg$(_c2, \"CapchaCont\");\n$RefreshReg$(_c3, \"CenterDiv\");\n$RefreshReg$(_c4, \"Capcha\");","map":{"version":3,"names":["useState","styled","RandomIcon","CapchaContainer","div","CapchaCont","CenterDiv","Capcha","onClick","flex","isChecked","paddingTop","fontSize"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/components/Capcha.js"],"sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport RandomIcon from './RandomIcon';\n\nconst CapchaContainer = styled.div`\n  height: 156px;\n  background-color: #f1f2f3;\n  margin: 8px;\n  border: 1px #d6d9dc solid;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst CapchaCont = styled(CapchaContainer)`\n  width: 170px;\n  height: 120px;\n  background-color: #f9f9f9;\n`;\n\nconst CenterDiv = styled.div`\n  padding: 4px 0px;\n  align-items: center;\n`;\n\n/**\n * Created by @KimTank\n * TODO Capcha - google\n * @returns <CapchaContainer>\n */\nfunction Capcha({ onClick }) {\n  // capcha 일정시간 이후 자동체크풀림 진척도 너무걸려 무시\n  //const [isChecked, setIsChecked] = useState(false);\n  //   TODO 자동풀림\n  //   const [initCount, setInitCount] = useState(0);\n  //   const [count, setCount] = useState(10);\n\n  //   useEffect(() => {\n  //     setInterval(() => {\n  //       setCount(count - 1);\n  //     }, 1_000);\n  //   }, [count]);\n\n  // const handleChecked = () => {\n  //   setIsChecked(true);\n  // };\n\n  return (\n    <CapchaContainer>\n      <CapchaCont>\n        {/* TODO 자동풀림 \n        {isChecked === true(\n          <CenterDiv style={{ color: 'red', fontSize: '12px', flex: '1' }}>\n            Verification expired. Check the checkbox again.\n          </CenterDiv>\n        ) : (\n          ''\n        )} */}\n        <CenterDiv style={{ flex: '1' }}>\n          {isChecked === true ? (\n            <>\n              <div style={{ paddingTop: '12px' }}>You&apos;re a Human</div>\n              {/* TODO 자동풀림\n              <div>{count}s</div> */}\n            </>\n          ) : (\n            <>\n              <input\n                id=\"capcha\"\n                type={'checkbox'}\n                style={{ paddingTop: '12px' }}\n                onClick={onClick}\n              />\n              <label htmlFor=\"capcha\">{`  I'm not a robot`}</label>\n            </>\n          )}\n        </CenterDiv>\n        <CenterDiv style={{ fontSize: '10px', flex: '1' }}>\n          <div>\n            <RandomIcon /> reCAPTCHA\n          </div>\n          <div>Privacy - Terms</div>\n        </CenterDiv>\n      </CapchaCont>\n    </CapchaContainer>\n  );\n}\nexport default Capcha;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAAA;AAEtC,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAVID,eAAe;AAYrB,MAAME,UAAU,GAAGJ,MAAM,CAACE,eAAe,CAAE;AAC3C;AACA;AACA;AACA,CAAC;AAAC,MAJIE,UAAU;AAMhB,MAAMC,SAAS,GAAGL,MAAM,CAACG,GAAI;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA,MALME,SAAS;AAUf,SAASC,MAAM,OAAc;EAAA,IAAb;IAAEC;EAAQ,CAAC;EACzB;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACE,QAAC,eAAe;IAAA,uBACd,QAAC,UAAU;MAAA,wBAST,QAAC,SAAS;QAAC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAI,CAAE;QAAA,UAC7BC,SAAS,KAAK,IAAI,gBACjB;UAAA,uBACE;YAAK,KAAK,EAAE;cAAEC,UAAU,EAAE;YAAO,CAAE;YAAA,UAAC;UAAmB;YAAA;YAAA;YAAA;UAAA;QAAM,iBAG5D,gBAEH;UAAA,wBACE;YACE,EAAE,EAAC,QAAQ;YACX,IAAI,EAAE,UAAW;YACjB,KAAK,EAAE;cAAEA,UAAU,EAAE;YAAO,CAAE;YAC9B,OAAO,EAAEH;UAAQ;YAAA;YAAA;YAAA;UAAA,QACjB,eACF;YAAO,OAAO,EAAC,QAAQ;YAAA,UAAG;UAAkB;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;MAExD;QAAA;QAAA;QAAA;MAAA,QACS,eACZ,QAAC,SAAS;QAAC,KAAK,EAAE;UAAEI,QAAQ,EAAE,MAAM;UAAEH,IAAI,EAAE;QAAI,CAAE;QAAA,wBAChD;UAAA,wBACE,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA,QAAG,cAChB;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAA,UAAK;QAAe;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAChB;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACG;AAEtB;AAAC,MAxDQF,MAAM;AAyDf,eAAeA,MAAM;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}