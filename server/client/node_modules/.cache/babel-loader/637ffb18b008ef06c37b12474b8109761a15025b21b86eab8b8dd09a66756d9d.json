{"ast":null,"code":"var _jsxFileName = \"/home/kty/workspace/seb41_pre_001/client/src/components/ModalCommentDelete.js\";\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { RowDiv } from '../styles/StyledStore';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\nimport CommonButton, { BUTTON_TYPE_USER, BUTTON_TYPE_USER_DELETE } from './CommonButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { deleteModalIsOpen, setIsDeleteModalOpen }\n * @returns <Modal>\n */\nfunction ModalCommentDelete(_ref) {\n  let {\n    commentDeleteModalIsOpen,\n    setCommentDeleteModalOpen,\n    postId,\n    commentId,\n    setPost\n  } = _ref;\n  const handleDelete = () => {\n    axios.delete(`${process.env.REACT_APP_EP_COMMENT_DELETE}/${postId}${process.env.REACT_APP_EP_COMMENT}/${commentId}`, pushDefaultWithToken()).then(() => {\n      axios.get(`${process.env.REACT_APP_EP_POSTS_DETAIL}/${postId}`, {\n        withCredentials: true\n      }).then(response => {\n        const {\n          data\n        } = response;\n        setPost(data);\n        closeModal();\n      }).catch(error => alert(error));\n    }).catch(error => {\n      let errorText;\n      const {\n        message\n      } = error;\n      const code = Number(message.slice(-3));\n      switch (code) {\n        case 401:\n        case 404:\n        case 500:\n        default:\n          errorText = message;\n      }\n      return alert(errorText);\n    });\n  };\n  const closeModal = () => {\n    setCommentDeleteModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: commentDeleteModalIsOpen,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Delete Comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER_DELETE,\n      onClick: handleDelete,\n      cont: 'Delete'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n      buttonType: BUTTON_TYPE_USER,\n      onClick: closeModal,\n      cont: 'Close'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_c = ModalCommentDelete;\nexport default ModalCommentDelete;\nvar _c;\n$RefreshReg$(_c, \"ModalCommentDelete\");","map":{"version":3,"names":["axios","Modal","RowDiv","pushDefaultWithToken","CommonButton","BUTTON_TYPE_USER","BUTTON_TYPE_USER_DELETE","customStyles","content","top","left","right","bottom","marginRight","transform","ModalCommentDelete","commentDeleteModalIsOpen","setCommentDeleteModalOpen","postId","commentId","setPost","handleDelete","delete","process","env","REACT_APP_EP_COMMENT_DELETE","REACT_APP_EP_COMMENT","then","get","REACT_APP_EP_POSTS_DETAIL","withCredentials","response","data","closeModal","catch","error","alert","errorText","message","code","Number","slice"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/components/ModalCommentDelete.js"],"sourcesContent":["import axios from 'axios';\nimport Modal from 'react-modal';\nimport { RowDiv } from '../styles/StyledStore';\nimport { pushDefaultWithToken } from '../util/axiosHelper';\nimport CommonButton, {\n  BUTTON_TYPE_USER,\n  BUTTON_TYPE_USER_DELETE,\n} from './CommonButton';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n/**\n * Create by @KimTank\n *\n * 불러오는측에서\n * const [modalIsOpen, setIsOpen] = useState(false);\n * ReactModal.setAppElement('#app');\n * @param { deleteModalIsOpen, setIsDeleteModalOpen }\n * @returns <Modal>\n */\nfunction ModalCommentDelete({\n  commentDeleteModalIsOpen,\n  setCommentDeleteModalOpen,\n  postId,\n  commentId,\n  setPost,\n}) {\n  const handleDelete = () => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_EP_COMMENT_DELETE}/${postId}${process.env.REACT_APP_EP_COMMENT}/${commentId}`,\n        pushDefaultWithToken()\n      )\n      .then(() => {\n        axios\n          .get(`${process.env.REACT_APP_EP_POSTS_DETAIL}/${postId}`, {\n            withCredentials: true,\n          })\n          .then((response) => {\n            const { data } = response;\n            setPost(data);\n            closeModal();\n          })\n          .catch((error) => alert(error));\n      })\n      .catch((error) => {\n        let errorText;\n        const { message } = error;\n        const code = Number(message.slice(-3));\n        switch (code) {\n          case 401:\n          case 404:\n          case 500:\n          default:\n            errorText = message;\n        }\n        return alert(errorText);\n      });\n  };\n\n  const closeModal = () => {\n    setCommentDeleteModalOpen(false);\n  };\n  return (\n    <Modal\n      isOpen={commentDeleteModalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Delete Comment\"\n    >\n      <h2>Delete Comment</h2>\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER_DELETE}\n        onClick={handleDelete}\n        cont={'Delete'}\n      />\n      <CommonButton\n        buttonType={BUTTON_TYPE_USER}\n        onClick={closeModal}\n        cont={'Close'}\n      />\n    </Modal>\n  );\n}\n\nexport default ModalCommentDelete;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,OAAOC,YAAY,IACjBC,gBAAgB,EAChBC,uBAAuB,QAClB,gBAAgB;AAAC;AAExB,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;IACPC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,MAAM;IACnBC,SAAS,EAAE;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkB,OAMxB;EAAA,IANyB;IAC1BC,wBAAwB;IACxBC,yBAAyB;IACzBC,MAAM;IACNC,SAAS;IACTC;EACF,CAAC;EACC,MAAMC,YAAY,GAAG,MAAM;IACzBrB,KAAK,CACFsB,MAAM,CACJ,GAAEC,OAAO,CAACC,GAAG,CAACC,2BAA4B,IAAGP,MAAO,GAAEK,OAAO,CAACC,GAAG,CAACE,oBAAqB,IAAGP,SAAU,EAAC,EACtGhB,oBAAoB,EAAE,CACvB,CACAwB,IAAI,CAAC,MAAM;MACV3B,KAAK,CACF4B,GAAG,CAAE,GAAEL,OAAO,CAACC,GAAG,CAACK,yBAA0B,IAAGX,MAAO,EAAC,EAAE;QACzDY,eAAe,EAAE;MACnB,CAAC,CAAC,CACDH,IAAI,CAAEI,QAAQ,IAAK;QAClB,MAAM;UAAEC;QAAK,CAAC,GAAGD,QAAQ;QACzBX,OAAO,CAACY,IAAI,CAAC;QACbC,UAAU,EAAE;MACd,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,KAAK,CAACD,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIE,SAAS;MACb,MAAM;QAAEC;MAAQ,CAAC,GAAGH,KAAK;MACzB,MAAMI,IAAI,GAAGC,MAAM,CAACF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,QAAQF,IAAI;QACV,KAAK,GAAG;QACR,KAAK,GAAG;QACR,KAAK,GAAG;QACR;UACEF,SAAS,GAAGC,OAAO;MAAC;MAExB,OAAOF,KAAK,CAACC,SAAS,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAED,MAAMJ,UAAU,GAAG,MAAM;IACvBhB,yBAAyB,CAAC,KAAK,CAAC;EAClC,CAAC;EACD,oBACE,QAAC,KAAK;IACJ,MAAM,EAAED,wBAAyB;IACjC,cAAc,EAAEiB,UAAW;IAC3B,KAAK,EAAE1B,YAAa;IACpB,YAAY,EAAC,gBAAgB;IAAA,wBAE7B;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB,QAAC,YAAY;MACX,UAAU,EAAED,uBAAwB;MACpC,OAAO,EAAEe,YAAa;MACtB,IAAI,EAAE;IAAS;MAAA;MAAA;MAAA;IAAA,QACf,eACF,QAAC,YAAY;MACX,UAAU,EAAEhB,gBAAiB;MAC7B,OAAO,EAAE4B,UAAW;MACpB,IAAI,EAAE;IAAQ;MAAA;MAAA;MAAA;IAAA,QACd;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEZ;AAAC,KA/DQlB,kBAAkB;AAiE3B,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}