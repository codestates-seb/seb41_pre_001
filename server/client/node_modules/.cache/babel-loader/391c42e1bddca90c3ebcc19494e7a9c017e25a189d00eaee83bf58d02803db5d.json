{"ast":null,"code":"// @ts-nocheck\nsupercollider.displayName = 'supercollider';\nsupercollider.aliases = ['sclang'];\n\n/** @type {import('../core.js').Syntax} */\nexport default function supercollider(Prism) {\n  Prism.languages.supercollider = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\n      greedy: true\n    },\n    symbol: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    label: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\n      alias: 'property'\n    },\n    number: /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    operator: /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\n    punctuation: /[{}()[\\].:,;]|#[[{]/\n  };\n  Prism.languages.sclang = Prism.languages.supercollider;\n}","map":{"version":3,"names":["supercollider","displayName","aliases","Prism","languages","comment","pattern","greedy","string","lookbehind","char","symbol","keyword","boolean","label","alias","number","operator","punctuation","sclang"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/supercollider.js"],"sourcesContent":["// @ts-nocheck\nsupercollider.displayName = 'supercollider'\nsupercollider.aliases = ['sclang']\n\n/** @type {import('../core.js').Syntax} */\nexport default function supercollider(Prism) {\n  Prism.languages.supercollider = {\n    comment: {\n      pattern:\n        /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\n      greedy: true\n    },\n    symbol: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    label: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\n      alias: 'property'\n    },\n    number:\n      /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    operator:\n      /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\n    punctuation: /[{}()[\\].:,;]|#[[{]/\n  }\n  Prism.languages.sclang = Prism.languages.supercollider\n}\n"],"mappings":"AAAA;AACAA,aAAa,CAACC,WAAW,GAAG,eAAe;AAC3CD,aAAa,CAACE,OAAO,GAAG,CAAC,QAAQ,CAAC;;AAElC;AACA,eAAe,SAASF,aAAa,CAACG,KAAK,EAAE;EAC3CA,KAAK,CAACC,SAAS,CAACJ,aAAa,GAAG;IAC9BK,OAAO,EAAE;MACPC,OAAO,EACL,wEAAwE;MAC1EC,MAAM,EAAE;IACV,CAAC;IACDC,MAAM,EAAE;MACNF,OAAO,EAAE,iCAAiC;MAC1CG,UAAU,EAAE,IAAI;MAChBF,MAAM,EAAE;IACV,CAAC;IACDG,IAAI,EAAE;MACJJ,OAAO,EAAE,qBAAqB;MAC9BC,MAAM,EAAE;IACV,CAAC;IACDI,MAAM,EAAE;MACNL,OAAO,EAAE,uCAAuC;MAChDG,UAAU,EAAE,IAAI;MAChBF,MAAM,EAAE;IACV,CAAC;IACDK,OAAO,EAAE,4CAA4C;IACrDC,OAAO,EAAE,oBAAoB;IAC7BC,KAAK,EAAE;MACLR,OAAO,EAAE,qBAAqB;MAC9BS,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EACJ,yHAAyH;IAC3H,YAAY,EAAE,cAAc;IAC5BC,QAAQ,EACN,+HAA+H;IACjIC,WAAW,EAAE;EACf,CAAC;EACDf,KAAK,CAACC,SAAS,CAACe,MAAM,GAAGhB,KAAK,CAACC,SAAS,CAACJ,aAAa;AACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}