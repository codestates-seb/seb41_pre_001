{"ast":null,"code":"// @ts-nocheck\nawk.displayName = 'awk';\nawk.aliases = ['gawk'];\n\n/** @type {import('../core.js').Syntax} */\nexport default function awk(Prism) {\n  Prism.languages.awk = {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    regex: {\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n      lookbehind: true,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    keyword: /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n    punctuation: /[()[\\]{},;]/\n  };\n  Prism.languages.gawk = Prism.languages.awk;\n}","map":{"version":3,"names":["awk","displayName","aliases","Prism","languages","hashbang","pattern","greedy","alias","comment","string","lookbehind","regex","variable","keyword","function","number","operator","punctuation","gawk"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/awk.js"],"sourcesContent":["// @ts-nocheck\nawk.displayName = 'awk'\nawk.aliases = ['gawk']\n\n/** @type {import('../core.js').Syntax} */\nexport default function awk(Prism) {\n  Prism.languages.awk = {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    regex: {\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n      lookbehind: true,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    keyword:\n      /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n    punctuation: /[()[\\]{},;]/\n  }\n  Prism.languages.gawk = Prism.languages.awk\n}\n"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAW,GAAG,KAAK;AACvBD,GAAG,CAACE,OAAO,GAAG,CAAC,MAAM,CAAC;;AAEtB;AACA,eAAe,SAASF,GAAG,CAACG,KAAK,EAAE;EACjCA,KAAK,CAACC,SAAS,CAACJ,GAAG,GAAG;IACpBK,QAAQ,EAAE;MACRC,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC;IACDC,OAAO,EAAE;MACPH,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;IACV,CAAC;IACDG,MAAM,EAAE;MACNJ,OAAO,EAAE,gCAAgC;MACzCK,UAAU,EAAE,IAAI;MAChBJ,MAAM,EAAE;IACV,CAAC;IACDK,KAAK,EAAE;MACLN,OAAO,EAAE,6CAA6C;MACtDK,UAAU,EAAE,IAAI;MAChBJ,MAAM,EAAE;IACV,CAAC;IACDM,QAAQ,EAAE,OAAO;IACjBC,OAAO,EACL,8KAA8K;IAChLC,QAAQ,EAAE,uBAAuB;IACjCC,MAAM,EAAE,oDAAoD;IAC5DC,QAAQ,EAAE,8DAA8D;IACxEC,WAAW,EAAE;EACf,CAAC;EACDf,KAAK,CAACC,SAAS,CAACe,IAAI,GAAGhB,KAAK,CAACC,SAAS,CAACJ,GAAG;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}