{"ast":null,"code":"// @ts-nocheck\nbqn.displayName = 'bqn';\nbqn.aliases = [];\n\n/** @type {import('../core.js').Syntax} */\nexport default function bqn(Prism) {\n  Prism.languages.bqn = {\n    shebang: {\n      pattern: /^#![ \\t]*\\/.*/,\n      alias: 'important',\n      greedy: true\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /\"(?:[^\"]|\"\")*\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'character-literal': {\n      pattern: /'(?:[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])'/,\n      greedy: true,\n      alias: 'char'\n    },\n    function: /•[\\w¯.∞π]+[\\w¯.∞π]*/,\n    'dot-notation-on-brackets': {\n      pattern: /\\{(?=.*\\}\\.)|\\}\\./,\n      alias: 'namespace'\n    },\n    'special-name': {\n      pattern: /(?:𝕨|𝕩|𝕗|𝕘|𝕤|𝕣|𝕎|𝕏|𝔽|𝔾|𝕊|_𝕣_|_𝕣)/,\n      alias: 'keyword'\n    },\n    'dot-notation-on-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*\\./,\n      alias: 'namespace'\n    },\n    'word-number-scientific': {\n      pattern: /\\d+(?:\\.\\d+)?[eE]¯?\\d+/,\n      alias: 'number'\n    },\n    'word-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*/,\n      alias: 'symbol'\n    },\n    'word-number': {\n      pattern: /[¯∞π]?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π))?/,\n      alias: 'number'\n    },\n    'null-literal': {\n      pattern: /@/,\n      alias: 'char'\n    },\n    'primitive-functions': {\n      pattern: /[-+×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!]/,\n      alias: 'operator'\n    },\n    'primitive-1-operators': {\n      pattern: /[`˜˘¨⁼⌜´˝˙]/,\n      alias: 'operator'\n    },\n    'primitive-2-operators': {\n      pattern: /[∘⊸⟜○⌾⎉⚇⍟⊘◶⎊]/,\n      alias: 'operator'\n    },\n    punctuation: /[←⇐↩(){}⟨⟩[\\]‿·⋄,.;:?]/\n  };\n}","map":{"version":3,"names":["bqn","displayName","aliases","Prism","languages","shebang","pattern","alias","greedy","comment","function","punctuation"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/bqn.js"],"sourcesContent":["// @ts-nocheck\nbqn.displayName = 'bqn'\nbqn.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function bqn(Prism) {\n  Prism.languages.bqn = {\n    shebang: {\n      pattern: /^#![ \\t]*\\/.*/,\n      alias: 'important',\n      greedy: true\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /\"(?:[^\"]|\"\")*\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'character-literal': {\n      pattern: /'(?:[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])'/,\n      greedy: true,\n      alias: 'char'\n    },\n    function: /•[\\w¯.∞π]+[\\w¯.∞π]*/,\n    'dot-notation-on-brackets': {\n      pattern: /\\{(?=.*\\}\\.)|\\}\\./,\n      alias: 'namespace'\n    },\n    'special-name': {\n      pattern: /(?:𝕨|𝕩|𝕗|𝕘|𝕤|𝕣|𝕎|𝕏|𝔽|𝔾|𝕊|_𝕣_|_𝕣)/,\n      alias: 'keyword'\n    },\n    'dot-notation-on-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*\\./,\n      alias: 'namespace'\n    },\n    'word-number-scientific': {\n      pattern: /\\d+(?:\\.\\d+)?[eE]¯?\\d+/,\n      alias: 'number'\n    },\n    'word-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*/,\n      alias: 'symbol'\n    },\n    'word-number': {\n      pattern:\n        /[¯∞π]?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π))?/,\n      alias: 'number'\n    },\n    'null-literal': {\n      pattern: /@/,\n      alias: 'char'\n    },\n    'primitive-functions': {\n      pattern: /[-+×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!]/,\n      alias: 'operator'\n    },\n    'primitive-1-operators': {\n      pattern: /[`˜˘¨⁼⌜´˝˙]/,\n      alias: 'operator'\n    },\n    'primitive-2-operators': {\n      pattern: /[∘⊸⟜○⌾⎉⚇⍟⊘◶⎊]/,\n      alias: 'operator'\n    },\n    punctuation: /[←⇐↩(){}⟨⟩[\\]‿·⋄,.;:?]/\n  }\n}\n"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAW,GAAG,KAAK;AACvBD,GAAG,CAACE,OAAO,GAAG,EAAE;;AAEhB;AACA,eAAe,SAASF,GAAG,CAACG,KAAK,EAAE;EACjCA,KAAK,CAACC,SAAS,CAACJ,GAAG,GAAG;IACpBK,OAAO,EAAE;MACPC,OAAO,EAAE,eAAe;MACxBC,KAAK,EAAE,WAAW;MAClBC,MAAM,EAAE;IACV,CAAC;IACDC,OAAO,EAAE;MACPH,OAAO,EAAE,KAAK;MACdE,MAAM,EAAE;IACV,CAAC;IACD,gBAAgB,EAAE;MAChBF,OAAO,EAAE,gBAAgB;MACzBE,MAAM,EAAE,IAAI;MACZD,KAAK,EAAE;IACT,CAAC;IACD,mBAAmB,EAAE;MACnBD,OAAO,EAAE,6CAA6C;MACtDE,MAAM,EAAE,IAAI;MACZD,KAAK,EAAE;IACT,CAAC;IACDG,QAAQ,EAAE,qBAAqB;IAC/B,0BAA0B,EAAE;MAC1BJ,OAAO,EAAE,mBAAmB;MAC5BC,KAAK,EAAE;IACT,CAAC;IACD,cAAc,EAAE;MACdD,OAAO,EAAE,+CAA+C;MACxDC,KAAK,EAAE;IACT,CAAC;IACD,sBAAsB,EAAE;MACtBD,OAAO,EAAE,qBAAqB;MAC9BC,KAAK,EAAE;IACT,CAAC;IACD,wBAAwB,EAAE;MACxBD,OAAO,EAAE,wBAAwB;MACjCC,KAAK,EAAE;IACT,CAAC;IACD,WAAW,EAAE;MACXD,OAAO,EAAE,mBAAmB;MAC5BC,KAAK,EAAE;IACT,CAAC;IACD,aAAa,EAAE;MACbD,OAAO,EACL,sHAAsH;MACxHC,KAAK,EAAE;IACT,CAAC;IACD,cAAc,EAAE;MACdD,OAAO,EAAE,GAAG;MACZC,KAAK,EAAE;IACT,CAAC;IACD,qBAAqB,EAAE;MACrBD,OAAO,EAAE,gDAAgD;MACzDC,KAAK,EAAE;IACT,CAAC;IACD,uBAAuB,EAAE;MACvBD,OAAO,EAAE,aAAa;MACtBC,KAAK,EAAE;IACT,CAAC;IACD,uBAAuB,EAAE;MACvBD,OAAO,EAAE,eAAe;MACxBC,KAAK,EAAE;IACT,CAAC;IACDI,WAAW,EAAE;EACf,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}