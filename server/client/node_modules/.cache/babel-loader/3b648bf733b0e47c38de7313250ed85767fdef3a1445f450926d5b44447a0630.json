{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\ngroovy.displayName = 'groovy';\ngroovy.aliases = [];\n\n/** @type {import('../core.js').Syntax} */\nexport default function groovy(Prism) {\n  Prism.register(refractorClike);\n  (function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    };\n\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    });\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    });\n    interpolation.inside.expression.inside = Prism.languages.groovy;\n  })(Prism);\n}","map":{"version":3,"names":["refractorClike","groovy","displayName","aliases","Prism","register","interpolation","pattern","lookbehind","inside","alias","expression","languages","extend","string","greedy","keyword","number","operator","punctuation","insertBefore","shebang","annotation"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/groovy.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function groovy(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    }\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.groovy\n  })(Prism)\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAc,MAAM,YAAY;AACvCC,MAAM,CAACC,WAAW,GAAG,QAAQ;AAC7BD,MAAM,CAACE,OAAO,GAAG,EAAE;;AAEnB;AACA,eAAe,SAASF,MAAM,CAACG,KAAK,EAAE;EACpCA,KAAK,CAACC,QAAQ,CAACL,cAAc,CAAC;EAC7B,CAAC,UAAUI,KAAK,EAAE;IACjB,IAAIE,aAAa,GAAG;MAClBC,OAAO,EAAE,8CAA8C;MACvDC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QACN,2BAA2B,EAAE;UAC3BF,OAAO,EAAE,YAAY;UACrBG,KAAK,EAAE;QACT,CAAC;QACDC,UAAU,EAAE;UACVJ,OAAO,EAAE,SAAS;UAClBE,MAAM,EAAE,IAAI,CAAC;QACf;MACF;IACF,CAAC;;IACDL,KAAK,CAACQ,SAAS,CAACX,MAAM,GAAGG,KAAK,CAACQ,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE;MACvDC,MAAM,EAAE;QACN;QACAP,OAAO,EAAE,kDAAkD;QAC3DQ,MAAM,EAAE;MACV,CAAC;MACDC,OAAO,EACL,4WAA4W;MAC9WC,MAAM,EACJ,4FAA4F;MAC9FC,QAAQ,EAAE;QACRX,OAAO,EACL,mJAAmJ;QACrJC,UAAU,EAAE;MACd,CAAC;MACDW,WAAW,EAAE;IACf,CAAC,CAAC;IACFf,KAAK,CAACQ,SAAS,CAACQ,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE;MAC/CC,OAAO,EAAE;QACPd,OAAO,EAAE,MAAM;QACfG,KAAK,EAAE,SAAS;QAChBK,MAAM,EAAE;MACV,CAAC;MACD,sBAAsB,EAAE;QACtB;QACA;QACAR,OAAO,EACL,6GAA6G;QAC/GQ,MAAM,EAAE,IAAI;QACZN,MAAM,EAAE;UACNH,aAAa,EAAEA,aAAa;UAC5BQ,MAAM,EAAE;QACV;MACF;IACF,CAAC,CAAC;IACFV,KAAK,CAACQ,SAAS,CAACQ,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE;MACpD,aAAa,EAAE;IACjB,CAAC,CAAC;IACFhB,KAAK,CAACQ,SAAS,CAACQ,YAAY,CAAC,QAAQ,EAAE,UAAU,EAAE;MACjDE,UAAU,EAAE;QACVf,OAAO,EAAE,cAAc;QACvBC,UAAU,EAAE,IAAI;QAChBE,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IACFJ,aAAa,CAACG,MAAM,CAACE,UAAU,CAACF,MAAM,GAAGL,KAAK,CAACQ,SAAS,CAACX,MAAM;EACjE,CAAC,EAAEG,KAAK,CAAC;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}