{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  var limit = max || Number.POSITIVE_INFINITY;\n  var balance = 0;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return destinationEnclosedBefore;\n    }\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return destinationRaw(code);\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return destinationEnclosed(code);\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      return destinationEnclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed;\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return destinationEnclosed;\n    }\n    return destinationEnclosed(code);\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code);\n      effects.consume(code);\n      return destinationRaw;\n    }\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString');\n        effects.exit(stringType);\n        effects.exit(rawType);\n        effects.exit(type);\n        return ok(code);\n      }\n      effects.consume(code);\n      return destinationRaw;\n    }\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code);\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (asciiControl(code)) return nok(code);\n    effects.consume(code);\n    return code === 92 ? destinationRawEscape : destinationRaw;\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return destinationRaw;\n    }\n    return destinationRaw(code);\n  }\n}","map":{"version":3,"names":["asciiControl","markdownLineEndingOrSpace","markdownLineEnding","factoryDestination","effects","ok","nok","type","literalType","literalMarkerType","rawType","stringType","max","limit","Number","POSITIVE_INFINITY","balance","start","code","enter","consume","exit","destinationEnclosedBefore","contentType","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/micromark-factory-destination/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}