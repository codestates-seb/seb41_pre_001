{"ast":null,"code":"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport { attribute } from './attribute.js';\nimport { className } from './class-name.js';\nimport { id } from './id.js';\nimport { name } from './name.js';\nimport { pseudo } from './pseudo.js';\nimport { element } from './util.js';\n\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  return Boolean(element(node) && state.schema && (!query.tagName || name(query, node)) && (!query.classNames || className(query, node)) && (!query.id || id(query, node)) && (!query.attrs || attribute(query, node, state.schema)) && (!query.pseudos || pseudo(query, node, index, parent, state)));\n}","map":{"version":3,"names":["attribute","className","id","name","pseudo","element","test","query","node","index","parent","state","Boolean","schema","tagName","classNames","attrs","pseudos"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/hast-util-select/lib/test.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\nimport {element} from './util.js'\n\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  return Boolean(\n    element(node) &&\n      state.schema &&\n      (!query.tagName || name(query, node)) &&\n      (!query.classNames || className(query, node)) &&\n      (!query.id || id(query, node)) &&\n      (!query.attrs || attribute(query, node, state.schema)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,SAAS,QAAO,gBAAgB;AACxC,SAAQC,SAAS,QAAO,iBAAiB;AACzC,SAAQC,EAAE,QAAO,SAAS;AAC1B,SAAQC,IAAI,QAAO,WAAW;AAC9B,SAAQC,MAAM,QAAO,aAAa;AAClC,SAAQC,OAAO,QAAO,WAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAI,CAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAE;EACtD,OAAOC,OAAO,CACZP,OAAO,CAACG,IAAI,CAAC,IACXG,KAAK,CAACE,MAAM,KACX,CAACN,KAAK,CAACO,OAAO,IAAIX,IAAI,CAACI,KAAK,EAAEC,IAAI,CAAC,CAAC,KACpC,CAACD,KAAK,CAACQ,UAAU,IAAId,SAAS,CAACM,KAAK,EAAEC,IAAI,CAAC,CAAC,KAC5C,CAACD,KAAK,CAACL,EAAE,IAAIA,EAAE,CAACK,KAAK,EAAEC,IAAI,CAAC,CAAC,KAC7B,CAACD,KAAK,CAACS,KAAK,IAAIhB,SAAS,CAACO,KAAK,EAAEC,IAAI,EAAEG,KAAK,CAACE,MAAM,CAAC,CAAC,KACrD,CAACN,KAAK,CAACU,OAAO,IAAIb,MAAM,CAACG,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC,CAAC,CAChE;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}