{"ast":null,"code":"import { useState, useRef, useCallback } from 'react';\nimport { HoverActionTypes } from '../utils/constants.js';\nimport { indexOfNode } from '../utils/utils.js';\nvar useItems = function useItems(menuRef, focusRef) {\n  var _useState = useState(),\n    hoverItem = _useState[0],\n    setHoverItem = _useState[1];\n  var stateRef = useRef({\n    items: [],\n    hoverIndex: -1,\n    sorted: false\n  });\n  var mutableState = stateRef.current;\n  var updateItems = useCallback(function (item, isMounted) {\n    var items = mutableState.items;\n    if (!item) {\n      mutableState.items = [];\n    } else if (isMounted) {\n      items.push(item);\n    } else {\n      var index = items.indexOf(item);\n      if (index > -1) {\n        items.splice(index, 1);\n        if (item.contains(document.activeElement)) {\n          focusRef.current.focus();\n          setHoverItem();\n        }\n      }\n    }\n    mutableState.hoverIndex = -1;\n    mutableState.sorted = false;\n  }, [mutableState, focusRef]);\n  var dispatch = useCallback(function (actionType, item, nextIndex) {\n    var items = mutableState.items,\n      hoverIndex = mutableState.hoverIndex;\n    var sortItems = function sortItems() {\n      if (mutableState.sorted) return;\n      var orderedNodes = menuRef.current.querySelectorAll('.szh-menu__item');\n      items.sort(function (a, b) {\n        return indexOfNode(orderedNodes, a) - indexOfNode(orderedNodes, b);\n      });\n      mutableState.sorted = true;\n    };\n    var index = -1,\n      newItem = undefined;\n    switch (actionType) {\n      case HoverActionTypes.RESET:\n        break;\n      case HoverActionTypes.SET:\n        newItem = item;\n        break;\n      case HoverActionTypes.UNSET:\n        newItem = function newItem(prevItem) {\n          return prevItem === item ? undefined : prevItem;\n        };\n        break;\n      case HoverActionTypes.FIRST:\n        sortItems();\n        index = 0;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.LAST:\n        sortItems();\n        index = items.length - 1;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.SET_INDEX:\n        sortItems();\n        index = nextIndex;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.INCREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index++;\n        if (index >= items.length) index = 0;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.DECREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index--;\n        if (index < 0) index = items.length - 1;\n        newItem = items[index];\n        break;\n      default:\n        if (process.env.NODE_ENV !== 'production') throw new Error(\"[React-Menu] Unknown hover action type: \" + actionType);\n    }\n    if (!newItem) index = -1;\n    setHoverItem(newItem);\n    mutableState.hoverIndex = index;\n  }, [menuRef, mutableState]);\n  return {\n    hoverItem: hoverItem,\n    dispatch: dispatch,\n    updateItems: updateItems\n  };\n};\nexport { useItems };","map":{"version":3,"names":["useState","useRef","useCallback","HoverActionTypes","indexOfNode","useItems","menuRef","focusRef","_useState","hoverItem","setHoverItem","stateRef","items","hoverIndex","sorted","mutableState","current","updateItems","item","isMounted","push","index","indexOf","splice","contains","document","activeElement","focus","dispatch","actionType","nextIndex","sortItems","orderedNodes","querySelectorAll","sort","a","b","newItem","undefined","RESET","SET","UNSET","prevItem","FIRST","LAST","length","SET_INDEX","INCREASE","DECREASE","process","env","NODE_ENV","Error"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/@szhsin/react-menu/dist/es/hooks/useItems.js"],"sourcesContent":["import { useState, useRef, useCallback } from 'react';\nimport { HoverActionTypes } from '../utils/constants.js';\nimport { indexOfNode } from '../utils/utils.js';\n\nvar useItems = function useItems(menuRef, focusRef) {\n  var _useState = useState(),\n    hoverItem = _useState[0],\n    setHoverItem = _useState[1];\n  var stateRef = useRef({\n    items: [],\n    hoverIndex: -1,\n    sorted: false\n  });\n  var mutableState = stateRef.current;\n  var updateItems = useCallback(function (item, isMounted) {\n    var items = mutableState.items;\n    if (!item) {\n      mutableState.items = [];\n    } else if (isMounted) {\n      items.push(item);\n    } else {\n      var index = items.indexOf(item);\n      if (index > -1) {\n        items.splice(index, 1);\n        if (item.contains(document.activeElement)) {\n          focusRef.current.focus();\n          setHoverItem();\n        }\n      }\n    }\n    mutableState.hoverIndex = -1;\n    mutableState.sorted = false;\n  }, [mutableState, focusRef]);\n  var dispatch = useCallback(function (actionType, item, nextIndex) {\n    var items = mutableState.items,\n      hoverIndex = mutableState.hoverIndex;\n    var sortItems = function sortItems() {\n      if (mutableState.sorted) return;\n      var orderedNodes = menuRef.current.querySelectorAll('.szh-menu__item');\n      items.sort(function (a, b) {\n        return indexOfNode(orderedNodes, a) - indexOfNode(orderedNodes, b);\n      });\n      mutableState.sorted = true;\n    };\n    var index = -1,\n      newItem = undefined;\n    switch (actionType) {\n      case HoverActionTypes.RESET:\n        break;\n      case HoverActionTypes.SET:\n        newItem = item;\n        break;\n      case HoverActionTypes.UNSET:\n        newItem = function newItem(prevItem) {\n          return prevItem === item ? undefined : prevItem;\n        };\n        break;\n      case HoverActionTypes.FIRST:\n        sortItems();\n        index = 0;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.LAST:\n        sortItems();\n        index = items.length - 1;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.SET_INDEX:\n        sortItems();\n        index = nextIndex;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.INCREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index++;\n        if (index >= items.length) index = 0;\n        newItem = items[index];\n        break;\n      case HoverActionTypes.DECREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index--;\n        if (index < 0) index = items.length - 1;\n        newItem = items[index];\n        break;\n      default:\n        if (process.env.NODE_ENV !== 'production') throw new Error(\"[React-Menu] Unknown hover action type: \" + actionType);\n    }\n    if (!newItem) index = -1;\n    setHoverItem(newItem);\n    mutableState.hoverIndex = index;\n  }, [menuRef, mutableState]);\n  return {\n    hoverItem: hoverItem,\n    dispatch: dispatch,\n    updateItems: updateItems\n  };\n};\n\nexport { useItems };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}