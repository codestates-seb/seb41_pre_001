{"ast":null,"code":"// @ts-nocheck\nimport refractorMarkup from './markup.js';\nxmlDoc.displayName = 'xml-doc';\nxmlDoc.aliases = [];\n\n/** @type {import('../core.js').Syntax} */\nexport default function xmlDoc(Prism) {\n  Prism.register(refractorMarkup);\n  (function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        });\n      }\n    }\n    var tag = Prism.languages.markup.tag;\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    };\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    };\n    insertDocComment('csharp', slashDocComment);\n    insertDocComment('fsharp', slashDocComment);\n    insertDocComment('vbnet', tickDocComment);\n  })(Prism);\n}","map":{"version":3,"names":["refractorMarkup","xmlDoc","displayName","aliases","Prism","register","insertDocComment","lang","docComment","languages","insertBefore","tag","markup","slashDocComment","pattern","greedy","alias","inside","tickDocComment"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/xml-doc.js"],"sourcesContent":["// @ts-nocheck\nimport refractorMarkup from './markup.js'\nxmlDoc.displayName = 'xml-doc'\nxmlDoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function xmlDoc(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n"],"mappings":"AAAA;AACA,OAAOA,eAAe,MAAM,aAAa;AACzCC,MAAM,CAACC,WAAW,GAAG,SAAS;AAC9BD,MAAM,CAACE,OAAO,GAAG,EAAE;;AAEnB;AACA,eAAe,SAASF,MAAM,CAACG,KAAK,EAAE;EACpCA,KAAK,CAACC,QAAQ,CAACL,eAAe,CAAC;EAC9B,CAAC,UAAUI,KAAK,EAAE;IACjB;AACJ;AACA;AACA;AACA;AACA;IACI,SAASE,gBAAgB,CAACC,IAAI,EAAEC,UAAU,EAAE;MAC1C,IAAIJ,KAAK,CAACK,SAAS,CAACF,IAAI,CAAC,EAAE;QACzBH,KAAK,CAACK,SAAS,CAACC,YAAY,CAACH,IAAI,EAAE,SAAS,EAAE;UAC5C,aAAa,EAAEC;QACjB,CAAC,CAAC;MACJ;IACF;IAEA,IAAIG,GAAG,GAAGP,KAAK,CAACK,SAAS,CAACG,MAAM,CAACD,GAAG;IACpC,IAAIE,eAAe,GAAG;MACpBC,OAAO,EAAE,UAAU;MACnBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE;QACNN,GAAG,EAAEA;MACP;IACF,CAAC;IACD,IAAIO,cAAc,GAAG;MACnBJ,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE;QACNN,GAAG,EAAEA;MACP;IACF,CAAC;IACDL,gBAAgB,CAAC,QAAQ,EAAEO,eAAe,CAAC;IAC3CP,gBAAgB,CAAC,QAAQ,EAAEO,eAAe,CAAC;IAC3CP,gBAAgB,CAAC,OAAO,EAAEY,cAAc,CAAC;EAC3C,CAAC,EAAEd,KAAK,CAAC;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}