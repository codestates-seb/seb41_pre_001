{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n\n/** @type {Construct} */\nexport var htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this;\n  /** @type {NonNullable<Code>|undefined} */\n\n  var marker;\n  /** @type {string} */\n\n  var buffer;\n  /** @type {number} */\n\n  var index;\n  /** @type {State} */\n\n  var returnState;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText');\n    effects.enter('htmlTextData');\n    effects.consume(code);\n    return open;\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpen;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      buffer = 'CDATA[';\n      index = 0;\n      return cdataOpen;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentStart;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentStartDash;\n    }\n    return comment(code);\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n    return comment(code);\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return atLineEnding(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return end;\n    }\n    return comment(code);\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === buffer.length ? cdata : cdataOpen;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return atLineEnding(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return atLineEnding(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return atLineEnding(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return atLineEnding(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return atLineEnding(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return atLineEnding(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return atLineEnding(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    marker = undefined;\n    return tagOpenAttributeValueUnquoted;\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return atLineEnding(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  } // We canâ€™t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, afterPrefix, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData');\n    return returnState(code);\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit('htmlTextData');\n      effects.exit('htmlText');\n      return ok;\n    }\n    return nok(code);\n  }\n}","map":{"version":3,"names":["factorySpace","asciiAlpha","asciiAlphanumeric","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","htmlText","name","tokenize","tokenizeHtmlText","effects","ok","nok","self","marker","buffer","index","returnState","start","code","enter","consume","open","declarationOpen","tagCloseStart","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","end","charCodeAt","length","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","undefined","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","exit","afterPrefix","parser","constructs","disable","null","includes"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/micromark-core-commonmark/lib/html-text.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We canâ€™t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}