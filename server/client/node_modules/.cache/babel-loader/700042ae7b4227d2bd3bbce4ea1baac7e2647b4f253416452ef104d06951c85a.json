{"ast":null,"code":"/*\r\n * exception.js: Utility methods for gathing information about uncaughtExceptions.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n *\r\n */\n\nvar os = require('os'),\n  stackTrace = require('stack-trace');\nvar exception = exports;\nexception.getAllInfo = function (err) {\n  return {\n    date: new Date().toString(),\n    process: exception.getProcessInfo(),\n    os: exception.getOsInfo(),\n    trace: exception.getTrace(err),\n    stack: err.stack && err.stack.split('\\n')\n  };\n};\nexception.getProcessInfo = function () {\n  return {\n    pid: process.pid,\n    uid: process.getuid ? process.getuid() : null,\n    gid: process.getgid ? process.getgid() : null,\n    cwd: process.cwd(),\n    execPath: process.execPath,\n    version: process.version,\n    argv: process.argv,\n    memoryUsage: process.memoryUsage()\n  };\n};\nexception.getOsInfo = function () {\n  return {\n    loadavg: os.loadavg(),\n    uptime: os.uptime()\n  };\n};\nexception.getTrace = function (err) {\n  var trace = err ? stackTrace.parse(err) : stackTrace.get();\n  return trace.map(function (site) {\n    return {\n      column: site.getColumnNumber(),\n      file: site.getFileName(),\n      function: site.getFunctionName(),\n      line: site.getLineNumber(),\n      method: site.getMethodName(),\n      native: site.isNative()\n    };\n  });\n};","map":{"version":3,"names":["os","require","stackTrace","exception","exports","getAllInfo","err","date","Date","toString","process","getProcessInfo","getOsInfo","trace","getTrace","stack","split","pid","uid","getuid","gid","getgid","cwd","execPath","version","argv","memoryUsage","loadavg","uptime","parse","get","map","site","column","getColumnNumber","file","getFileName","function","getFunctionName","line","getLineNumber","method","getMethodName","native","isNative"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/winston/lib/winston/exception.js"],"sourcesContent":["/*\r\n * exception.js: Utility methods for gathing information about uncaughtExceptions.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n *\r\n */\r\n\r\nvar os = require('os'),\r\n    stackTrace = require('stack-trace');\r\n\r\nvar exception = exports;\r\n\r\nexception.getAllInfo = function (err) {\r\n  return {\r\n    date:    new Date().toString(),\r\n    process: exception.getProcessInfo(),\r\n    os:      exception.getOsInfo(),\r\n    trace:   exception.getTrace(err),\r\n    stack:   err.stack && err.stack.split('\\n')\r\n  };\r\n};\r\n\r\nexception.getProcessInfo = function () {\r\n  return {\r\n    pid:         process.pid,\r\n    uid:         process.getuid ? process.getuid() : null,\r\n    gid:         process.getgid ? process.getgid() : null,\r\n    cwd:         process.cwd(),\r\n    execPath:    process.execPath,\r\n    version:     process.version,\r\n    argv:        process.argv,\r\n    memoryUsage: process.memoryUsage()\r\n  };\r\n};\r\n\r\nexception.getOsInfo = function () {\r\n  return {\r\n    loadavg: os.loadavg(),\r\n    uptime:  os.uptime()\r\n  };\r\n};\r\n\r\nexception.getTrace = function (err) {\r\n  var trace = err ? stackTrace.parse(err) : stackTrace.get();\r\n  return trace.map(function (site) {\r\n    return {\r\n      column:   site.getColumnNumber(),\r\n      file:     site.getFileName(),\r\n      function: site.getFunctionName(),\r\n      line:     site.getLineNumber(),\r\n      method:   site.getMethodName(),\r\n      native:   site.isNative(),\r\n    }\r\n  });\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;EAClBC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEvC,IAAIE,SAAS,GAAGC,OAAO;AAEvBD,SAAS,CAACE,UAAU,GAAG,UAAUC,GAAG,EAAE;EACpC,OAAO;IACLC,IAAI,EAAK,IAAIC,IAAI,EAAE,CAACC,QAAQ,EAAE;IAC9BC,OAAO,EAAEP,SAAS,CAACQ,cAAc,EAAE;IACnCX,EAAE,EAAOG,SAAS,CAACS,SAAS,EAAE;IAC9BC,KAAK,EAAIV,SAAS,CAACW,QAAQ,CAACR,GAAG,CAAC;IAChCS,KAAK,EAAIT,GAAG,CAACS,KAAK,IAAIT,GAAG,CAACS,KAAK,CAACC,KAAK,CAAC,IAAI;EAC5C,CAAC;AACH,CAAC;AAEDb,SAAS,CAACQ,cAAc,GAAG,YAAY;EACrC,OAAO;IACLM,GAAG,EAAUP,OAAO,CAACO,GAAG;IACxBC,GAAG,EAAUR,OAAO,CAACS,MAAM,GAAGT,OAAO,CAACS,MAAM,EAAE,GAAG,IAAI;IACrDC,GAAG,EAAUV,OAAO,CAACW,MAAM,GAAGX,OAAO,CAACW,MAAM,EAAE,GAAG,IAAI;IACrDC,GAAG,EAAUZ,OAAO,CAACY,GAAG,EAAE;IAC1BC,QAAQ,EAAKb,OAAO,CAACa,QAAQ;IAC7BC,OAAO,EAAMd,OAAO,CAACc,OAAO;IAC5BC,IAAI,EAASf,OAAO,CAACe,IAAI;IACzBC,WAAW,EAAEhB,OAAO,CAACgB,WAAW;EAClC,CAAC;AACH,CAAC;AAEDvB,SAAS,CAACS,SAAS,GAAG,YAAY;EAChC,OAAO;IACLe,OAAO,EAAE3B,EAAE,CAAC2B,OAAO,EAAE;IACrBC,MAAM,EAAG5B,EAAE,CAAC4B,MAAM;EACpB,CAAC;AACH,CAAC;AAEDzB,SAAS,CAACW,QAAQ,GAAG,UAAUR,GAAG,EAAE;EAClC,IAAIO,KAAK,GAAGP,GAAG,GAAGJ,UAAU,CAAC2B,KAAK,CAACvB,GAAG,CAAC,GAAGJ,UAAU,CAAC4B,GAAG,EAAE;EAC1D,OAAOjB,KAAK,CAACkB,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC/B,OAAO;MACLC,MAAM,EAAID,IAAI,CAACE,eAAe,EAAE;MAChCC,IAAI,EAAMH,IAAI,CAACI,WAAW,EAAE;MAC5BC,QAAQ,EAAEL,IAAI,CAACM,eAAe,EAAE;MAChCC,IAAI,EAAMP,IAAI,CAACQ,aAAa,EAAE;MAC9BC,MAAM,EAAIT,IAAI,CAACU,aAAa,EAAE;MAC9BC,MAAM,EAAIX,IAAI,CAACY,QAAQ;IACzB,CAAC;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}