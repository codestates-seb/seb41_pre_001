{"ast":null,"code":"/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport { track } from './track.js';\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack;\n  const children = parent.children || [];\n  const tracker = track(safeOptions);\n  /** @type {Array<string>} */\n  const results = [];\n  let index = -1;\n  indexStack.push(-1);\n  while (++index < children.length) {\n    const child = children[index];\n    indexStack[indexStack.length - 1] = index;\n    results.push(tracker.move(context.handle(child, parent, context, {\n      before: '\\n',\n      after: '\\n',\n      ...tracker.current()\n    })));\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined;\n    }\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])));\n    }\n  }\n  indexStack.pop();\n  return results.join('');\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length;\n    while (index--) {\n      const result = context.join[index](left, right, parent, context);\n      if (result === true || result === 1) {\n        break;\n      }\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result);\n      }\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n';\n      }\n    }\n    return '\\n\\n';\n  }\n}","map":{"version":3,"names":["track","containerFlow","parent","context","safeOptions","indexStack","children","tracker","results","index","push","length","child","move","handle","before","after","current","type","bulletLastUsed","undefined","between","pop","join","left","right","result","repeat"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/mdast-util-to-markdown/lib/util/container-flow.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,KAAK,QAAO,YAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAa,CAACC,MAAM,EAAEC,OAAO,EAAEC,WAAW,EAAE;EAC1D,MAAMC,UAAU,GAAGF,OAAO,CAACE,UAAU;EACrC,MAAMC,QAAQ,GAAGJ,MAAM,CAACI,QAAQ,IAAI,EAAE;EACtC,MAAMC,OAAO,GAAGP,KAAK,CAACI,WAAW,CAAC;EAClC;EACA,MAAMI,OAAO,GAAG,EAAE;EAClB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEdJ,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;EAEnB,OAAO,EAAED,KAAK,GAAGH,QAAQ,CAACK,MAAM,EAAE;IAChC,MAAMC,KAAK,GAAGN,QAAQ,CAACG,KAAK,CAAC;IAE7BJ,UAAU,CAACA,UAAU,CAACM,MAAM,GAAG,CAAC,CAAC,GAAGF,KAAK;IAEzCD,OAAO,CAACE,IAAI,CACVH,OAAO,CAACM,IAAI,CACVV,OAAO,CAACW,MAAM,CAACF,KAAK,EAAEV,MAAM,EAAEC,OAAO,EAAE;MACrCY,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,IAAI;MACX,GAAGT,OAAO,CAACU,OAAO;IACpB,CAAC,CAAC,CACH,CACF;IAED,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;MACzBf,OAAO,CAACgB,cAAc,GAAGC,SAAS;IACpC;IAEA,IAAIX,KAAK,GAAGH,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;MAC/BH,OAAO,CAACE,IAAI,CAACH,OAAO,CAACM,IAAI,CAACQ,OAAO,CAACT,KAAK,EAAEN,QAAQ,CAACG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE;EACF;EAEAJ,UAAU,CAACiB,GAAG,EAAE;EAEhB,OAAOd,OAAO,CAACe,IAAI,CAAC,EAAE,CAAC;;EAEvB;AACF;AACA;AACA;AACA;EACE,SAASF,OAAO,CAACG,IAAI,EAAEC,KAAK,EAAE;IAC5B,IAAIhB,KAAK,GAAGN,OAAO,CAACoB,IAAI,CAACZ,MAAM;IAE/B,OAAOF,KAAK,EAAE,EAAE;MACd,MAAMiB,MAAM,GAAGvB,OAAO,CAACoB,IAAI,CAACd,KAAK,CAAC,CAACe,IAAI,EAAEC,KAAK,EAAEvB,MAAM,EAAEC,OAAO,CAAC;MAEhE,IAAIuB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,CAAC,EAAE;QACnC;MACF;MAEA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,MAAM,CAAC;MAChC;MAEA,IAAIA,MAAM,KAAK,KAAK,EAAE;QACpB,OAAO,iBAAiB;MAC1B;IACF;IAEA,OAAO,MAAM;EACf;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}