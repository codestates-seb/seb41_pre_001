{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n/** @type {Construct} */\n\nexport var htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n/** @type {Construct} */\n\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n};\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start; // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start; // Remove the line prefix.\n\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this;\n  /** @type {number} */\n\n  var kind;\n  /** @type {boolean} */\n\n  var startTag;\n  /** @type {string} */\n\n  var buffer;\n  /** @type {number} */\n\n  var index;\n  /** @type {Code} */\n\n  var marker;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow');\n    effects.enter('htmlFlowData');\n    effects.consume(code);\n    return open;\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationStart;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      kind = 3; // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      startTag = true;\n      return tagName;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code);\n      kind = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      kind = 5;\n      buffer = 'CDATA[';\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      kind = 4;\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === buffer.length ? self.interrupt ? ok : continuation : cdataOpenInside;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      if (code !== 47 && startTag && htmlRawNames.includes(buffer.toLowerCase())) {\n        kind = 1;\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6;\n        if (code === 47) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      kind = 7; // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : startTag ? completeAttributeNameBefore(code) : completeClosingTagAfter(code);\n    }\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    marker = null;\n    return completeAttributeValueUnquoted(code);\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    if (code === marker) {\n      effects.consume(code);\n      return completeAttributeValueQuotedAfter;\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return code === null || markdownLineEnding(code) ? continuation(code) : nok(code);\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && kind === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && kind === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && kind === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && kind === 5) {\n      effects.consume(code);\n      return continuationCharacterDataInside;\n    }\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(nextBlankConstruct, continuationClose, continuationAtLineEnding)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData');\n    return htmlContinueStart(code);\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt({\n        tokenize: htmlLineEnd,\n        partial: true\n      }, htmlContinueStart, done)(code);\n    }\n    effects.enter('htmlFlowData');\n    return continuation(code);\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start;\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return lineStart;\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData');\n      return done(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow');\n    return ok(code);\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData');\n    effects.enter('lineEndingBlank');\n    effects.consume(code);\n    effects.exit('lineEndingBlank');\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","map":{"version":3,"names":["asciiAlpha","asciiAlphanumeric","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","htmlBlockNames","htmlRawNames","blankLine","htmlFlow","name","tokenize","tokenizeHtmlFlow","resolveTo","resolveToHtmlFlow","concrete","nextBlankConstruct","tokenizeNextBlank","partial","events","index","length","type","start","splice","effects","ok","nok","self","kind","startTag","buffer","marker","code","enter","consume","open","declarationStart","tagCloseStart","interrupt","continuationDeclarationInside","String","fromCharCode","tagName","commentOpenInside","cdataOpenInside","charCodeAt","continuation","includes","toLowerCase","basicSelfClosing","parser","lazy","now","line","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","check","continuationAtLineEnding","exit","htmlContinueStart","done","attempt","htmlLineEnd","lineStart","continuationRawEndTag"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/micromark-core-commonmark/lib/html-flow.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}