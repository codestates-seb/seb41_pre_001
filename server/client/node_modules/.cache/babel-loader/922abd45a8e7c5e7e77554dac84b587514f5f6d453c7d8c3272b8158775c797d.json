{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\n\nimport Slugger from 'github-slugger';\nimport { hasProperty } from 'hast-util-has-property';\nimport { headingRank } from 'hast-util-heading-rank';\nimport { toString } from 'hast-util-to-string';\nimport { visit } from 'unist-util-visit';\nconst slugs = new Slugger();\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeSlug() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const prefix = options.prefix || '';\n  return tree => {\n    slugs.reset();\n    visit(tree, 'element', node => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node));\n      }\n    });\n  };\n}","map":{"version":3,"names":["Slugger","hasProperty","headingRank","toString","visit","slugs","rehypeSlug","options","prefix","tree","reset","node","properties","id","slug"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/rehype-slug/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeSlug(options = {}) {\n  const prefix = options.prefix || ''\n\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,SAAQC,WAAW,QAAO,wBAAwB;AAClD,SAAQC,WAAW,QAAO,wBAAwB;AAClD,SAAQC,QAAQ,QAAO,qBAAqB;AAC5C,SAAQC,KAAK,QAAO,kBAAkB;AAEtC,MAAMC,KAAK,GAAG,IAAIL,OAAO,EAAE;;AAE3B;AACA;AACA;AACA;AACA;AACA,eAAe,SAASM,UAAU,GAAe;EAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;EAC7C,MAAMC,MAAM,GAAGD,OAAO,CAACC,MAAM,IAAI,EAAE;EAEnC,OAAQC,IAAI,IAAK;IACfJ,KAAK,CAACK,KAAK,EAAE;IAEbN,KAAK,CAACK,IAAI,EAAE,SAAS,EAAGE,IAAI,IAAK;MAC/B,IAAIT,WAAW,CAACS,IAAI,CAAC,IAAIA,IAAI,CAACC,UAAU,IAAI,CAACX,WAAW,CAACU,IAAI,EAAE,IAAI,CAAC,EAAE;QACpEA,IAAI,CAACC,UAAU,CAACC,EAAE,GAAGL,MAAM,GAAGH,KAAK,CAACS,IAAI,CAACX,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAC1D;IACF,CAAC,CAAC;EACJ,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}