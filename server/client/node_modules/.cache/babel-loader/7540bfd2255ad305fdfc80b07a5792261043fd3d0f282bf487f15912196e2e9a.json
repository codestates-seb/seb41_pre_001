{"ast":null,"code":"// @ts-nocheck\napl.displayName = 'apl';\napl.aliases = [];\n\n/** @type {import('../core.js').Syntax} */\nexport default function apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number: /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  };\n}","map":{"version":3,"names":["apl","displayName","aliases","Prism","languages","comment","string","pattern","greedy","number","statement","alias","constant","function","assignment","punctuation","dfn"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/apl.js"],"sourcesContent":["// @ts-nocheck\napl.displayName = 'apl'\napl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAW,GAAG,KAAK;AACvBD,GAAG,CAACE,OAAO,GAAG,EAAE;;AAEhB;AACA,eAAe,SAASF,GAAG,CAACG,KAAK,EAAE;EACjCA,KAAK,CAACC,SAAS,CAACJ,GAAG,GAAG;IACpBK,OAAO,EAAE,iBAAiB;IAC1BC,MAAM,EAAE;MACNC,OAAO,EAAE,oBAAoB;MAC7BC,MAAM,EAAE;IACV,CAAC;IACDC,MAAM,EACJ,2FAA2F;IAC7FC,SAAS,EAAE,wBAAwB;IACnC,iBAAiB,EAAE;MACjBH,OAAO,EAAE,UAAU;MACnBI,KAAK,EAAE;IACT,CAAC;IACDC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE,iEAAiE;IAC3E,kBAAkB,EAAE;MAClBN,OAAO,EAAE,eAAe;MACxBI,KAAK,EAAE;IACT,CAAC;IACD,iBAAiB,EAAE;MACjBJ,OAAO,EAAE,aAAa;MACtBI,KAAK,EAAE;IACT,CAAC;IACDG,UAAU,EAAE;MACVP,OAAO,EAAE,GAAG;MACZI,KAAK,EAAE;IACT,CAAC;IACDI,WAAW,EAAE,aAAa;IAC1BC,GAAG,EAAE;MACHT,OAAO,EAAE,aAAa;MACtBI,KAAK,EAAE;IACT;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}