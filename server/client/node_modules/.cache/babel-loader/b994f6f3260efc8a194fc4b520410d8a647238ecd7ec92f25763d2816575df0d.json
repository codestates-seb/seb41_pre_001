{"ast":null,"code":"// @ts-nocheck\nimport refractorJava from './java.js';\nimport refractorMata from './mata.js';\nimport refractorPython from './python.js';\nstata.displayName = 'stata';\nstata.aliases = [];\n\n/** @type {import('../core.js').Syntax} */\nexport default function stata(Prism) {\n  Prism.register(refractorJava);\n  Prism.register(refractorMata);\n  Prism.register(refractorPython);\n  // https://www.stata.com/manuals/u.pdf\n  // https://www.stata.com/manuals/p.pdf\n  Prism.languages.stata = {\n    comment: [{\n      pattern: /(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      greedy: true\n    }],\n    'string-literal': {\n      pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n          inside: {\n            punctuation: /^\\$\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n\n        string: /[\\s\\S]+/\n      }\n    },\n    mata: {\n      pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-mata',\n      inside: Prism.languages.mata\n    },\n    java: {\n      pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-java',\n      inside: Prism.languages.java\n    },\n    python: {\n      pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-python',\n      inside: Prism.languages.python\n    },\n    command: {\n      pattern: /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n    keyword: /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\n    boolean: /\\b(?:off|on)\\b/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\n    punctuation: /[(){}[\\],:]/\n  };\n  Prism.languages.stata['string-literal'].inside.interpolation.inside.expression.inside = Prism.languages.stata;\n}","map":{"version":3,"names":["refractorJava","refractorMata","refractorPython","stata","displayName","aliases","Prism","register","languages","comment","pattern","lookbehind","greedy","inside","interpolation","punctuation","expression","string","mata","alias","java","python","command","variable","keyword","boolean","number","function","operator"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/refractor/lang/stata.js"],"sourcesContent":["// @ts-nocheck\nimport refractorJava from './java.js'\nimport refractorMata from './mata.js'\nimport refractorPython from './python.js'\nstata.displayName = 'stata'\nstata.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function stata(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorMata)\n  Prism.register(refractorPython)\n  // https://www.stata.com/manuals/u.pdf\n  // https://www.stata.com/manuals/p.pdf\n  Prism.languages.stata = {\n    comment: [\n      {\n        pattern: /(^[ \\t]*)\\*.*/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'string-literal': {\n      pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n          inside: {\n            punctuation: /^\\$\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    mata: {\n      pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-mata',\n      inside: Prism.languages.mata\n    },\n    java: {\n      pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-java',\n      inside: Prism.languages.java\n    },\n    python: {\n      pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-python',\n      inside: Prism.languages.python\n    },\n    command: {\n      pattern:\n        /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n    keyword:\n      /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\n    boolean: /\\b(?:off|on)\\b/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\n    punctuation: /[(){}[\\],:]/\n  }\n  Prism.languages.stata[\n    'string-literal'\n  ].inside.interpolation.inside.expression.inside = Prism.languages.stata\n}\n"],"mappings":"AAAA;AACA,OAAOA,aAAa,MAAM,WAAW;AACrC,OAAOC,aAAa,MAAM,WAAW;AACrC,OAAOC,eAAe,MAAM,aAAa;AACzCC,KAAK,CAACC,WAAW,GAAG,OAAO;AAC3BD,KAAK,CAACE,OAAO,GAAG,EAAE;;AAElB;AACA,eAAe,SAASF,KAAK,CAACG,KAAK,EAAE;EACnCA,KAAK,CAACC,QAAQ,CAACP,aAAa,CAAC;EAC7BM,KAAK,CAACC,QAAQ,CAACN,aAAa,CAAC;EAC7BK,KAAK,CAACC,QAAQ,CAACL,eAAe,CAAC;EAC/B;EACA;EACAI,KAAK,CAACE,SAAS,CAACL,KAAK,GAAG;IACtBM,OAAO,EAAE,CACP;MACEC,OAAO,EAAE,gBAAgB;MACzBC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACV,CAAC,EACD;MACEF,OAAO,EAAE,+BAA+B;MACxCC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACV,CAAC,CACF;IACD,gBAAgB,EAAE;MAChBF,OAAO,EAAE,6BAA6B;MACtCE,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;QACNC,aAAa,EAAE;UACbJ,OAAO,EAAE,sCAAsC;UAC/CG,MAAM,EAAE;YACNE,WAAW,EAAE,WAAW;YACxBC,UAAU,EAAE;cACVN,OAAO,EAAE,SAAS;cAClBG,MAAM,EAAE,IAAI,CAAC;YACf;UACF;QACF,CAAC;;QACDI,MAAM,EAAE;MACV;IACF,CAAC;IACDC,IAAI,EAAE;MACJR,OAAO,EAAE,yCAAyC;MAClDC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI;MACZO,KAAK,EAAE,eAAe;MACtBN,MAAM,EAAEP,KAAK,CAACE,SAAS,CAACU;IAC1B,CAAC;IACDE,IAAI,EAAE;MACJV,OAAO,EAAE,yCAAyC;MAClDC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI;MACZO,KAAK,EAAE,eAAe;MACtBN,MAAM,EAAEP,KAAK,CAACE,SAAS,CAACY;IAC1B,CAAC;IACDC,MAAM,EAAE;MACNX,OAAO,EAAE,2CAA2C;MACpDC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI;MACZO,KAAK,EAAE,iBAAiB;MACxBN,MAAM,EAAEP,KAAK,CAACE,SAAS,CAACa;IAC1B,CAAC;IACDC,OAAO,EAAE;MACPZ,OAAO,EACL,iQAAiQ;MACnQC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI;MACZO,KAAK,EAAE;IACT,CAAC;IACDI,QAAQ,EAAE,+BAA+B;IACzCC,OAAO,EACL,4MAA4M;IAC9MC,OAAO,EAAE,gBAAgB;IACzBC,MAAM,EAAE,2BAA2B;IACnCC,QAAQ,EAAE,oBAAoB;IAC9BC,QAAQ,EAAE,kCAAkC;IAC5Cb,WAAW,EAAE;EACf,CAAC;EACDT,KAAK,CAACE,SAAS,CAACL,KAAK,CACnB,gBAAgB,CACjB,CAACU,MAAM,CAACC,aAAa,CAACD,MAAM,CAACG,UAAU,CAACH,MAAM,GAAGP,KAAK,CAACE,SAAS,CAACL,KAAK;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}