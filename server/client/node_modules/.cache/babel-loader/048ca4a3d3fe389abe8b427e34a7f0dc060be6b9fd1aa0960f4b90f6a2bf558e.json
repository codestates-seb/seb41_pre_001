{"ast":null,"code":"/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\n\nimport { whitespace } from 'hast-util-whitespace';\nexport const siblingAfter = siblings(1);\nexport const siblingBefore = siblings(-1);\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling;\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children;\n    let offset = index + increment;\n    let next = siblings && siblings[offset];\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment;\n        next = siblings[offset];\n      }\n    }\n    return next;\n  }\n}","map":{"version":3,"names":["whitespace","siblingAfter","siblings","siblingBefore","increment","sibling","parent","index","includeWhitespace","children","offset","next"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/hast-util-to-html/lib/omission/util/siblings.js"],"sourcesContent":["/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children\n    let offset = index + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,UAAU,QAAO,sBAAsB;AAE/C,OAAO,MAAMC,YAAY,GAAGC,QAAQ,CAAC,CAAC,CAAC;AACvC,OAAO,MAAMC,aAAa,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,CAACE,SAAS,EAAE;EAC3B,OAAOC,OAAO;;EAEd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,OAAO,CAACC,MAAM,EAAEC,KAAK,EAAEC,iBAAiB,EAAE;IACjD,MAAMN,QAAQ,GAAGI,MAAM,IAAIA,MAAM,CAACG,QAAQ;IAC1C,IAAIC,MAAM,GAAGH,KAAK,GAAGH,SAAS;IAC9B,IAAIO,IAAI,GAAGT,QAAQ,IAAIA,QAAQ,CAACQ,MAAM,CAAC;IAEvC,IAAI,CAACF,iBAAiB,EAAE;MACtB,OAAOG,IAAI,IAAIX,UAAU,CAACW,IAAI,CAAC,EAAE;QAC/BD,MAAM,IAAIN,SAAS;QACnBO,IAAI,GAAGT,QAAQ,CAACQ,MAAM,CAAC;MACzB;IACF;IAEA,OAAOC,IAAI;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}