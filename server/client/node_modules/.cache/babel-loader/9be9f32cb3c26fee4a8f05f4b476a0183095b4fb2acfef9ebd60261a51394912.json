{"ast":null,"code":"const ACCESS_TOKEN = 'accessToken';\nexport const getToken = () => localStorage.getItem(ACCESS_TOKEN);\nexport const setToken = accessToken => localStorage.setItem(ACCESS_TOKEN, accessToken);\nexport const logout = () => {\n  localStorage.removeItem(ACCESS_TOKEN);\n};\nexport const IS_ALIVE = () => {\n  return !!getToken();\n};\n_c = IS_ALIVE;\nexport const pushDefaultConfig = () => {\n  return {\n    withCredentials: true\n  };\n};\n\n/**\n * 토큰값이 필요할때\n * @returns with\n */\nexport const pushDefaultWithToken = () => {\n  const config = pushDefaultConfig();\n  config.headers = {\n    Authorization: getToken\n  };\n  return config;\n};\n\n/**\n * 추가로 axios config에 넣을값이 있을 때\n * @param {*} key 추가할 key\n * @param {*} value 추가할 value\n * @param {*} isDefualt withCredentials설정\n * @param {*} targetConfig 기존에 있는것에 추가할때\n * @returns \n */\nexport const pushValueInConfig = (key, value, isDefualt, targetConfig) => {\n  const defaultConfig = pushDefaultConfig();\n  if (targetConfig) {\n    if (!targetConfig[key]) {\n      targetConfig[key] = value;\n      if (isDefualt && !targetConfig.withCredentials) {\n        return {\n          ...targetConfig,\n          defaultConfig\n        };\n      }\n      return targetConfig;\n    }\n  }\n  targetConfig = {\n    key: value\n  };\n  if (isDefualt) {\n    targetConfig = {\n      ...targetConfig,\n      defaultConfig\n    };\n  }\n  return targetConfig;\n};\nvar _c;\n$RefreshReg$(_c, \"IS_ALIVE\");","map":{"version":3,"names":["ACCESS_TOKEN","getToken","localStorage","getItem","setToken","accessToken","setItem","logout","removeItem","IS_ALIVE","pushDefaultConfig","withCredentials","pushDefaultWithToken","config","headers","Authorization","pushValueInConfig","key","value","isDefualt","targetConfig","defaultConfig"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/util/tokenHelper.js"],"sourcesContent":["const ACCESS_TOKEN = 'accessToken';\n\nexport const getToken = () => localStorage.getItem(ACCESS_TOKEN);\n\nexport const setToken = (accessToken) =>\n  localStorage.setItem(ACCESS_TOKEN, accessToken);\n\nexport const logout = () => {\n  localStorage.removeItem(ACCESS_TOKEN);\n};\n\nexport const IS_ALIVE = () => {\n  return !!getToken();\n};\n\nexport const pushDefaultConfig = () => {\n  return { withCredentials: true };\n};\n\n/**\n * 토큰값이 필요할때\n * @returns with\n */\nexport const pushDefaultWithToken = () => {\n  const config = pushDefaultConfig();\n  config.headers = { Authorization: getToken };\n  return config;\n};\n\n/**\n * 추가로 axios config에 넣을값이 있을 때\n * @param {*} key 추가할 key\n * @param {*} value 추가할 value\n * @param {*} isDefualt withCredentials설정\n * @param {*} targetConfig 기존에 있는것에 추가할때\n * @returns \n */\nexport const pushValueInConfig = (key, value, isDefualt, targetConfig) => {\n  const defaultConfig = pushDefaultConfig();\n\n  if (targetConfig) {\n    if (!targetConfig[key]) {\n      targetConfig[key] = value;\n      if (isDefualt && !targetConfig.withCredentials) {\n        return { ...targetConfig, defaultConfig };\n      }\n      return targetConfig;\n    }\n  }\n\n  targetConfig = { key: value };\n  if (isDefualt) {\n    targetConfig = { ...targetConfig, defaultConfig };\n  }\n  return targetConfig;\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,aAAa;AAElC,OAAO,MAAMC,QAAQ,GAAG,MAAMC,YAAY,CAACC,OAAO,CAACH,YAAY,CAAC;AAEhE,OAAO,MAAMI,QAAQ,GAAIC,WAAW,IAClCH,YAAY,CAACI,OAAO,CAACN,YAAY,EAAEK,WAAW,CAAC;AAEjD,OAAO,MAAME,MAAM,GAAG,MAAM;EAC1BL,YAAY,CAACM,UAAU,CAACR,YAAY,CAAC;AACvC,CAAC;AAED,OAAO,MAAMS,QAAQ,GAAG,MAAM;EAC5B,OAAO,CAAC,CAACR,QAAQ,EAAE;AACrB,CAAC;AAAC,KAFWQ,QAAQ;AAIrB,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EACrC,OAAO;IAAEC,eAAe,EAAE;EAAK,CAAC;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;EACxC,MAAMC,MAAM,GAAGH,iBAAiB,EAAE;EAClCG,MAAM,CAACC,OAAO,GAAG;IAAEC,aAAa,EAAEd;EAAS,CAAC;EAC5C,OAAOY,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,iBAAiB,GAAG,CAACC,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,YAAY,KAAK;EACxE,MAAMC,aAAa,GAAGX,iBAAiB,EAAE;EAEzC,IAAIU,YAAY,EAAE;IAChB,IAAI,CAACA,YAAY,CAACH,GAAG,CAAC,EAAE;MACtBG,YAAY,CAACH,GAAG,CAAC,GAAGC,KAAK;MACzB,IAAIC,SAAS,IAAI,CAACC,YAAY,CAACT,eAAe,EAAE;QAC9C,OAAO;UAAE,GAAGS,YAAY;UAAEC;QAAc,CAAC;MAC3C;MACA,OAAOD,YAAY;IACrB;EACF;EAEAA,YAAY,GAAG;IAAEH,GAAG,EAAEC;EAAM,CAAC;EAC7B,IAAIC,SAAS,EAAE;IACbC,YAAY,GAAG;MAAE,GAAGA,YAAY;MAAEC;IAAc,CAAC;EACnD;EACA,OAAOD,YAAY;AACrB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}