{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useContext, useMemo } from 'react';\nimport \"./Child.css\";\nimport Toolbar from './';\nimport { EditorContext } from '../../Context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Child(props) {\n  var _ref = props || {},\n    prefixCls = _ref.prefixCls,\n    groupName = _ref.groupName,\n    commands = _ref.commands,\n    children = _ref.children;\n  var _useContext = useContext(EditorContext),\n    _useContext$barPopup = _useContext.barPopup,\n    barPopup = _useContext$barPopup === void 0 ? {} : _useContext$barPopup;\n  return useMemo(function () {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: prefixCls + \"-toolbar-child \" + (groupName && barPopup[groupName] ? 'active' : ''),\n      onClick: function onClick(e) {\n        return e.stopPropagation();\n      },\n      children: Array.isArray(commands) ? /*#__PURE__*/_jsx(Toolbar, _extends({\n        commands: commands\n      }, props, {\n        isChild: true\n      })) : children\n    });\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [commands, barPopup, groupName, prefixCls]);\n}","map":{"version":3,"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD;AACA,OAAOC,OAAO,MAAyB,IAAI;AAC3C,SAASC,aAAa,QAAQ,eAAe;AAAC;AAO9C,eAAe,SAASC,KAAK,CAACC,KAAiB,EAAE;EAC/C,WAAqDA,KAAK,IAAI,CAAC,CAAC;IAAxDC,SAAS,QAATA,SAAS;IAAEC,SAAS,QAATA,SAAS;IAAEC,QAAQ,QAARA,QAAQ;IAAEC;EACxC,kBAA0BT,UAAU,CAACG,aAAa,CAAC;IAAA,mCAA3CO,QAAQ;IAARA,QAAQ,qCAAG,CAAC;EACpB,OAAOT,OAAO,CACZ;IAAA,oBACEU;MACEC,SAAS,EAAKN,SAAS,wBAAkBC,SAAS,IAAIG,QAAQ,CAACH,SAAS,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAG;MAC5FM,OAAO,EAAGC,kBAAC;QAAA,OAAKA,CAAC,CAACC,eAAe,EAAG;MAAA;MAAAN,UAEnCO,KAAK,CAACC,OAAO,CAACT,QAAQ,CAAC,gBAAGG,KAACT,OAAO;QAACM,QAAQ,EAAEA;MAAS,GAAKH,KAAK;QAAEa,OAAO;MAAA,GAAG,GAAGT;IAAQ,EAE3F;EAAA;EACD;EACA,CAACD,QAAQ,EAAEE,QAAQ,EAAEH,SAAS,EAAED,SAAS,CAAC,CAC3C;AACH","names":["React","useContext","useMemo","Toolbar","EditorContext","Child","props","prefixCls","groupName","commands","children","barPopup","_jsx","className","onClick","e","stopPropagation","Array","isArray","isChild"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/@uiw/react-md-editor/src/components/Toolbar/Child.tsx"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\nimport { EditorContext } from '../../Context';\n\nexport type ChildProps = IToolbarProps & {\n  children?: JSX.Element;\n  groupName?: string;\n};\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, groupName, commands, children } = props || {};\n  const { barPopup = {} } = useContext(EditorContext);\n  return useMemo(\n    () => (\n      <div\n        className={`${prefixCls}-toolbar-child ${groupName && barPopup[groupName] ? 'active' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {Array.isArray(commands) ? <Toolbar commands={commands} {...props} isChild /> : children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [commands, barPopup, groupName, prefixCls],\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}