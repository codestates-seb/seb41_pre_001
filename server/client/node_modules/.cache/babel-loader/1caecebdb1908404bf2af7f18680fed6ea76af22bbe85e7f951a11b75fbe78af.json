{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Mixin = require('../../utils/mixin');\nvar Tokenizer = require('../../tokenizer');\nvar PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nvar LocationInfoTokenizerMixin = /*#__PURE__*/function (_Mixin) {\n  _inherits(LocationInfoTokenizerMixin, _Mixin);\n  var _super = _createSuper(LocationInfoTokenizerMixin);\n  function LocationInfoTokenizerMixin(tokenizer) {\n    var _this;\n    _classCallCheck(this, LocationInfoTokenizerMixin);\n    _this = _super.call(this, tokenizer);\n    _this.tokenizer = tokenizer;\n    _this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n    _this.currentAttrLocation = null;\n    _this.ctLoc = null;\n    return _this;\n  }\n  _createClass(LocationInfoTokenizerMixin, [{\n    key: \"_getCurrentLocation\",\n    value: function _getCurrentLocation() {\n      return {\n        startLine: this.posTracker.line,\n        startCol: this.posTracker.col,\n        startOffset: this.posTracker.offset,\n        endLine: -1,\n        endCol: -1,\n        endOffset: -1\n      };\n    }\n  }, {\n    key: \"_attachCurrentAttrLocationInfo\",\n    value: function _attachCurrentAttrLocationInfo() {\n      this.currentAttrLocation.endLine = this.posTracker.line;\n      this.currentAttrLocation.endCol = this.posTracker.col;\n      this.currentAttrLocation.endOffset = this.posTracker.offset;\n      var currentToken = this.tokenizer.currentToken;\n      var currentAttr = this.tokenizer.currentAttr;\n      if (!currentToken.location.attrs) {\n        currentToken.location.attrs = Object.create(null);\n      }\n      currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n  }, {\n    key: \"_getOverriddenMethods\",\n    value: function _getOverriddenMethods(mxn, orig) {\n      var methods = {\n        _createStartTagToken: function _createStartTagToken() {\n          orig._createStartTagToken.call(this);\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createEndTagToken: function _createEndTagToken() {\n          orig._createEndTagToken.call(this);\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createCommentToken: function _createCommentToken() {\n          orig._createCommentToken.call(this);\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createDoctypeToken: function _createDoctypeToken(initialName) {\n          orig._createDoctypeToken.call(this, initialName);\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createCharacterToken: function _createCharacterToken(type, ch) {\n          orig._createCharacterToken.call(this, type, ch);\n          this.currentCharacterToken.location = mxn.ctLoc;\n        },\n        _createEOFToken: function _createEOFToken() {\n          orig._createEOFToken.call(this);\n          this.currentToken.location = mxn._getCurrentLocation();\n        },\n        _createAttr: function _createAttr(attrNameFirstCh) {\n          orig._createAttr.call(this, attrNameFirstCh);\n          mxn.currentAttrLocation = mxn._getCurrentLocation();\n        },\n        _leaveAttrName: function _leaveAttrName(toState) {\n          orig._leaveAttrName.call(this, toState);\n          mxn._attachCurrentAttrLocationInfo();\n        },\n        _leaveAttrValue: function _leaveAttrValue(toState) {\n          orig._leaveAttrValue.call(this, toState);\n          mxn._attachCurrentAttrLocationInfo();\n        },\n        _emitCurrentToken: function _emitCurrentToken() {\n          var ctLoc = this.currentToken.location;\n\n          //NOTE: if we have pending character token make it's end location equal to the\n          //current token's start location.\n          if (this.currentCharacterToken) {\n            this.currentCharacterToken.location.endLine = ctLoc.startLine;\n            this.currentCharacterToken.location.endCol = ctLoc.startCol;\n            this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n          }\n          if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n            ctLoc.endLine = ctLoc.startLine;\n            ctLoc.endCol = ctLoc.startCol;\n            ctLoc.endOffset = ctLoc.startOffset;\n          } else {\n            ctLoc.endLine = mxn.posTracker.line;\n            ctLoc.endCol = mxn.posTracker.col + 1;\n            ctLoc.endOffset = mxn.posTracker.offset + 1;\n          }\n          orig._emitCurrentToken.call(this);\n        },\n        _emitCurrentCharacterToken: function _emitCurrentCharacterToken() {\n          var ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n          //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n          //then set it's location at the current preprocessor position.\n          //We don't need to increment preprocessor position, since character token\n          //emission is always forced by the start of the next character token here.\n          //So, we already have advanced position.\n          if (ctLoc && ctLoc.endOffset === -1) {\n            ctLoc.endLine = mxn.posTracker.line;\n            ctLoc.endCol = mxn.posTracker.col;\n            ctLoc.endOffset = mxn.posTracker.offset;\n          }\n          orig._emitCurrentCharacterToken.call(this);\n        }\n      };\n\n      //NOTE: patch initial states for each mode to obtain token start position\n      Object.keys(Tokenizer.MODE).forEach(function (modeName) {\n        var state = Tokenizer.MODE[modeName];\n        methods[state] = function (cp) {\n          mxn.ctLoc = mxn._getCurrentLocation();\n          orig[state].call(this, cp);\n        };\n      });\n      return methods;\n    }\n  }]);\n  return LocationInfoTokenizerMixin;\n}(Mixin);\nmodule.exports = LocationInfoTokenizerMixin;","map":{"version":3,"names":["Mixin","require","Tokenizer","PositionTrackingPreprocessorMixin","LocationInfoTokenizerMixin","tokenizer","posTracker","install","preprocessor","currentAttrLocation","ctLoc","startLine","line","startCol","col","startOffset","offset","endLine","endCol","endOffset","currentToken","currentAttr","location","attrs","Object","create","name","mxn","orig","methods","_createStartTagToken","call","_createEndTagToken","_createCommentToken","_createDoctypeToken","initialName","_createCharacterToken","type","ch","currentCharacterToken","_createEOFToken","_getCurrentLocation","_createAttr","attrNameFirstCh","_leaveAttrName","toState","_attachCurrentAttrLocationInfo","_leaveAttrValue","_emitCurrentToken","EOF_TOKEN","_emitCurrentCharacterToken","keys","MODE","forEach","modeName","state","cp","module","exports"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js"],"sourcesContent":["'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nclass LocationInfoTokenizerMixin extends Mixin {\n    constructor(tokenizer) {\n        super(tokenizer);\n\n        this.tokenizer = tokenizer;\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n        this.currentAttrLocation = null;\n        this.ctLoc = null;\n    }\n\n    _getCurrentLocation() {\n        return {\n            startLine: this.posTracker.line,\n            startCol: this.posTracker.col,\n            startOffset: this.posTracker.offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n\n    _attachCurrentAttrLocationInfo() {\n        this.currentAttrLocation.endLine = this.posTracker.line;\n        this.currentAttrLocation.endCol = this.posTracker.col;\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n        const currentToken = this.tokenizer.currentToken;\n        const currentAttr = this.tokenizer.currentAttr;\n\n        if (!currentToken.location.attrs) {\n            currentToken.location.attrs = Object.create(null);\n        }\n\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        const methods = {\n            _createStartTagToken() {\n                orig._createStartTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createEndTagToken() {\n                orig._createEndTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCommentToken() {\n                orig._createCommentToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createDoctypeToken(initialName) {\n                orig._createDoctypeToken.call(this, initialName);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCharacterToken(type, ch) {\n                orig._createCharacterToken.call(this, type, ch);\n                this.currentCharacterToken.location = mxn.ctLoc;\n            },\n\n            _createEOFToken() {\n                orig._createEOFToken.call(this);\n                this.currentToken.location = mxn._getCurrentLocation();\n            },\n\n            _createAttr(attrNameFirstCh) {\n                orig._createAttr.call(this, attrNameFirstCh);\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\n            },\n\n            _leaveAttrName(toState) {\n                orig._leaveAttrName.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _leaveAttrValue(toState) {\n                orig._leaveAttrValue.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _emitCurrentToken() {\n                const ctLoc = this.currentToken.location;\n\n                //NOTE: if we have pending character token make it's end location equal to the\n                //current token's start location.\n                if (this.currentCharacterToken) {\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n                }\n\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n                    ctLoc.endLine = ctLoc.startLine;\n                    ctLoc.endCol = ctLoc.startCol;\n                    ctLoc.endOffset = ctLoc.startOffset;\n                } else {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col + 1;\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\n                }\n\n                orig._emitCurrentToken.call(this);\n            },\n\n            _emitCurrentCharacterToken() {\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n                //then set it's location at the current preprocessor position.\n                //We don't need to increment preprocessor position, since character token\n                //emission is always forced by the start of the next character token here.\n                //So, we already have advanced position.\n                if (ctLoc && ctLoc.endOffset === -1) {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col;\n                    ctLoc.endOffset = mxn.posTracker.offset;\n                }\n\n                orig._emitCurrentCharacterToken.call(this);\n            }\n        };\n\n        //NOTE: patch initial states for each mode to obtain token start position\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\n            const state = Tokenizer.MODE[modeName];\n\n            methods[state] = function(cp) {\n                mxn.ctLoc = mxn._getCurrentLocation();\n                orig[state].call(this, cp);\n            };\n        });\n\n        return methods;\n    }\n}\n\nmodule.exports = LocationInfoTokenizerMixin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}