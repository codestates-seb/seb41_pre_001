{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/kty/workspace/seb41_pre_001/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Mixin = require('../../utils/mixin');\nvar Tokenizer = require('../../tokenizer');\nvar LocationInfoTokenizerMixin = require('./tokenizer-mixin');\nvar LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\nvar HTML = require('../../common/html');\n\n//Aliases\nvar $ = HTML.TAG_NAMES;\nvar LocationInfoParserMixin = /*#__PURE__*/function (_Mixin) {\n  _inherits(LocationInfoParserMixin, _Mixin);\n  var _super = _createSuper(LocationInfoParserMixin);\n  function LocationInfoParserMixin(parser) {\n    var _this;\n    _classCallCheck(this, LocationInfoParserMixin);\n    _this = _super.call(this, parser);\n    _this.parser = parser;\n    _this.treeAdapter = _this.parser.treeAdapter;\n    _this.posTracker = null;\n    _this.lastStartTagToken = null;\n    _this.lastFosterParentingLocation = null;\n    _this.currentToken = null;\n    return _this;\n  }\n  _createClass(LocationInfoParserMixin, [{\n    key: \"_setStartLocation\",\n    value: function _setStartLocation(element) {\n      var loc = null;\n      if (this.lastStartTagToken) {\n        loc = Object.assign({}, this.lastStartTagToken.location);\n        loc.startTag = this.lastStartTagToken.location;\n      }\n      this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n  }, {\n    key: \"_setEndLocation\",\n    value: function _setEndLocation(element, closingToken) {\n      var loc = this.treeAdapter.getNodeSourceCodeLocation(element);\n      if (loc) {\n        if (closingToken.location) {\n          var ctLoc = closingToken.location;\n          var tn = this.treeAdapter.getTagName(element);\n\n          // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n          // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n          var isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n          var endLoc = {};\n          if (isClosingEndTag) {\n            endLoc.endTag = Object.assign({}, ctLoc);\n            endLoc.endLine = ctLoc.endLine;\n            endLoc.endCol = ctLoc.endCol;\n            endLoc.endOffset = ctLoc.endOffset;\n          } else {\n            endLoc.endLine = ctLoc.startLine;\n            endLoc.endCol = ctLoc.startCol;\n            endLoc.endOffset = ctLoc.startOffset;\n          }\n          this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n      }\n    }\n  }, {\n    key: \"_getOverriddenMethods\",\n    value: function _getOverriddenMethods(mxn, orig) {\n      return {\n        _bootstrap: function _bootstrap(document, fragmentContext) {\n          orig._bootstrap.call(this, document, fragmentContext);\n          mxn.lastStartTagToken = null;\n          mxn.lastFosterParentingLocation = null;\n          mxn.currentToken = null;\n          var tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n          mxn.posTracker = tokenizerMixin.posTracker;\n          Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\n            onItemPop: function onItemPop(element) {\n              mxn._setEndLocation(element, mxn.currentToken);\n            }\n          });\n        },\n        _runParsingLoop: function _runParsingLoop(scriptHandler) {\n          orig._runParsingLoop.call(this, scriptHandler);\n\n          // NOTE: generate location info for elements\n          // that remains on open element stack\n          for (var i = this.openElements.stackTop; i >= 0; i--) {\n            mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n          }\n        },\n        //Token processing\n        _processTokenInForeignContent: function _processTokenInForeignContent(token) {\n          mxn.currentToken = token;\n          orig._processTokenInForeignContent.call(this, token);\n        },\n        _processToken: function _processToken(token) {\n          mxn.currentToken = token;\n          orig._processToken.call(this, token);\n\n          //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n          //their end location explicitly.\n          var requireExplicitUpdate = token.type === Tokenizer.END_TAG_TOKEN && (token.tagName === $.HTML || token.tagName === $.BODY && this.openElements.hasInScope($.BODY));\n          if (requireExplicitUpdate) {\n            for (var i = this.openElements.stackTop; i >= 0; i--) {\n              var element = this.openElements.items[i];\n              if (this.treeAdapter.getTagName(element) === token.tagName) {\n                mxn._setEndLocation(element, token);\n                break;\n              }\n            }\n          }\n        },\n        //Doctype\n        _setDocumentType: function _setDocumentType(token) {\n          orig._setDocumentType.call(this, token);\n          var documentChildren = this.treeAdapter.getChildNodes(this.document);\n          var cnLength = documentChildren.length;\n          for (var i = 0; i < cnLength; i++) {\n            var node = documentChildren[i];\n            if (this.treeAdapter.isDocumentTypeNode(node)) {\n              this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\n              break;\n            }\n          }\n        },\n        //Elements\n        _attachElementToTree: function _attachElementToTree(element) {\n          //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n          //So we will use token location stored in this methods for the element.\n          mxn._setStartLocation(element);\n          mxn.lastStartTagToken = null;\n          orig._attachElementToTree.call(this, element);\n        },\n        _appendElement: function _appendElement(token, namespaceURI) {\n          mxn.lastStartTagToken = token;\n          orig._appendElement.call(this, token, namespaceURI);\n        },\n        _insertElement: function _insertElement(token, namespaceURI) {\n          mxn.lastStartTagToken = token;\n          orig._insertElement.call(this, token, namespaceURI);\n        },\n        _insertTemplate: function _insertTemplate(token) {\n          mxn.lastStartTagToken = token;\n          orig._insertTemplate.call(this, token);\n          var tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n          this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\n        },\n        _insertFakeRootElement: function _insertFakeRootElement() {\n          orig._insertFakeRootElement.call(this);\n          this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\n        },\n        //Comments\n        _appendCommentNode: function _appendCommentNode(token, parent) {\n          orig._appendCommentNode.call(this, token, parent);\n          var children = this.treeAdapter.getChildNodes(parent);\n          var commentNode = children[children.length - 1];\n          this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        },\n        //Text\n        _findFosterParentingLocation: function _findFosterParentingLocation() {\n          //NOTE: store last foster parenting location, so we will be able to find inserted text\n          //in case of foster parenting\n          mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n          return mxn.lastFosterParentingLocation;\n        },\n        _insertCharacters: function _insertCharacters(token) {\n          orig._insertCharacters.call(this, token);\n          var hasFosterParent = this._shouldFosterParentOnInsertion();\n          var parent = hasFosterParent && mxn.lastFosterParentingLocation.parent || this.openElements.currentTmplContent || this.openElements.current;\n          var siblings = this.treeAdapter.getChildNodes(parent);\n          var textNodeIdx = hasFosterParent && mxn.lastFosterParentingLocation.beforeElement ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1 : siblings.length - 1;\n          var textNode = siblings[textNodeIdx];\n\n          //NOTE: if we have location assigned by another token, then just update end position\n          var tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n          if (tnLoc) {\n            var _token$location = token.location,\n              endLine = _token$location.endLine,\n              endCol = _token$location.endCol,\n              endOffset = _token$location.endOffset;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n              endLine: endLine,\n              endCol: endCol,\n              endOffset: endOffset\n            });\n          } else {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n          }\n        }\n      };\n    }\n  }]);\n  return LocationInfoParserMixin;\n}(Mixin);\nmodule.exports = LocationInfoParserMixin;","map":{"version":3,"names":["Mixin","require","Tokenizer","LocationInfoTokenizerMixin","LocationInfoOpenElementStackMixin","HTML","$","TAG_NAMES","LocationInfoParserMixin","parser","treeAdapter","posTracker","lastStartTagToken","lastFosterParentingLocation","currentToken","element","loc","Object","assign","location","startTag","setNodeSourceCodeLocation","closingToken","getNodeSourceCodeLocation","ctLoc","tn","getTagName","isClosingEndTag","type","END_TAG_TOKEN","tagName","endLoc","endTag","endLine","endCol","endOffset","startLine","startCol","startOffset","updateNodeSourceCodeLocation","mxn","orig","_bootstrap","document","fragmentContext","call","tokenizerMixin","install","tokenizer","openElements","onItemPop","_setEndLocation","_runParsingLoop","scriptHandler","i","stackTop","items","_processTokenInForeignContent","token","_processToken","requireExplicitUpdate","BODY","hasInScope","_setDocumentType","documentChildren","getChildNodes","cnLength","length","node","isDocumentTypeNode","_attachElementToTree","_setStartLocation","_appendElement","namespaceURI","_insertElement","_insertTemplate","tmplContent","getTemplateContent","current","_insertFakeRootElement","_appendCommentNode","parent","children","commentNode","_findFosterParentingLocation","_insertCharacters","hasFosterParent","_shouldFosterParentOnInsertion","currentTmplContent","siblings","textNodeIdx","beforeElement","indexOf","textNode","tnLoc","module","exports"],"sources":["/home/kty/workspace/seb41_pre_001/client/node_modules/parse5/lib/extensions/location-info/parser-mixin.js"],"sourcesContent":["'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst LocationInfoTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\nconst HTML = require('../../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\n\nclass LocationInfoParserMixin extends Mixin {\n    constructor(parser) {\n        super(parser);\n\n        this.parser = parser;\n        this.treeAdapter = this.parser.treeAdapter;\n        this.posTracker = null;\n        this.lastStartTagToken = null;\n        this.lastFosterParentingLocation = null;\n        this.currentToken = null;\n    }\n\n    _setStartLocation(element) {\n        let loc = null;\n\n        if (this.lastStartTagToken) {\n            loc = Object.assign({}, this.lastStartTagToken.location);\n            loc.startTag = this.lastStartTagToken.location;\n        }\n\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n\n    _setEndLocation(element, closingToken) {\n        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);\n\n        if (loc) {\n            if (closingToken.location) {\n                const ctLoc = closingToken.location;\n                const tn = this.treeAdapter.getTagName(element);\n\n                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n                const endLoc = {};\n                if (isClosingEndTag) {\n                    endLoc.endTag = Object.assign({}, ctLoc);\n                    endLoc.endLine = ctLoc.endLine;\n                    endLoc.endCol = ctLoc.endCol;\n                    endLoc.endOffset = ctLoc.endOffset;\n                } else {\n                    endLoc.endLine = ctLoc.startLine;\n                    endLoc.endCol = ctLoc.startCol;\n                    endLoc.endOffset = ctLoc.startOffset;\n                }\n\n                this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n            }\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                mxn.lastStartTagToken = null;\n                mxn.lastFosterParentingLocation = null;\n                mxn.currentToken = null;\n\n                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n\n                mxn.posTracker = tokenizerMixin.posTracker;\n\n                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\n                    onItemPop: function(element) {\n                        mxn._setEndLocation(element, mxn.currentToken);\n                    }\n                });\n            },\n\n            _runParsingLoop(scriptHandler) {\n                orig._runParsingLoop.call(this, scriptHandler);\n\n                // NOTE: generate location info for elements\n                // that remains on open element stack\n                for (let i = this.openElements.stackTop; i >= 0; i--) {\n                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n                }\n            },\n\n            //Token processing\n            _processTokenInForeignContent(token) {\n                mxn.currentToken = token;\n                orig._processTokenInForeignContent.call(this, token);\n            },\n\n            _processToken(token) {\n                mxn.currentToken = token;\n                orig._processToken.call(this, token);\n\n                //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n                //their end location explicitly.\n                const requireExplicitUpdate =\n                    token.type === Tokenizer.END_TAG_TOKEN &&\n                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));\n\n                if (requireExplicitUpdate) {\n                    for (let i = this.openElements.stackTop; i >= 0; i--) {\n                        const element = this.openElements.items[i];\n\n                        if (this.treeAdapter.getTagName(element) === token.tagName) {\n                            mxn._setEndLocation(element, token);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            //Doctype\n            _setDocumentType(token) {\n                orig._setDocumentType.call(this, token);\n\n                const documentChildren = this.treeAdapter.getChildNodes(this.document);\n                const cnLength = documentChildren.length;\n\n                for (let i = 0; i < cnLength; i++) {\n                    const node = documentChildren[i];\n\n                    if (this.treeAdapter.isDocumentTypeNode(node)) {\n                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\n                        break;\n                    }\n                }\n            },\n\n            //Elements\n            _attachElementToTree(element) {\n                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n                //So we will use token location stored in this methods for the element.\n                mxn._setStartLocation(element);\n                mxn.lastStartTagToken = null;\n                orig._attachElementToTree.call(this, element);\n            },\n\n            _appendElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._appendElement.call(this, token, namespaceURI);\n            },\n\n            _insertElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._insertElement.call(this, token, namespaceURI);\n            },\n\n            _insertTemplate(token) {\n                mxn.lastStartTagToken = token;\n                orig._insertTemplate.call(this, token);\n\n                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n\n                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\n            },\n\n            _insertFakeRootElement() {\n                orig._insertFakeRootElement.call(this);\n                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\n            },\n\n            //Comments\n            _appendCommentNode(token, parent) {\n                orig._appendCommentNode.call(this, token, parent);\n\n                const children = this.treeAdapter.getChildNodes(parent);\n                const commentNode = children[children.length - 1];\n\n                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n            },\n\n            //Text\n            _findFosterParentingLocation() {\n                //NOTE: store last foster parenting location, so we will be able to find inserted text\n                //in case of foster parenting\n                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n\n                return mxn.lastFosterParentingLocation;\n            },\n\n            _insertCharacters(token) {\n                orig._insertCharacters.call(this, token);\n\n                const hasFosterParent = this._shouldFosterParentOnInsertion();\n\n                const parent =\n                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||\n                    this.openElements.currentTmplContent ||\n                    this.openElements.current;\n\n                const siblings = this.treeAdapter.getChildNodes(parent);\n\n                const textNodeIdx =\n                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement\n                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1\n                        : siblings.length - 1;\n\n                const textNode = siblings[textNodeIdx];\n\n                //NOTE: if we have location assigned by another token, then just update end position\n                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n\n                if (tnLoc) {\n                    const { endLine, endCol, endOffset } = token.location;\n                    this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n                } else {\n                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n                }\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoParserMixin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}