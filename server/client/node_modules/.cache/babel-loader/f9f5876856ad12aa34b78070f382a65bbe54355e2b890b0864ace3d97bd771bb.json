{"ast":null,"code":"var _jsxFileName = \"/home/kty/workspace/seb41_pre_001/client/src/pages/Temp.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { MainContainer } from '../styles/StyledStore';\n/**\n * # QuestionList\n *\n * ## init\n *\n * @KimTank\n *\n * ## modified\n *\n * @TODO\n *\n * ## description\n *\n * - 질문 리스트\n * - nested route(중첩 라우트로 목록눌렀을 때 상세로 이동)\n *\n * @returns QuestionList\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Temp() {\n  _s();\n  const [data, setData] = useState([]);\n  axios.get('/board/posts', {\n    withCredentials: true,\n    params: {\n      page: 1,\n      size: 10\n    }\n  }).then(response => {\n    const {\n      data\n    } = response;\n    console.log(data.data);\n    setData(data.data);\n  }).catch(error => alert(error));\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"not empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : data.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: data.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Temp, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = Temp;\nexport default Temp;\nvar _c;\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"names":["axios","useState","MainContainer","Temp","data","setData","get","withCredentials","params","page","size","then","response","console","log","catch","error","alert","length","map","index","title"],"sources":["/home/kty/workspace/seb41_pre_001/client/src/pages/Temp.js"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport { MainContainer } from '../styles/StyledStore';\n/**\n * # QuestionList\n *\n * ## init\n *\n * @KimTank\n *\n * ## modified\n *\n * @TODO\n *\n * ## description\n *\n * - 질문 리스트\n * - nested route(중첩 라우트로 목록눌렀을 때 상세로 이동)\n *\n * @returns QuestionList\n */\nfunction Temp() {\n  const [data, setData] = useState([]);\n\n  axios\n    .get('/board/posts', {\n      withCredentials: true,\n      params: {\n        page: 1,\n        size: 10,\n      },\n    })\n    .then((response) => {\n      const { data } = response;\n      console.log(data.data);\n      setData(data.data);\n    })\n    .catch((error) => alert(error));\n\n  return (\n    <MainContainer>\n      <ul>\n        {data.length === 0 ? (\n          <li>not empty</li>\n        ) : (\n          data.map((data, index) => <li key={index}>{data.title}</li>)\n        )}\n      </ul>\n    </MainContainer>\n  );\n}\n\nexport default Temp;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,uBAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAkBA,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpCD,KAAK,CACFM,GAAG,CAAC,cAAc,EAAE;IACnBC,eAAe,EAAE,IAAI;IACrBC,MAAM,EAAE;MACNC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE;IACR;EACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;IAClB,MAAM;MAAER;IAAK,CAAC,GAAGQ,QAAQ;IACzBC,OAAO,CAACC,GAAG,CAACV,IAAI,CAACA,IAAI,CAAC;IACtBC,OAAO,CAACD,IAAI,CAACA,IAAI,CAAC;EACpB,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAKC,KAAK,CAACD,KAAK,CAAC,CAAC;EAEjC,oBACE,QAAC,aAAa;IAAA,uBACZ;MAAA,UACGZ,IAAI,CAACc,MAAM,KAAK,CAAC,gBAChB;QAAA,UAAI;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,GAElBd,IAAI,CAACe,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK,kBAAK;QAAA,UAAiBhB,IAAI,CAACiB;MAAK,GAAlBD,KAAK;QAAA;QAAA;QAAA;MAAA,QAAmB;IAC5D;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACS;AAEpB;AAAC,GA7BQjB,IAAI;AAAA,KAAJA,IAAI;AA+Bb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}