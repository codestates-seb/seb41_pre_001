{
  "version": 3,
  "names": [
    "insertBeforeEachLine",
    "selectedText",
    "insertBefore",
    "lines",
    "split",
    "insertionLength",
    "modifiedText",
    "map",
    "item",
    "index",
    "length",
    "insertionResult",
    "Error",
    "join",
    "makeList",
    "state",
    "api",
    "newSelectionRange",
    "selectWord",
    "text",
    "selection",
    "state1",
    "setSelectionRange",
    "breaksBeforeCount",
    "getBreaksNeededForEmptyLineBefore",
    "start",
    "breaksBefore",
    "Array",
    "breaksAfterCount",
    "getBreaksNeededForEmptyLineAfter",
    "end",
    "breaksAfter",
    "replaceSelection",
    "oneLinerOffset",
    "indexOf",
    "selectionStart",
    "selectionEnd",
    "unorderedListCommand",
    "name",
    "keyCommand",
    "shortcuts",
    "value",
    "buttonProps",
    "title",
    "icon",
    "execute",
    "orderedListCommand",
    "checkedListCommand"
  ],
  "sources": [
    "../../src/commands/list.tsx"
  ],
  "sourcesContent": [
    "import * as React from 'react';\nimport { ICommand, TextState, TextAreaTextApi } from './';\nimport {\n  selectWord,\n  getBreaksNeededForEmptyLineBefore,\n  getBreaksNeededForEmptyLineAfter,\n} from '../utils/markdownUtils';\n\nexport type AlterLineFunction = (line: string, index: number) => string;\n\n/**\n * Inserts insertionString before each line\n */\nexport function insertBeforeEachLine(\n  selectedText: string,\n  insertBefore: string | AlterLineFunction,\n): { modifiedText: string; insertionLength: number } {\n  const lines = selectedText.split(/\\n/);\n\n  let insertionLength = 0;\n  const modifiedText = lines\n    .map((item, index) => {\n      if (typeof insertBefore === 'string') {\n        insertionLength += insertBefore.length;\n        return insertBefore + item;\n      } else if (typeof insertBefore === 'function') {\n        const insertionResult = insertBefore(item, index);\n        insertionLength += insertionResult.length;\n        return insertBefore(item, index) + item;\n      }\n      throw Error('insertion is expected to be either a string or a function');\n    })\n    .join('\\n');\n\n  return { modifiedText, insertionLength };\n}\n\nexport const makeList = (state: TextState, api: TextAreaTextApi, insertBefore: string | AlterLineFunction) => {\n  // Adjust the selection to encompass the whole word if the caret is inside one\n  const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n  const state1 = api.setSelectionRange(newSelectionRange);\n\n  const breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n  const breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\n\n  const breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n  const breaksAfter = Array(breaksAfterCount + 1).join('\\n');\n\n  const modifiedText = insertBeforeEachLine(state1.selectedText, insertBefore);\n\n  api.replaceSelection(`${breaksBefore}${modifiedText.modifiedText}${breaksAfter}`);\n\n  // Specifically when the text has only one line, we can exclude the \"- \", for example, from the selection\n  const oneLinerOffset = state1.selectedText.indexOf('\\n') === -1 ? modifiedText.insertionLength : 0;\n\n  const selectionStart = state1.selection.start + breaksBeforeCount + oneLinerOffset;\n  const selectionEnd = selectionStart + modifiedText.modifiedText.length - oneLinerOffset;\n\n  // Adjust the selection to not contain the **\n  api.setSelectionRange({\n    start: selectionStart,\n    end: selectionEnd,\n  });\n};\n\nexport const unorderedListCommand: ICommand = {\n  name: 'unordered-list',\n  keyCommand: 'list',\n  shortcuts: 'ctrl+shift+u',\n  value: '- ',\n  buttonProps: {\n    'aria-label': 'Add unordered list (ctrl + shift + u)',\n    title: 'Add unordered list (ctrl + shift + u)',\n  },\n  icon: (\n    <svg data-name=\"unordered-list\" width=\"12\" height=\"12\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n      />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextAreaTextApi) => {\n    makeList(state, api, '- ');\n  },\n};\n\nexport const orderedListCommand: ICommand = {\n  name: 'ordered-list',\n  keyCommand: 'list',\n  shortcuts: 'ctrl+shift+o',\n  value: '1. ',\n  buttonProps: { 'aria-label': 'Add ordered list (ctrl + shift + o)', title: 'Add ordered list (ctrl + shift + o)' },\n  icon: (\n    <svg data-name=\"ordered-list\" width=\"12\" height=\"12\" role=\"img\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n      />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextAreaTextApi) => {\n    makeList(state, api, (item, index) => `${index + 1}. `);\n  },\n};\n\nexport const checkedListCommand: ICommand = {\n  name: 'checked-list',\n  keyCommand: 'list',\n  shortcuts: 'ctrl+shift+c',\n  value: '- [x] ',\n  buttonProps: { 'aria-label': 'Add checked list (ctrl + shift + c)', title: 'Add checked list (ctrl + shift + c)' },\n  icon: (\n    <svg data-name=\"checked-list\" width=\"12\" height=\"12\" role=\"img\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\"\n      />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextAreaTextApi) => {\n    makeList(state, api, (item, index) => `- [ ] `);\n  },\n};\n"
  ],
  "mappings": ";;;;;;;;;AAAA;AAEA;AAIgC;AAIhC;AACA;AACA;AACO,SAASA,oBAAoB,CAClCC,YAAoB,EACpBC,YAAwC,EACW;EACnD,IAAMC,KAAK,GAAGF,YAAY,CAACG,KAAK,CAAC,IAAI,CAAC;EAEtC,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAMC,YAAY,GAAGH,KAAK,CACvBI,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;IACpB,IAAI,OAAOP,YAAY,KAAK,QAAQ,EAAE;MACpCG,eAAe,IAAIH,YAAY,CAACQ,MAAM;MACtC,OAAOR,YAAY,GAAGM,IAAI;IAC5B,CAAC,MAAM,IAAI,OAAON,YAAY,KAAK,UAAU,EAAE;MAC7C,IAAMS,eAAe,GAAGT,YAAY,CAACM,IAAI,EAAEC,KAAK,CAAC;MACjDJ,eAAe,IAAIM,eAAe,CAACD,MAAM;MACzC,OAAOR,YAAY,CAACM,IAAI,EAAEC,KAAK,CAAC,GAAGD,IAAI;IACzC;IACA,MAAMI,KAAK,CAAC,2DAA2D,CAAC;EAC1E,CAAC,CAAC,CACDC,IAAI,CAAC,IAAI,CAAC;EAEb,OAAO;IAAEP,YAAY,EAAZA,YAAY;IAAED,eAAe,EAAfA;EAAgB,CAAC;AAC1C;AAEO,IAAMS,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAgB,EAAEC,GAAoB,EAAEd,YAAwC,EAAK;EAC5G;EACA,IAAMe,iBAAiB,GAAG,IAAAC,yBAAU,EAAC;IAAEC,IAAI,EAAEJ,KAAK,CAACI,IAAI;IAAEC,SAAS,EAAEL,KAAK,CAACK;EAAU,CAAC,CAAC;EACtF,IAAMC,MAAM,GAAGL,GAAG,CAACM,iBAAiB,CAACL,iBAAiB,CAAC;EAEvD,IAAMM,iBAAiB,GAAG,IAAAC,gDAAiC,EAACH,MAAM,CAACF,IAAI,EAAEE,MAAM,CAACD,SAAS,CAACK,KAAK,CAAC;EAChG,IAAMC,YAAY,GAAGC,KAAK,CAACJ,iBAAiB,GAAG,CAAC,CAAC,CAACV,IAAI,CAAC,IAAI,CAAC;EAE5D,IAAMe,gBAAgB,GAAG,IAAAC,+CAAgC,EAACR,MAAM,CAACF,IAAI,EAAEE,MAAM,CAACD,SAAS,CAACU,GAAG,CAAC;EAC5F,IAAMC,WAAW,GAAGJ,KAAK,CAACC,gBAAgB,GAAG,CAAC,CAAC,CAACf,IAAI,CAAC,IAAI,CAAC;EAE1D,IAAMP,YAAY,GAAGN,oBAAoB,CAACqB,MAAM,CAACpB,YAAY,EAAEC,YAAY,CAAC;EAE5Ec,GAAG,CAACgB,gBAAgB,WAAIN,YAAY,SAAGpB,YAAY,CAACA,YAAY,SAAGyB,WAAW,EAAG;;EAEjF;EACA,IAAME,cAAc,GAAGZ,MAAM,CAACpB,YAAY,CAACiC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG5B,YAAY,CAACD,eAAe,GAAG,CAAC;EAElG,IAAM8B,cAAc,GAAGd,MAAM,CAACD,SAAS,CAACK,KAAK,GAAGF,iBAAiB,GAAGU,cAAc;EAClF,IAAMG,YAAY,GAAGD,cAAc,GAAG7B,YAAY,CAACA,YAAY,CAACI,MAAM,GAAGuB,cAAc;;EAEvF;EACAjB,GAAG,CAACM,iBAAiB,CAAC;IACpBG,KAAK,EAAEU,cAAc;IACrBL,GAAG,EAAEM;EACP,CAAC,CAAC;AACJ,CAAC;AAAC;AAEK,IAAMC,oBAA8B,GAAG;EAC5CC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,cAAc;EACzBC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE;IACX,YAAY,EAAE,uCAAuC;IACrDC,KAAK,EAAE;EACT,CAAC;EACDC,IAAI,eACF;IAAK,aAAU,gBAAgB;IAAC,KAAK,EAAC,IAAI;IAAC,MAAM,EAAC,IAAI;IAAC,OAAO,EAAC,aAAa;IAAA,uBAC1E;MACE,IAAI,EAAC,cAAc;MACnB,CAAC,EAAC;IAA8jB;EAChkB,EAEL;EACDC,OAAO,EAAE,iBAAC9B,KAAgB,EAAEC,GAAoB,EAAK;IACnDF,QAAQ,CAACC,KAAK,EAAEC,GAAG,EAAE,IAAI,CAAC;EAC5B;AACF,CAAC;AAAC;AAEK,IAAM8B,kBAA4B,GAAG;EAC1CR,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,cAAc;EACzBC,KAAK,EAAE,KAAK;EACZC,WAAW,EAAE;IAAE,YAAY,EAAE,qCAAqC;IAAEC,KAAK,EAAE;EAAsC,CAAC;EAClHC,IAAI,eACF;IAAK,aAAU,cAAc;IAAC,KAAK,EAAC,IAAI;IAAC,MAAM,EAAC,IAAI;IAAC,IAAI,EAAC,KAAK;IAAC,OAAO,EAAC,aAAa;IAAA,uBACnF;MACE,IAAI,EAAC,cAAc;MACnB,CAAC,EAAC;IAA62D;EAC/2D,EAEL;EACDC,OAAO,EAAE,iBAAC9B,KAAgB,EAAEC,GAAoB,EAAK;IACnDF,QAAQ,CAACC,KAAK,EAAEC,GAAG,EAAE,UAACR,IAAI,EAAEC,KAAK;MAAA,iBAAQA,KAAK,GAAG,CAAC;IAAA,CAAI,CAAC;EACzD;AACF,CAAC;AAAC;AAEK,IAAMsC,kBAA4B,GAAG;EAC1CT,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,cAAc;EACzBC,KAAK,EAAE,QAAQ;EACfC,WAAW,EAAE;IAAE,YAAY,EAAE,qCAAqC;IAAEC,KAAK,EAAE;EAAsC,CAAC;EAClHC,IAAI,eACF;IAAK,aAAU,cAAc;IAAC,KAAK,EAAC,IAAI;IAAC,MAAM,EAAC,IAAI;IAAC,IAAI,EAAC,KAAK;IAAC,OAAO,EAAC,aAAa;IAAA,uBACnF;MACE,IAAI,EAAC,cAAc;MACnB,CAAC,EAAC;IAA2vB;EAC7vB,EAEL;EACDC,OAAO,EAAE,iBAAC9B,KAAgB,EAAEC,GAAoB,EAAK;IACnDF,QAAQ,CAACC,KAAK,EAAEC,GAAG,EAAE,UAACR,IAAI,EAAEC,KAAK;MAAA;IAAA,CAAa,CAAC;EACjD;AACF,CAAC;AAAC"
}