{
  "version": 3,
  "names": [
    "Textarea",
    "props",
    "prefixCls",
    "onChange",
    "other",
    "useContext",
    "EditorContext",
    "markdown",
    "commands",
    "fullscreen",
    "preview",
    "highlightEnable",
    "extraCommands",
    "tabSize",
    "defaultTabEnable",
    "dispatch",
    "textRef",
    "React",
    "useRef",
    "executeRef",
    "statesRef",
    "useEffect",
    "current",
    "commandOrchestrator",
    "TextAreaCommandOrchestrator",
    "textarea",
    "onKeyDown",
    "e",
    "handleKeyDown",
    "shortcuts",
    "addEventListener",
    "removeEventListener",
    "className",
    "target",
    "value"
  ],
  "sources": [
    "../../../src/components/TextArea/Textarea.tsx"
  ],
  "sourcesContent": [
    "import React, { useContext, useEffect } from 'react';\nimport { IProps } from '../../Editor';\nimport { EditorContext, ExecuteCommandState } from '../../Context';\nimport { TextAreaCommandOrchestrator } from '../../commands';\nimport handleKeyDown from './handleKeyDown';\nimport shortcuts from './shortcuts';\nimport './index.less';\n\nexport interface TextAreaProps extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'value'>, IProps {}\n\nexport default function Textarea(props: TextAreaProps) {\n  const { prefixCls, onChange, ...other } = props;\n  const {\n    markdown,\n    commands,\n    fullscreen,\n    preview,\n    highlightEnable,\n    extraCommands,\n    tabSize,\n    defaultTabEnable,\n    dispatch,\n  } = useContext(EditorContext);\n  const textRef = React.useRef<HTMLTextAreaElement>(null);\n  const executeRef = React.useRef<TextAreaCommandOrchestrator>();\n  const statesRef = React.useRef<ExecuteCommandState>({ fullscreen, preview });\n\n  useEffect(() => {\n    statesRef.current = { fullscreen, preview, highlightEnable };\n  }, [fullscreen, preview, highlightEnable]);\n\n  useEffect(() => {\n    if (textRef.current && dispatch) {\n      const commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\n      executeRef.current = commandOrchestrator;\n      dispatch({ textarea: textRef.current, commandOrchestrator });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onKeyDown = (e: KeyboardEvent | React.KeyboardEvent<HTMLTextAreaElement>) => {\n    handleKeyDown(e, tabSize, defaultTabEnable);\n    shortcuts(e, [...(commands || []), ...(extraCommands || [])], executeRef.current, dispatch, statesRef.current);\n  };\n  useEffect(() => {\n    if (textRef.current) {\n      textRef.current.addEventListener('keydown', onKeyDown);\n    }\n    return () => {\n      if (textRef.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        textRef.current.removeEventListener('keydown', onKeyDown);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <textarea\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={false}\n      {...other}\n      ref={textRef}\n      className={`${prefixCls}-text-input ${other.className ? other.className : ''}`}\n      value={markdown}\n      onChange={(e) => {\n        dispatch && dispatch({ markdown: e.target.value });\n        onChange && onChange(e);\n      }}\n    />\n  );\n}\n"
  ],
  "mappings": "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"
}