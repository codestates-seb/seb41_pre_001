{
  "version": 3,
  "names": [
    "stopPropagation",
    "e",
    "preventDefault",
    "handleKeyDown",
    "tabSize",
    "defaultTabEnable",
    "target",
    "starVal",
    "value",
    "substr",
    "selectionStart",
    "valArr",
    "split",
    "currentLineStr",
    "length",
    "textArea",
    "TextAreaTextApi",
    "code",
    "toLowerCase",
    "space",
    "Array",
    "join",
    "selectionEnd",
    "_star",
    "substring",
    "_end",
    "modifiedTextLine",
    "forEach",
    "item",
    "idx",
    "push",
    "modifiedText",
    "oldSelectText",
    "newStarNum",
    "setSelectionRange",
    "start",
    "indexOf",
    "end",
    "modifiedTextObj",
    "insertBeforeEachLine",
    "shiftKey",
    "text",
    "map",
    "replace",
    "RegExp",
    "replaceSelection",
    "startTabSize",
    "endTabSize",
    "insertTextAtPosition",
    "keyCode",
    "test",
    "startStr",
    "startsWith",
    "parseInt"
  ],
  "sources": [
    "../../../src/components/TextArea/handleKeyDown.tsx"
  ],
  "sourcesContent": [
    "import { insertTextAtPosition } from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e: KeyboardEvent | React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport default function handleKeyDown(\n  e: KeyboardEvent | React.KeyboardEvent<HTMLTextAreaElement>,\n  tabSize: number = 2,\n  defaultTabEnable: boolean = false,\n) {\n  const target = e.target as HTMLTextAreaElement;\n  const starVal = target.value.substr(0, target.selectionStart);\n  const valArr = starVal.split('\\n');\n  const currentLineStr = valArr[valArr.length - 1];\n  const textArea = new TextAreaTextApi(target);\n\n  /**\n   * `9` - `Tab`\n   */\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    const space = new Array(tabSize + 1).join('  ');\n    if (target.selectionStart !== target.selectionEnd) {\n      const _star = target.value.substring(0, target.selectionStart).split('\\n');\n      const _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      const modifiedTextLine: string[] = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      const modifiedText = modifiedTextLine.join('\\n');\n      const oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      const newStarNum = target.value.substring(0, target.selectionStart).length;\n\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd,\n      });\n\n      const modifiedTextObj = insertBeforeEachLine(modifiedText, e.shiftKey ? '' : space);\n\n      let text = modifiedTextObj.modifiedText;\n      if (e.shiftKey) {\n        text = text\n          .split('\\n')\n          .map((item) => item.replace(new RegExp(`^${space}`), ''))\n          .join('\\n');\n      }\n      textArea.replaceSelection(text);\n\n      let startTabSize = e.shiftKey ? -tabSize : tabSize;\n      let endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\n\n      textArea.setSelectionRange({\n        start: newStarNum + startTabSize,\n        end: newStarNum + oldSelectText.length + endTabSize,\n      });\n    } else {\n      return insertTextAtPosition(target, space);\n    }\n  } else if (\n    e.keyCode === 13 &&\n    e.code.toLowerCase() === 'enter' &&\n    (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr))\n  ) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    let startStr = '\\n- ';\n\n    if (currentLineStr.startsWith('*')) {\n      startStr = '\\n* ';\n    }\n\n    if (currentLineStr.startsWith('- [ ]')) {\n      startStr = '\\n- [ ] ';\n    } else if (currentLineStr.startsWith('- [X]')) {\n      startStr = '\\n- [X] ';\n    }\n\n    if (/^\\d+.\\s/.test(currentLineStr)) {\n      startStr = `\\n${parseInt(currentLineStr) + 1}. `;\n    }\n    return insertTextAtPosition(target, startStr);\n  }\n}\n"
  ],
  "mappings": "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"
}