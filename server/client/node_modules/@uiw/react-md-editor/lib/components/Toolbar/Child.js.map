{
  "version": 3,
  "names": [
    "Child",
    "props",
    "prefixCls",
    "groupName",
    "commands",
    "children",
    "useContext",
    "EditorContext",
    "barPopup",
    "useMemo",
    "e",
    "stopPropagation",
    "Array",
    "isArray"
  ],
  "sources": [
    "../../../src/components/Toolbar/Child.tsx"
  ],
  "sourcesContent": [
    "import React, { useContext, useMemo } from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\nimport { EditorContext } from '../../Context';\n\nexport type ChildProps = IToolbarProps & {\n  children?: JSX.Element;\n  groupName?: string;\n};\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, groupName, commands, children } = props || {};\n  const { barPopup = {} } = useContext(EditorContext);\n  return useMemo(\n    () => (\n      <div\n        className={`${prefixCls}-toolbar-child ${groupName && barPopup[groupName] ? 'active' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {Array.isArray(commands) ? <Toolbar commands={commands} {...props} isChild /> : children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [commands, barPopup, groupName, prefixCls],\n  );\n}\n"
  ],
  "mappings": ";;;;;;;;;AAAA;AAEA;AACA;AAA8C;AAO/B,SAASA,KAAK,CAACC,KAAiB,EAAE;EAC/C,WAAqDA,KAAK,IAAI,CAAC,CAAC;IAAxDC,SAAS,QAATA,SAAS;IAAEC,SAAS,QAATA,SAAS;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,QAAQ,QAARA,QAAQ;EAChD,kBAA0B,IAAAC,iBAAU,EAACC,sBAAa,CAAC;IAAA,mCAA3CC,QAAQ;IAARA,QAAQ,qCAAG,CAAC,CAAC;EACrB,OAAO,IAAAC,cAAO,EACZ;IAAA,oBACE;MACE,SAAS,YAAKP,SAAS,4BAAkBC,SAAS,IAAIK,QAAQ,CAACL,SAAS,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAG;MAC5F,OAAO,EAAE,iBAACO,CAAC;QAAA,OAAKA,CAAC,CAACC,eAAe,EAAE;MAAA,CAAC;MAAA,UAEnCC,KAAK,CAACC,OAAO,CAACT,QAAQ,CAAC,gBAAG,qBAAC,YAAO;QAAC,QAAQ,EAAEA;MAAS,GAAKH,KAAK;QAAE,OAAO;MAAA,GAAG,GAAGI;IAAQ,EACpF;EAAA,CACP;EACD;EACA,CAACD,QAAQ,EAAEI,QAAQ,EAAEL,SAAS,EAAED,SAAS,CAAC,CAC3C;AACH;AAAC"
}