{
  "version": 3,
  "names": [
    "insertTextAtPosition",
    "bold",
    "code",
    "codeBlock",
    "comment",
    "divider",
    "fullscreen",
    "group",
    "hr",
    "image",
    "italic",
    "link",
    "checkedListCommand",
    "orderedListCommand",
    "unorderedListCommand",
    "codeEdit",
    "codeLive",
    "codePreview",
    "quote",
    "strikethrough",
    "title",
    "title1",
    "title2",
    "title3",
    "title4",
    "title5",
    "title6",
    "getCommands",
    "name",
    "groupName",
    "buttonProps",
    "getExtraCommands",
    "getStateFromTextArea",
    "textArea",
    "selection",
    "start",
    "selectionStart",
    "end",
    "selectionEnd",
    "text",
    "value",
    "selectedText",
    "slice",
    "TextAreaTextApi",
    "constructor",
    "replaceSelection",
    "setSelectionRange",
    "focus",
    "TextAreaCommandOrchestrator",
    "textApi",
    "getState",
    "executeCommand",
    "command",
    "dispatch",
    "state",
    "shortcuts",
    "execute"
  ],
  "sources": [
    "../../src/commands/index.ts"
  ],
  "sourcesContent": [
    "import React from 'react';\nimport { ContextStore, ExecuteCommandState } from '../Context';\nimport { insertTextAtPosition } from '../utils/InsertTextAtPosition';\nimport { bold } from './bold';\nimport { code, codeBlock } from './code';\nimport { comment } from './comment';\nimport { divider } from './divider';\nimport { fullscreen } from './fullscreen';\nimport { group } from './group';\nimport { hr } from './hr';\nimport { image } from './image';\nimport { italic } from './italic';\nimport { link } from './link';\nimport { checkedListCommand, orderedListCommand, unorderedListCommand } from './list';\nimport { codeEdit, codeLive, codePreview } from './preview';\nimport { quote } from './quote';\nimport { strikethrough } from './strikeThrough';\nimport { title } from './title';\nimport { title1 } from './title1';\nimport { title2 } from './title2';\nimport { title3 } from './title3';\nimport { title4 } from './title4';\nimport { title5 } from './title5';\nimport { title6 } from './title6';\n\nexport interface CommandOrchestrator {\n  executeCommand(command: ICommand): void;\n}\n\nexport interface ICommandChildHandle<T = string> extends ICommandBase<T> {\n  children?: (handle: {\n    close: () => void;\n    execute: () => void;\n    getState?: TextAreaCommandOrchestrator['getState'];\n    textApi?: TextAreaTextApi;\n  }) => React.ReactElement;\n}\n\nexport interface ICommandChildCommands<T = string> extends ICommandBase<T> {\n  children?: Array<ICommand<T>>;\n}\n\nexport interface ICommandBase<T> {\n  parent?: ICommand<any>;\n  keyCommand?: string;\n  name?: string;\n  shortcuts?: string;\n  groupName?: string;\n  icon?: React.ReactElement;\n  value?: T;\n  position?: 'right';\n  liProps?: React.LiHTMLAttributes<HTMLLIElement>;\n  buttonProps?: React.ButtonHTMLAttributes<HTMLButtonElement> | null;\n  render?: (\n    command: ICommand<T>,\n    disabled: boolean,\n    executeCommand: (command: ICommand<T>, name?: string) => void,\n    index: number,\n  ) => void | undefined | null | React.ReactElement;\n  execute?: (\n    state: TextState,\n    api: TextAreaTextApi,\n    dispatch?: React.Dispatch<ContextStore>,\n    executeCommandState?: ExecuteCommandState,\n    shortcuts?: string[],\n  ) => void;\n}\n\nexport type ICommand<T = string> = ICommandChildCommands<T> | ICommandChildHandle<T>;\n\nexport interface TextRange {\n  start: number;\n  end: number;\n}\n\nexport interface TextState {\n  text: string;\n  selectedText: string;\n  selection: TextRange;\n}\n\nconst getCommands: () => ICommand[] = () => [\n  bold,\n  italic,\n  strikethrough,\n  hr,\n  group([title1, title2, title3, title4, title5, title6], {\n    name: 'title',\n    groupName: 'title',\n    buttonProps: { 'aria-label': 'Insert title', title: 'Insert title' },\n  }),\n  divider,\n  link,\n  quote,\n  code,\n  codeBlock,\n  comment,\n  image,\n  divider,\n  unorderedListCommand,\n  orderedListCommand,\n  checkedListCommand,\n];\n\nconst getExtraCommands: () => ICommand[] = () => [codeEdit, codeLive, codePreview, divider, fullscreen];\n\nfunction getStateFromTextArea(textArea: HTMLTextAreaElement): TextState {\n  return {\n    selection: {\n      start: textArea.selectionStart,\n      end: textArea.selectionEnd,\n    },\n    text: textArea.value,\n    selectedText: textArea.value?.slice(textArea.selectionStart, textArea.selectionEnd),\n  };\n}\n\nclass TextAreaTextApi {\n  textArea: HTMLTextAreaElement;\n\n  constructor(textArea: HTMLTextAreaElement) {\n    this.textArea = textArea;\n  }\n\n  /**\n   * Replaces the current selection with the new text. This will make the new selectedText to be empty, the\n   * selection start and selection end will be the same and will both point to the end\n   * @param text Text that should replace the current selection\n   */\n  replaceSelection(text: string): TextState {\n    insertTextAtPosition(this.textArea, text);\n    return getStateFromTextArea(this.textArea);\n  }\n\n  /**\n   * Selects the specified text range\n   * @param selection\n   */\n  setSelectionRange(selection: TextRange): TextState {\n    this.textArea.focus();\n    this.textArea.selectionStart = selection.start;\n    this.textArea.selectionEnd = selection.end;\n    return getStateFromTextArea(this.textArea);\n  }\n}\n\nclass TextAreaCommandOrchestrator implements CommandOrchestrator {\n  textArea: HTMLTextAreaElement;\n  textApi: TextAreaTextApi;\n\n  constructor(textArea: HTMLTextAreaElement) {\n    this.textArea = textArea;\n    this.textApi = new TextAreaTextApi(textArea);\n  }\n\n  getState() {\n    if (!this.textArea) return false;\n    return getStateFromTextArea(this.textArea);\n  }\n\n  executeCommand(\n    command: ICommand<string>,\n    dispatch?: React.Dispatch<ContextStore>,\n    state?: ExecuteCommandState,\n    shortcuts?: string[],\n  ): void {\n    command.execute && command.execute(getStateFromTextArea(this.textArea), this.textApi, dispatch, state, shortcuts);\n  }\n}\n\nexport {\n  title,\n  title1,\n  title2,\n  title3,\n  title4,\n  title5,\n  title6,\n  bold,\n  codeBlock,\n  comment,\n  italic,\n  strikethrough,\n  hr,\n  group,\n  divider,\n  link,\n  quote,\n  code,\n  image,\n  unorderedListCommand,\n  orderedListCommand,\n  checkedListCommand,\n  codeEdit,\n  codeLive,\n  codePreview,\n  fullscreen,\n  // Tool method.\n  getCommands,\n  getExtraCommands,\n  getStateFromTextArea,\n  TextAreaCommandOrchestrator,\n  TextAreaTextApi,\n};\n"
  ],
  "mappings": "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"
}