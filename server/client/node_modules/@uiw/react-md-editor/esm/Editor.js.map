{
  "version": 3,
  "names": [
    "React",
    "useEffect",
    "useReducer",
    "useMemo",
    "useRef",
    "useImperativeHandle",
    "MarkdownPreview",
    "TextArea",
    "Toolbar",
    "DragBar",
    "getCommands",
    "getExtraCommands",
    "reducer",
    "EditorContext",
    "setGroupPopFalse",
    "data",
    "Object",
    "keys",
    "forEach",
    "keyname",
    "InternalMDEditor",
    "props",
    "ref",
    "prefixCls",
    "className",
    "value",
    "propsValue",
    "commands",
    "commandsFilter",
    "direction",
    "extraCommands",
    "height",
    "enableScroll",
    "visibleDragbar",
    "visiableDragbar",
    "highlightEnable",
    "preview",
    "previewType",
    "fullscreen",
    "overflow",
    "previewOptions",
    "textareaProps",
    "maxHeight",
    "minHeight",
    "autoFocus",
    "tabSize",
    "defaultTabEnable",
    "onChange",
    "onHeightChange",
    "hideToolbar",
    "toolbarBottom",
    "components",
    "renderTextarea",
    "other",
    "cmds",
    "map",
    "item",
    "filter",
    "Boolean",
    "extraCmds",
    "state",
    "dispatch",
    "markdown",
    "scrollTop",
    "scrollTopPreview",
    "barPopup",
    "container",
    "previewRef",
    "enableScrollRef",
    "current",
    "stateInit",
    "undefined",
    "cls",
    "join",
    "trim",
    "textareaDomRef",
    "active",
    "initScroll",
    "textareaWarp",
    "addEventListener",
    "handleScroll",
    "e",
    "type",
    "textareaDom",
    "previewDom",
    "scale",
    "scrollHeight",
    "offsetHeight",
    "target",
    "previewClassName",
    "handlePreviewScroll",
    "mdPreview",
    "isValidElement",
    "containerStyle",
    "style",
    "containerClick",
    "dragBarChange",
    "newHeight",
    "test",
    "evn",
    "textarea",
    "mdEditor",
    "forwardRef",
    "Markdown"
  ],
  "sources": [
    "../src/Editor.tsx"
  ],
  "sourcesContent": [
    "import React, { useEffect, useReducer, useMemo, useRef, useImperativeHandle, CSSProperties, PropsWithRef } from 'react';\nimport MarkdownPreview, { MarkdownPreviewProps } from '@uiw/react-markdown-preview';\nimport TextArea, { ITextAreaProps } from './components/TextArea';\nimport Toolbar from './components/Toolbar';\nimport DragBar from './components/DragBar';\nimport { getCommands, getExtraCommands, ICommand } from './commands';\nimport { reducer, EditorContext, ContextStore, PreviewType } from './Context';\nimport './index.less';\n\nexport interface IProps {\n  prefixCls?: string;\n  className?: string;\n}\n\nexport interface MDEditorProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'>, IProps {\n  /**\n   * The Markdown value.\n   */\n  value?: string;\n  /**\n   * Event handler for the `onChange` event.\n   */\n  onChange?: (value?: string, event?: React.ChangeEvent<HTMLTextAreaElement>, state?: ContextStore) => void;\n  /**\n   * editor height change listener\n   */\n  onHeightChange?: (value?: CSSProperties['height'], oldValue?: CSSProperties['height'], state?: ContextStore) => void;\n  /**\n   * Can be used to make `Markdown Editor` focus itself on initialization. Defaults to on.\n   * it will be set to true when either the source `textarea` is focused,\n   * or it has an `autofocus` attribute and no other element is focused.\n   */\n  autoFocus?: ITextAreaProps['autoFocus'];\n  /**\n   * The height of the editor.\n   * ⚠️ `Dragbar` is invalid when **`height`** parameter percentage.\n   */\n  height?: CSSProperties['height'];\n  /**\n   * Custom toolbar heigth\n   * @default 29px\n   *\n   * @deprecated toolbar height adaptive: https://github.com/uiwjs/react-md-editor/issues/427\n   *\n   */\n  toolbarHeight?: number;\n  /**\n   * Show drag and drop tool. Set the height of the editor.\n   */\n  visibleDragbar?: boolean;\n  /**\n   * @deprecated use `visibleDragbar`\n   */\n  visiableDragbar?: boolean;\n  /**\n   * Show markdown preview.\n   */\n  preview?: PreviewType;\n  /**\n   * Full screen display editor.\n   */\n  fullscreen?: boolean;\n  /**\n   * Disable `fullscreen` setting body styles\n   */\n  overflow?: boolean;\n  /**\n   * Maximum drag height. `visibleDragbar=true`\n   */\n  maxHeight?: number;\n  /**\n   * Minimum drag height. `visibleDragbar=true`\n   */\n  minHeight?: number;\n  /**\n   * This is reset [react-markdown](https://github.com/rexxars/react-markdown) settings.\n   */\n  previewOptions?: Omit<MarkdownPreviewProps, 'source'>;\n  /**\n   * Set the `textarea` related props.\n   */\n  textareaProps?: ITextAreaProps;\n  /**\n   * Use div to replace TextArea or re-render TextArea\n   * @deprecated Please use ~~`renderTextarea`~~ -> `components`\n   */\n  renderTextarea?: ITextAreaProps['renderTextarea'];\n  /**\n   * re-render element\n   */\n  components?: {\n    /** Use div to replace TextArea or re-render TextArea */\n    textarea?: ITextAreaProps['renderTextarea'];\n    /**\n     * Override the default command element\n     * _`toolbar`_ < _`command[].render`_\n     */\n    toolbar?: ICommand['render'];\n    /** Custom markdown preview */\n    preview?: (source: string, state: ContextStore, dispath: React.Dispatch<ContextStore>) => JSX.Element;\n  };\n  /** Theme configuration */\n  'data-color-mode'?: 'light' | 'dark';\n  /**\n   * Disable editing area code highlighting. The value is `false`, which increases the editing speed.\n   * @default true\n   */\n  highlightEnable?: boolean;\n  /**\n   * The number of characters to insert when pressing tab key.\n   * Default `2` spaces.\n   */\n  tabSize?: number;\n  /**\n   * If `false`, the `tab` key inserts a tab character into the textarea. If `true`, the `tab` key executes default behavior e.g. focus shifts to next element.\n   */\n  defaultTabEnable?: boolean;\n  /**\n   * You can create your own commands or reuse existing commands.\n   */\n  commands?: ICommand[];\n  /**\n   * Filter or modify your commands.\n   * https://github.com/uiwjs/react-md-editor/issues/296\n   */\n  commandsFilter?: (command: ICommand, isExtra: boolean) => false | ICommand;\n  /**\n   * You can create your own commands or reuse existing commands.\n   */\n  extraCommands?: ICommand[];\n  /**\n   * Hide the tool bar\n   */\n  hideToolbar?: boolean;\n  /** Whether to enable scrolling */\n  enableScroll?: boolean;\n  /** Toolbar on bottom */\n  toolbarBottom?: boolean;\n  /**\n   * The **`direction`** property sets the direction of text, table columns, and horizontal overflow. Use `rtl` for languages written from right to left (like Hebrew or Arabic), and `ltr` for those written from left to right (like English and most other languages).\n   *\n   * https://github.com/uiwjs/react-md-editor/issues/462\n   */\n  direction?: CSSProperties['direction'];\n}\n\nfunction setGroupPopFalse(data: Record<string, boolean> = {}) {\n  Object.keys(data).forEach((keyname) => {\n    data[keyname] = false;\n  });\n  return data;\n}\n\nconst InternalMDEditor = (\n  props: MDEditorProps,\n  ref?: ((instance: ContextStore) => void) | React.RefObject<ContextStore> | null,\n) => {\n  const {\n    prefixCls = 'w-md-editor',\n    className,\n    value: propsValue,\n    commands = getCommands(),\n    commandsFilter,\n    direction,\n    extraCommands = getExtraCommands(),\n    height = 200,\n    enableScroll = true,\n    visibleDragbar = typeof props.visiableDragbar === 'boolean' ? props.visiableDragbar : true,\n    highlightEnable = true,\n    preview: previewType = 'live',\n    fullscreen = false,\n    overflow = true,\n    previewOptions = {},\n    textareaProps,\n    maxHeight = 1200,\n    minHeight = 100,\n    autoFocus,\n    tabSize = 2,\n    defaultTabEnable = false,\n    onChange,\n    onHeightChange,\n    hideToolbar,\n    toolbarBottom = false,\n    components,\n    renderTextarea,\n    ...other\n  } = props || {};\n  const cmds = commands\n    .map((item) => (commandsFilter ? commandsFilter(item, false) : item))\n    .filter(Boolean) as ICommand[];\n  const extraCmds = extraCommands\n    .map((item) => (commandsFilter ? commandsFilter(item, true) : item))\n    .filter(Boolean) as ICommand[];\n  let [state, dispatch] = useReducer(reducer, {\n    markdown: propsValue,\n    preview: previewType,\n    components,\n    height,\n    highlightEnable,\n    tabSize,\n    defaultTabEnable,\n    scrollTop: 0,\n    scrollTopPreview: 0,\n    commands: cmds,\n    extraCommands: extraCmds,\n    fullscreen,\n    barPopup: {},\n  });\n  const container = useRef<HTMLDivElement>(null);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const enableScrollRef = useRef(enableScroll);\n\n  useImperativeHandle(ref, () => ({ ...state }));\n  useMemo(() => (enableScrollRef.current = enableScroll), [enableScroll]);\n  useEffect(() => {\n    const stateInit: ContextStore = {};\n    if (container.current) {\n      stateInit.container = container.current || undefined;\n    }\n    stateInit.markdown = propsValue || '';\n    stateInit.barPopup = {};\n    if (dispatch) {\n      dispatch({ ...state, ...stateInit });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const cls = [\n    className,\n    'wmde-markdown-var',\n    direction ? `${prefixCls}-${direction}` : null,\n    prefixCls,\n    state.preview ? `${prefixCls}-show-${state.preview}` : null,\n    state.fullscreen ? `${prefixCls}-fullscreen` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  useMemo(\n    () => propsValue !== state.markdown && dispatch({ markdown: propsValue || '' }),\n    [propsValue, state.markdown],\n  );\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => previewType !== state.preview && dispatch({ preview: previewType }), [previewType]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => tabSize !== state.tabSize && dispatch({ tabSize }), [tabSize]);\n  useMemo(\n    () => highlightEnable !== state.highlightEnable && dispatch({ highlightEnable }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [highlightEnable],\n  );\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => autoFocus !== state.autoFocus && dispatch({ autoFocus: autoFocus }), [autoFocus]);\n  useMemo(\n    () => fullscreen !== state.fullscreen && dispatch({ fullscreen: fullscreen }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fullscreen],\n  );\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => height !== state.height && dispatch({ height: height }), [height]);\n  useMemo(\n    () => height !== state.height && onHeightChange && onHeightChange(state.height, height, state),\n    [height, onHeightChange, state],\n  );\n\n  const textareaDomRef = useRef<HTMLDivElement>();\n  const active = useRef<'text' | 'preview'>('preview');\n  const initScroll = useRef(false);\n\n  useMemo(() => {\n    textareaDomRef.current = state.textareaWarp;\n    if (state.textareaWarp) {\n      state.textareaWarp.addEventListener('mouseover', () => {\n        active.current = 'text';\n      });\n      state.textareaWarp.addEventListener('mouseleave', () => {\n        active.current = 'preview';\n      });\n    }\n  }, [state.textareaWarp]);\n\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>, type: 'text' | 'preview') => {\n    if (!enableScrollRef.current) return;\n    const textareaDom = textareaDomRef.current;\n    const previewDom = previewRef.current ? previewRef.current : undefined;\n    if (!initScroll.current) {\n      active.current = type;\n      initScroll.current = true;\n    }\n    if (textareaDom && previewDom) {\n      const scale =\n        (textareaDom.scrollHeight - textareaDom.offsetHeight) / (previewDom.scrollHeight - previewDom.offsetHeight);\n      if (e.target === textareaDom && active.current === 'text') {\n        previewDom.scrollTop = textareaDom.scrollTop / scale;\n      }\n      if (e.target === previewDom && active.current === 'preview') {\n        textareaDom.scrollTop = previewDom.scrollTop * scale;\n      }\n      let scrollTop = 0;\n      if (active.current === 'text') {\n        scrollTop = textareaDom.scrollTop || 0;\n      } else if (active.current === 'preview') {\n        scrollTop = previewDom.scrollTop || 0;\n      }\n      dispatch({ scrollTop });\n    }\n  };\n\n  const previewClassName = `${prefixCls}-preview ${previewOptions.className || ''}`;\n  const handlePreviewScroll = (e: React.UIEvent<HTMLDivElement, UIEvent>) => handleScroll(e, 'preview');\n  let mdPreview = useMemo(\n    () => (\n      <div ref={previewRef} className={previewClassName}>\n        <MarkdownPreview {...previewOptions} onScroll={handlePreviewScroll} source={state.markdown || ''} />\n      </div>\n    ),\n    [previewClassName, previewOptions, state.markdown],\n  );\n  const preview = components?.preview && components?.preview(state.markdown || '', state, dispatch);\n  if (preview && React.isValidElement(preview)) {\n    mdPreview = (\n      <div className={previewClassName} ref={previewRef} onScroll={handlePreviewScroll}>\n        {preview}\n      </div>\n    );\n  }\n\n  const containerStyle = { ...other.style, height: state.height || '100%' };\n  const containerClick = () => dispatch({ barPopup: { ...setGroupPopFalse(state.barPopup) } });\n  const dragBarChange = (newHeight: number) => dispatch({ height: newHeight });\n\n  return (\n    <EditorContext.Provider value={{ ...state, dispatch }}>\n      <div ref={container} className={cls} {...other} onClick={containerClick} style={containerStyle}>\n        {!hideToolbar && !toolbarBottom && (\n          <Toolbar prefixCls={prefixCls} overflow={overflow} toolbarBottom={toolbarBottom} />\n        )}\n        <div className={`${prefixCls}-content`}>\n          {/(edit|live)/.test(state.preview || '') && (\n            <TextArea\n              className={`${prefixCls}-input`}\n              prefixCls={prefixCls}\n              autoFocus={autoFocus}\n              {...textareaProps}\n              onChange={(evn) => {\n                onChange && onChange(evn.target.value, evn, state);\n                if (textareaProps && textareaProps.onChange) {\n                  textareaProps.onChange(evn);\n                }\n              }}\n              renderTextarea={components?.textarea || renderTextarea}\n              onScroll={(e) => handleScroll(e, 'text')}\n            />\n          )}\n          {/(live|preview)/.test(state.preview || '') && mdPreview}\n        </div>\n        {visibleDragbar && !state.fullscreen && (\n          <DragBar\n            prefixCls={prefixCls}\n            height={state.height as number}\n            maxHeight={maxHeight!}\n            minHeight={minHeight!}\n            onChange={dragBarChange}\n          />\n        )}\n        {!hideToolbar && toolbarBottom && (\n          <Toolbar prefixCls={prefixCls} overflow={overflow} toolbarBottom={toolbarBottom} />\n        )}\n      </div>\n    </EditorContext.Provider>\n  );\n};\n\ntype Editor = React.FC<PropsWithRef<MDEditorProps>> & { Markdown: typeof MarkdownPreview };\n\nconst mdEditor: Editor = React.forwardRef(InternalMDEditor) as unknown as Editor;\n\nmdEditor.Markdown = MarkdownPreview;\n\nexport default mdEditor;\n"
  ],
  "mappings": "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"
}