{
  "version": 3,
  "names": [
    "React",
    "useContext",
    "useMemo",
    "Toolbar",
    "EditorContext",
    "Child",
    "props",
    "prefixCls",
    "groupName",
    "commands",
    "children",
    "barPopup",
    "e",
    "stopPropagation",
    "Array",
    "isArray"
  ],
  "sources": [
    "../../../src/components/Toolbar/Child.tsx"
  ],
  "sourcesContent": [
    "import React, { useContext, useMemo } from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\nimport { EditorContext } from '../../Context';\n\nexport type ChildProps = IToolbarProps & {\n  children?: JSX.Element;\n  groupName?: string;\n};\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, groupName, commands, children } = props || {};\n  const { barPopup = {} } = useContext(EditorContext);\n  return useMemo(\n    () => (\n      <div\n        className={`${prefixCls}-toolbar-child ${groupName && barPopup[groupName] ? 'active' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {Array.isArray(commands) ? <Toolbar commands={commands} {...props} isChild /> : children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [commands, barPopup, groupName, prefixCls],\n  );\n}\n"
  ],
  "mappings": ";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD;AACA,OAAOC,OAAO,MAAyB,IAAI;AAC3C,SAASC,aAAa,QAAQ,eAAe;AAAC;AAO9C,eAAe,SAASC,KAAK,CAACC,KAAiB,EAAE;EAC/C,IAAM;IAAEC,SAAS;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGJ,KAAK,IAAI,CAAC,CAAC;EAChE,IAAM;IAAEK,QAAQ,GAAG,CAAC;EAAE,CAAC,GAAGV,UAAU,CAACG,aAAa,CAAC;EACnD,OAAOF,OAAO,CACZ,mBACE;IACE,SAAS,EAAKK,SAAS,wBAAkBC,SAAS,IAAIG,QAAQ,CAACH,SAAS,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAG;IAC5F,OAAO,EAAGI,CAAC,IAAKA,CAAC,CAACC,eAAe,EAAG;IAAA,UAEnCC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAAC,gBAAG,KAAC,OAAO;MAAC,QAAQ,EAAEA;IAAS,GAAKH,KAAK;MAAE,OAAO;IAAA,GAAG,GAAGI;EAAQ,EAE3F;EACD;EACA,CAACD,QAAQ,EAAEE,QAAQ,EAAEH,SAAS,EAAED,SAAS,CAAC,CAC3C;AACH"
}